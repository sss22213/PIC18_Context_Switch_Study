

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr 21 22:21:31 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _LATA	set	3977
    24  0000                     _LATB	set	3978
    25  0000                     _LATC	set	3979
    26  0000                     _LATD	set	3980
    27  0000                     _PORTA	set	3968
    28  0000                     _PORTB	set	3969
    29  0000                     _PORTC	set	3970
    30  0000                     _PORTD	set	3971
    31  0000                     _T1CON	set	4045
    32  0000                     _TMR1H	set	4047
    33  0000                     _TMR1L	set	4046
    34  0000                     _TOSH	set	4094
    35  0000                     _TOSL	set	4093
    36  0000                     _TOSU	set	4095
    37  0000                     _TRISA	set	3986
    38  0000                     _TRISB	set	3987
    39  0000                     _TRISC	set	3988
    40  0000                     _TRISD	set	3989
    41  0000                     _GIEH	set	32663
    42  0000                     _IPEN	set	32391
    43  0000                     _TMR1IE	set	31976
    44  0000                     _TMR1IF	set	31984
    45  0000                     _TMR1IP	set	31992
    46                           
    47 ;;
    48 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    49 ;;
    50 ;; *************** function _main *****************
    51 ;; Defined at:
    52 ;;		line 30 in file "main.c"
    53 ;; Parameters:    Size  Location     Type
    54 ;;		None
    55 ;; Auto vars:     Size  Location     Type
    56 ;;  t2             19   76[COMRAM] struct _task
    57 ;;  t1             19   57[COMRAM] struct _task
    58 ;; Return value:  Size  Location     Type
    59 ;;                  2   58[COMRAM] int 
    60 ;; Registers used:
    61 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
    62 ;; Tracked objects:
    63 ;;		On entry : 0/0
    64 ;;		On exit  : 0/0
    65 ;;		Unchanged: 0/0
    66 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    67 ;;      Params:         0       0       0       0       0       0       0
    68 ;;      Locals:        38       0       0       0       0       0       0
    69 ;;      Temps:          0       0       0       0       0       0       0
    70 ;;      Totals:        38       0       0       0       0       0       0
    71 ;;Total ram usage:       38 bytes
    72 ;; Hardware stack levels required when called:    3
    73 ;; This function calls:
    74 ;;		_TASK_Init
    75 ;;		_Task_Create
    76 ;;		_Task_Empty
    77 ;;		_func1
    78 ;;		_func2
    79 ;; This function is called by:
    80 ;;		Startup code after reset
    81 ;; This function uses a non-reentrant model
    82 ;;
    83                           
    84                           	psect	text0
    85  0001B4                     __ptext0:
    86                           	opt stack 0
    87  0001B4                     _main:
    88                           	opt stack 28
    89                           
    90                           ;main.c: 32: task t1;
    91                           ;main.c: 33: task t2;
    92                           ;main.c: 34: t1=Task_Create(func1);
    93                           
    94                           ;incstack = 0
    95  0001B4  0E05               	movlw	high _func1
    96  0001B6  6E12               	movwf	Task_Create@func1+1,c
    97  0001B8  0E72               	movlw	low _func1
    98  0001BA  6E11               	movwf	Task_Create@func1,c
    99  0001BC  EC5F  F002         	call	_Task_Create	;wreg free
   100  0001C0  EE20  F03A         	lfsr	2,main@t1
   101  0001C4  0E13               	movlw	19
   102  0001C6                     u101:
   103  0001C6  CFEE FFDE          	movff	postinc0,postinc2
   104  0001CA  2EE8               	decfsz	wreg,f,c
   105  0001CC  D7FC               	goto	u101
   106                           
   107                           ;main.c: 35: t2=Task_Create(func2);
   108  0001CE  0E05               	movlw	high _func2
   109  0001D0  6E12               	movwf	Task_Create@func1+1,c
   110  0001D2  0E82               	movlw	low _func2
   111  0001D4  6E11               	movwf	Task_Create@func1,c
   112  0001D6  EC5F  F002         	call	_Task_Create	;wreg free
   113  0001DA  EE20  F04D         	lfsr	2,main@t2
   114  0001DE  0E13               	movlw	19
   115  0001E0                     u111:
   116  0001E0  CFEE FFDE          	movff	postinc0,postinc2
   117  0001E4  2EE8               	decfsz	wreg,f,c
   118  0001E6  D7FC               	goto	u111
   119                           
   120                           ;main.c: 36: tt[0]=t1;
   121  0001E8  EE20  F03A         	lfsr	2,main@t1
   122  0001EC  EE10  F080         	lfsr	1,_tt
   123  0001F0  0E13               	movlw	19
   124  0001F2                     u121:
   125  0001F2  CFDE FFE6          	movff	postinc2,postinc1
   126  0001F6  2EE8               	decfsz	wreg,f,c
   127  0001F8  D7FC               	goto	u121
   128                           
   129                           ;main.c: 37: tt[1]=t2;
   130  0001FA  EE20  F04D         	lfsr	2,main@t2
   131  0001FE  EE10  F093         	lfsr	1,_tt+19
   132  000202  0E13               	movlw	19
   133  000204                     u131:
   134  000204  CFDE FFE6          	movff	postinc2,postinc1
   135  000208  2EE8               	decfsz	wreg,f,c
   136  00020A  D7FC               	goto	u131
   137                           
   138                           ;main.c: 38: Task_Empty();
   139  00020C  EC7A  F002         	call	_Task_Empty	;wreg free
   140                           
   141                           ;main.c: 39: TASK_Init(&tt[0]);
   142  000210  0100               	movlb	0	; () banked
   143  000212  0E00               	movlw	high _tt
   144  000214  6E12               	movwf	TASK_Init@task1+1,c
   145  000216  0100               	movlb	0	; () banked
   146  000218  0E80               	movlw	low _tt
   147  00021A  6E11               	movwf	TASK_Init@task1,c
   148  00021C  EC3C  F001         	call	_TASK_Init	;wreg free
   149                           
   150                           ;main.c: 40: TASK_Init(&tt[1]);
   151  000220  0100               	movlb	0	; () banked
   152  000222  0E00               	movlw	high (_tt+19)
   153  000224  6E12               	movwf	TASK_Init@task1+1,c
   154  000226  0100               	movlb	0	; () banked
   155  000228  0E93               	movlw	low (_tt+19)
   156  00022A  6E11               	movwf	TASK_Init@task1,c
   157  00022C  EC3C  F001         	call	_TASK_Init	;wreg free
   158                           
   159                           ;main.c: 42: index=0;
   160  000230  0E00               	movlw	0
   161  000232  6E61               	movwf	_index,c
   162                           
   163                           ;main.c: 45: T1CON=0B11111101;
   164  000234  0EFD               	movlw	253
   165  000236  6ECD               	movwf	4045,c	;volatile
   166                           
   167                           ;main.c: 46: TMR1H=(65536-10)/256;
   168  000238  68CF               	setf	4047,c	;volatile
   169                           
   170                           ;main.c: 47: TMR1L=(65536-10)%256;
   171  00023A  0EF6               	movlw	246
   172  00023C  6ECE               	movwf	4046,c	;volatile
   173                           
   174                           ;main.c: 48: TMR1IF=0;
   175  00023E  909E               	bcf	3998,0,c	;volatile
   176                           
   177                           ;main.c: 49: TMR1IP=1;
   178  000240  809F               	bsf	3999,0,c	;volatile
   179                           
   180                           ;main.c: 50: TMR1IE=1;
   181  000242  809D               	bsf	3997,0,c	;volatile
   182                           
   183                           ;main.c: 51: IPEN=1;
   184  000244  8ED0               	bsf	4048,7,c	;volatile
   185                           
   186                           ;main.c: 52: GIEH=1;
   187  000246  8EF2               	bsf	intcon,7,c	;volatile
   188  000248                     l893:
   189                           
   190                           ;main.c: 55: {
   191                           ;main.c: 56: tt[index].func();
   192  000248  5061               	movf	_index,w,c
   193  00024A  0D13               	mullw	19
   194  00024C  0100               	movlb	0	; () banked
   195  00024E  0E80               	movlw	low _tt
   196  000250  24F3               	addwf	prodl,w,c
   197  000252  6ED9               	movwf	fsr2l,c
   198  000254  0100               	movlb	0	; () banked
   199  000256  0E00               	movlw	high _tt
   200  000258  20F4               	addwfc	prodh,w,c
   201  00025A  6EDA               	movwf	fsr2h,c
   202  00025C  D801               	call	u148
   203  00025E  D00A               	goto	u149
   204  000260                     u148:
   205  000260  0005               	push	
   206  000262  6EFA               	movwf	pclath,c
   207  000264  50DE               	movf	postinc2,w,c
   208  000266  6EFD               	movwf	tosl,c
   209  000268  50DE               	movf	postinc2,w,c
   210  00026A  6EFE               	movwf	tosh,c
   211  00026C  50F8               	movf	tblptru,w,c
   212  00026E  6EFF               	movwf	tosu,c
   213  000270  50FA               	movf	pclath,w,c
   214  000272  0012               	return		;indir
   215  000274                     u149:
   216                           
   217                           ;main.c: 57: __nop();
   218  000274  F000               	nop	
   219  000276  D7E8               	goto	l893
   220  000278                     __end_of_main:
   221                           	opt stack 0
   222                           tosu	equ	0xFFF
   223                           tosh	equ	0xFFE
   224                           tosl	equ	0xFFD
   225                           pclath	equ	0xFFA
   226                           tblptru	equ	0xFF8
   227                           prodh	equ	0xFF4
   228                           prodl	equ	0xFF3
   229                           intcon	equ	0xFF2
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postinc1	equ	0xFE6
   233                           postinc2	equ	0xFDE
   234                           fsr2h	equ	0xFDA
   235                           fsr2l	equ	0xFD9
   236                           
   237                           	psect	cinit
   238  000558                     __pcinit:
   239                           	opt stack 0
   240  000558                     start_initialization:
   241                           	opt stack 0
   242  000558                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (38 bytes)
   246  000558  EE00  F080         	lfsr	0,__pbssBANK0
   247  00055C  0E26               	movlw	38
   248  00055E                     clear_0:
   249  00055E  6AEE               	clrf	postinc0,c
   250  000560  06E8               	decf	wreg,f,c
   251  000562  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to COMRAM (2 bytes)
   254  000564  6A61               	clrf	(__pbssCOMRAM+1)& (0+255),c
   255  000566  6A60               	clrf	__pbssCOMRAM& (0+255),c
   256  000568                     end_of_initialization:
   257                           	opt stack 0
   258  000568                     __end_of__initialization:
   259                           	opt stack 0
   260  000568  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  00056A  6EF8               	movwf	tblptru,c
   262  00056C  0100               	movlb	0
   263  00056E  EFDA  F000         	goto	_main	;jump to C main() function
   264                           tosu	equ	0xFFF
   265                           tosh	equ	0xFFE
   266                           tosl	equ	0xFFD
   267                           pclath	equ	0xFFA
   268                           tblptru	equ	0xFF8
   269                           prodh	equ	0xFF4
   270                           prodl	equ	0xFF3
   271                           intcon	equ	0xFF2
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postinc1	equ	0xFE6
   275                           postinc2	equ	0xFDE
   276                           fsr2h	equ	0xFDA
   277                           fsr2l	equ	0xFD9
   278                           
   279                           	psect	bssCOMRAM
   280  000060                     __pbssCOMRAM:
   281                           	opt stack 0
   282  000060                     _Stack_Sav:
   283                           	opt stack 0
   284  000060                     	ds	1
   285  000061                     _index:
   286                           	opt stack 0
   287  000061                     	ds	1
   288                           tosu	equ	0xFFF
   289                           tosh	equ	0xFFE
   290                           tosl	equ	0xFFD
   291                           pclath	equ	0xFFA
   292                           tblptru	equ	0xFF8
   293                           prodh	equ	0xFF4
   294                           prodl	equ	0xFF3
   295                           intcon	equ	0xFF2
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postinc1	equ	0xFE6
   299                           postinc2	equ	0xFDE
   300                           fsr2h	equ	0xFDA
   301                           fsr2l	equ	0xFD9
   302                           
   303                           	psect	bssBANK0
   304  000080                     __pbssBANK0:
   305                           	opt stack 0
   306  000080                     _tt:
   307                           	opt stack 0
   308  000080                     	ds	38
   309                           tosu	equ	0xFFF
   310                           tosh	equ	0xFFE
   311                           tosl	equ	0xFFD
   312                           pclath	equ	0xFFA
   313                           tblptru	equ	0xFF8
   314                           prodh	equ	0xFF4
   315                           prodl	equ	0xFF3
   316                           intcon	equ	0xFF2
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postinc1	equ	0xFE6
   320                           postinc2	equ	0xFDE
   321                           fsr2h	equ	0xFDA
   322                           fsr2l	equ	0xFD9
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	opt stack 0
   327  000001                     Task_Save@task1:
   328                           	opt stack 0
   329  000001                     TASK_Restore@task1:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000001                     	ds	2
   334  000003                     ??_HighInt:
   335                           
   336                           ; 0 bytes @ 0x2
   337  000003                     	ds	14
   338  000011                     ?_Task_Create:
   339                           	opt stack 0
   340  000011                     Task_Create@func1:
   341                           	opt stack 0
   342  000011                     TASK_Init@task1:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x10
   346  000011                     	ds	2
   347  000013                     
   348                           ; 0 bytes @ 0x12
   349  000013                     	ds	17
   350  000024                     ??_Task_Create:
   351                           
   352                           ; 0 bytes @ 0x23
   353  000024                     	ds	3
   354  000027                     Task_Create@new_task:
   355                           	opt stack 0
   356                           
   357                           ; 19 bytes @ 0x26
   358  000027                     	ds	19
   359  00003A                     main@t1:
   360                           	opt stack 0
   361                           
   362                           ; 19 bytes @ 0x39
   363  00003A                     	ds	19
   364  00004D                     main@t2:
   365                           	opt stack 0
   366                           
   367                           ; 19 bytes @ 0x4C
   368  00004D                     	ds	19
   369                           tosu	equ	0xFFF
   370                           tosh	equ	0xFFE
   371                           tosl	equ	0xFFD
   372                           pclath	equ	0xFFA
   373                           tblptru	equ	0xFF8
   374                           prodh	equ	0xFF4
   375                           prodl	equ	0xFF3
   376                           intcon	equ	0xFF2
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postinc1	equ	0xFE6
   380                           postinc2	equ	0xFDE
   381                           fsr2h	equ	0xFDA
   382                           fsr2l	equ	0xFD9
   383                           
   384 ;; *************** function _func1 *****************
   385 ;; Defined at:
   386 ;;		line 17 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;		None               void
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   400 ;;      Params:         0       0       0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0
   403 ;;      Totals:         0       0       0       0       0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    2
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text1
   415  000572                     __ptext1:
   416                           	opt stack 0
   417  000572                     _func1:
   418                           	opt stack 28
   419                           
   420                           ;main.c: 19: TRISB=0x00;
   421                           
   422                           ;incstack = 0
   423  000572  0E00               	movlw	0
   424  000574  6E93               	movwf	3987,c	;volatile
   425  000576                     
   426                           ;main.c: 20: __nop();
   427  000576  F000               	nop	
   428                           
   429                           ;main.c: 21: __nop();
   430  000578  F000               	nop	
   431                           
   432                           ;main.c: 23: {
   433                           ;main.c: 24: PORTB=0xBD;
   434                           
   435                           ;main.c: 22: while(1)
   436  00057A  0EBD               	movlw	189
   437  00057C  6E81               	movwf	3969,c	;volatile
   438                           
   439                           ;main.c: 25: __nop();
   440  00057E  F000               	nop	
   441  000580  D7FA               	goto	L1
   442  000582                     __end_of_func1:
   443                           	opt stack 0
   444                           tosu	equ	0xFFF
   445                           tosh	equ	0xFFE
   446                           tosl	equ	0xFFD
   447                           pclath	equ	0xFFA
   448                           tblptru	equ	0xFF8
   449                           prodh	equ	0xFF4
   450                           prodl	equ	0xFF3
   451                           intcon	equ	0xFF2
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postinc1	equ	0xFE6
   455                           postinc2	equ	0xFDE
   456                           fsr2h	equ	0xFDA
   457                           fsr2l	equ	0xFD9
   458                           
   459 ;; *************** function _func2 *****************
   460 ;; Defined at:
   461 ;;		line 4 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, status,2
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         0       0       0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  000582                     __ptext2:
   491                           	opt stack 0
   492  000582                     _func2:
   493                           	opt stack 28
   494                           
   495                           ;main.c: 6: TRISB=0x00;
   496                           
   497                           ;incstack = 0
   498  000582  0E00               	movlw	0
   499  000584  6E93               	movwf	3987,c	;volatile
   500  000586                     
   501                           ;main.c: 7: __nop();
   502  000586  F000               	nop	
   503                           
   504                           ;main.c: 8: __nop();
   505  000588  F000               	nop	
   506                           
   507                           ;main.c: 10: {
   508                           ;main.c: 11: PORTB=0xAC;
   509                           
   510                           ;main.c: 9: while(1)
   511  00058A  0EAC               	movlw	172
   512  00058C  6E81               	movwf	3969,c	;volatile
   513                           
   514                           ;main.c: 12: __nop();
   515  00058E  F000               	nop	
   516  000590  D7FA               	goto	L2
   517  000592                     __end_of_func2:
   518                           	opt stack 0
   519                           tosu	equ	0xFFF
   520                           tosh	equ	0xFFE
   521                           tosl	equ	0xFFD
   522                           pclath	equ	0xFFA
   523                           tblptru	equ	0xFF8
   524                           prodh	equ	0xFF4
   525                           prodl	equ	0xFF3
   526                           intcon	equ	0xFF2
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postinc1	equ	0xFE6
   530                           postinc2	equ	0xFDE
   531                           fsr2h	equ	0xFDA
   532                           fsr2l	equ	0xFD9
   533                           
   534 ;; *************** function _Task_Empty *****************
   535 ;; Defined at:
   536 ;;		line 11 in file "core.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;		None               void
   543 ;; Registers used:
   544 ;;		wreg, status,2
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   550 ;;      Params:         0       0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; Hardware stack levels required when called:    2
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text3
   565  0004F4                     __ptext3:
   566                           	opt stack 0
   567  0004F4                     _Task_Empty:
   568                           	opt stack 28
   569                           
   570                           ;core.c: 13: TRISA=0x00;
   571                           
   572                           ;incstack = 0
   573  0004F4  0E00               	movlw	0
   574  0004F6  6E92               	movwf	3986,c	;volatile
   575                           
   576                           ;core.c: 14: TRISB=0x00;
   577  0004F8  0E00               	movlw	0
   578  0004FA  6E93               	movwf	3987,c	;volatile
   579                           
   580                           ;core.c: 15: TRISC=0x00;
   581  0004FC  0E00               	movlw	0
   582  0004FE  6E94               	movwf	3988,c	;volatile
   583                           
   584                           ;core.c: 16: TRISD=0x00;
   585  000500  0E00               	movlw	0
   586  000502  6E95               	movwf	3989,c	;volatile
   587                           
   588                           ;core.c: 18: PORTA=0x00;
   589  000504  0E00               	movlw	0
   590  000506  6E80               	movwf	3968,c	;volatile
   591                           
   592                           ;core.c: 19: PORTB=0x00;
   593  000508  0E00               	movlw	0
   594  00050A  6E81               	movwf	3969,c	;volatile
   595                           
   596                           ;core.c: 20: PORTC=0x00;
   597  00050C  0E00               	movlw	0
   598  00050E  6E82               	movwf	3970,c	;volatile
   599                           
   600                           ;core.c: 21: PORTD=0x00;
   601  000510  0E00               	movlw	0
   602  000512  6E83               	movwf	3971,c	;volatile
   603                           
   604                           ;core.c: 23: LATA=0x00;
   605  000514  0E00               	movlw	0
   606  000516  6E89               	movwf	3977,c	;volatile
   607                           
   608                           ;core.c: 24: LATB=0x00;
   609  000518  0E00               	movlw	0
   610  00051A  6E8A               	movwf	3978,c	;volatile
   611                           
   612                           ;core.c: 25: LATC=0x00;
   613  00051C  0E00               	movlw	0
   614  00051E  6E8B               	movwf	3979,c	;volatile
   615                           
   616                           ;core.c: 26: LATD=0x00;
   617  000520  0E00               	movlw	0
   618  000522  6E8C               	movwf	3980,c	;volatile
   619  000524  0012               	return	
   620  000526                     __end_of_Task_Empty:
   621                           	opt stack 0
   622                           tosu	equ	0xFFF
   623                           tosh	equ	0xFFE
   624                           tosl	equ	0xFFD
   625                           pclath	equ	0xFFA
   626                           tblptru	equ	0xFF8
   627                           prodh	equ	0xFF4
   628                           prodl	equ	0xFF3
   629                           intcon	equ	0xFF2
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postinc1	equ	0xFE6
   633                           postinc2	equ	0xFDE
   634                           fsr2h	equ	0xFDA
   635                           fsr2l	equ	0xFD9
   636                           
   637 ;; *************** function _Task_Create *****************
   638 ;; Defined at:
   639 ;;		line 2 in file "core.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  func1           2   16[COMRAM] PTR FTN()void 
   642 ;;		 -> func1(0), func2(0), 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  new_task       19   38[COMRAM] struct _task
   645 ;; Return value:  Size  Location     Type
   646 ;;                  19   16[COMRAM] struct _task
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:        19       0       0       0       0       0       0
   655 ;;      Locals:        19       0       0       0       0       0       0
   656 ;;      Temps:          3       0       0       0       0       0       0
   657 ;;      Totals:        41       0       0       0       0       0       0
   658 ;;Total ram usage:       41 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text4
   669  0004BE                     __ptext4:
   670                           	opt stack 0
   671  0004BE                     _Task_Create:
   672                           	opt stack 28
   673                           
   674                           ;core.c: 4: task new_task;
   675                           ;core.c: 5: new_task.func=func1;
   676                           
   677                           ;incstack = 0
   678  0004BE  C012  F028         	movff	Task_Create@func1+1,Task_Create@new_task+1
   679  0004C2  C011  F027         	movff	Task_Create@func1,Task_Create@new_task
   680                           
   681                           ;core.c: 6: new_task.S_TOSH=(unsigned char)(((unsigned int)func1 & 0xFF00) >> 8);
   682  0004C6  C012  F024         	movff	Task_Create@func1+1,??_Task_Create
   683  0004CA  C024  F025         	movff	??_Task_Create,??_Task_Create+1
   684  0004CE  6A26               	clrf	(??_Task_Create+2)& (0+255),c
   685  0004D0  5025               	movf	??_Task_Create+1,w,c
   686  0004D2  6E2C               	movwf	Task_Create@new_task+5,c
   687                           
   688                           ;core.c: 7: new_task.S_TOSL=(unsigned char)((unsigned int)func1 & 0x00FF);
   689  0004D4  C011  F02B         	movff	Task_Create@func1,Task_Create@new_task+4
   690                           
   691                           ;core.c: 8: new_task.S_TOSU=0x00;
   692  0004D8  0E00               	movlw	0
   693  0004DA  6E2D               	movwf	Task_Create@new_task+6,c
   694                           
   695                           ;core.c: 9: return new_task;
   696  0004DC  EE20  F039         	lfsr	2,Task_Create@new_task+18
   697  0004E0  EE00  F023         	lfsr	0,?_Task_Create+18
   698  0004E4  0E13               	movlw	19
   699  0004E6                     u91:
   700  0004E6  CFDD FFED          	movff	postdec2,postdec0
   701  0004EA  2EE8               	decfsz	wreg,f,c
   702  0004EC  D7FC               	goto	u91
   703  0004EE  2AE9               	incf	fsr0l,f,c
   704  0004F0  22EA               	addwfc	fsr0h,f,c
   705  0004F2  0012               	return	
   706  0004F4                     __end_of_Task_Create:
   707                           	opt stack 0
   708                           tosu	equ	0xFFF
   709                           tosh	equ	0xFFE
   710                           tosl	equ	0xFFD
   711                           pclath	equ	0xFFA
   712                           tblptru	equ	0xFF8
   713                           prodh	equ	0xFF4
   714                           prodl	equ	0xFF3
   715                           intcon	equ	0xFF2
   716                           postinc0	equ	0xFEE
   717                           postdec0	equ	0xFED
   718                           fsr0h	equ	0xFEA
   719                           fsr0l	equ	0xFE9
   720                           wreg	equ	0xFE8
   721                           postinc1	equ	0xFE6
   722                           postinc2	equ	0xFDE
   723                           postdec2	equ	0xFDD
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           
   727 ;; *************** function _TASK_Init *****************
   728 ;; Defined at:
   729 ;;		line 69 in file "core.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  task1           2   16[COMRAM] PTR struct _task
   732 ;;		 -> tt(38), 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         2       0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0
   747 ;;      Totals:         2       0       0       0       0       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    2
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text5
   759  000278                     __ptext5:
   760                           	opt stack 0
   761  000278                     _TASK_Init:
   762                           	opt stack 28
   763                           
   764                           ;core.c: 73: task1->reg[0]=0x00;
   765                           
   766                           ;incstack = 0
   767  000278  EE20 F007          	lfsr	2,7
   768  00027C  5011               	movf	TASK_Init@task1,w,c
   769  00027E  26D9               	addwf	fsr2l,f,c
   770  000280  5012               	movf	TASK_Init@task1+1,w,c
   771  000282  22DA               	addwfc	fsr2h,f,c
   772  000284  0E00               	movlw	0
   773  000286  6EDF               	movwf	indf2,c
   774                           
   775                           ;core.c: 74: task1->reg[1]=0x00;
   776  000288  EE20 F008          	lfsr	2,8
   777  00028C  5011               	movf	TASK_Init@task1,w,c
   778  00028E  26D9               	addwf	fsr2l,f,c
   779  000290  5012               	movf	TASK_Init@task1+1,w,c
   780  000292  22DA               	addwfc	fsr2h,f,c
   781  000294  0E00               	movlw	0
   782  000296  6EDF               	movwf	indf2,c
   783                           
   784                           ;core.c: 75: task1->reg[2]=0x00;
   785  000298  EE20 F009          	lfsr	2,9
   786  00029C  5011               	movf	TASK_Init@task1,w,c
   787  00029E  26D9               	addwf	fsr2l,f,c
   788  0002A0  5012               	movf	TASK_Init@task1+1,w,c
   789  0002A2  22DA               	addwfc	fsr2h,f,c
   790  0002A4  0E00               	movlw	0
   791  0002A6  6EDF               	movwf	indf2,c
   792                           
   793                           ;core.c: 76: task1->reg[3]=0x00;
   794  0002A8  EE20 F00A          	lfsr	2,10
   795  0002AC  5011               	movf	TASK_Init@task1,w,c
   796  0002AE  26D9               	addwf	fsr2l,f,c
   797  0002B0  5012               	movf	TASK_Init@task1+1,w,c
   798  0002B2  22DA               	addwfc	fsr2h,f,c
   799  0002B4  0E00               	movlw	0
   800  0002B6  6EDF               	movwf	indf2,c
   801                           
   802                           ;core.c: 78: task1->reg[4]=0x00;
   803  0002B8  EE20 F00B          	lfsr	2,11
   804  0002BC  5011               	movf	TASK_Init@task1,w,c
   805  0002BE  26D9               	addwf	fsr2l,f,c
   806  0002C0  5012               	movf	TASK_Init@task1+1,w,c
   807  0002C2  22DA               	addwfc	fsr2h,f,c
   808  0002C4  0E00               	movlw	0
   809  0002C6  6EDF               	movwf	indf2,c
   810                           
   811                           ;core.c: 79: task1->reg[5]=0x00;
   812  0002C8  EE20 F00C          	lfsr	2,12
   813  0002CC  5011               	movf	TASK_Init@task1,w,c
   814  0002CE  26D9               	addwf	fsr2l,f,c
   815  0002D0  5012               	movf	TASK_Init@task1+1,w,c
   816  0002D2  22DA               	addwfc	fsr2h,f,c
   817  0002D4  0E00               	movlw	0
   818  0002D6  6EDF               	movwf	indf2,c
   819                           
   820                           ;core.c: 80: task1->reg[6]=0x00;
   821  0002D8  EE20 F00D          	lfsr	2,13
   822  0002DC  5011               	movf	TASK_Init@task1,w,c
   823  0002DE  26D9               	addwf	fsr2l,f,c
   824  0002E0  5012               	movf	TASK_Init@task1+1,w,c
   825  0002E2  22DA               	addwfc	fsr2h,f,c
   826  0002E4  0E00               	movlw	0
   827  0002E6  6EDF               	movwf	indf2,c
   828                           
   829                           ;core.c: 81: task1->reg[7]=0x00;
   830  0002E8  EE20 F00E          	lfsr	2,14
   831  0002EC  5011               	movf	TASK_Init@task1,w,c
   832  0002EE  26D9               	addwf	fsr2l,f,c
   833  0002F0  5012               	movf	TASK_Init@task1+1,w,c
   834  0002F2  22DA               	addwfc	fsr2h,f,c
   835  0002F4  0E00               	movlw	0
   836  0002F6  6EDF               	movwf	indf2,c
   837                           
   838                           ;core.c: 83: task1->reg[8]=0x00;
   839  0002F8  EE20 F00F          	lfsr	2,15
   840  0002FC  5011               	movf	TASK_Init@task1,w,c
   841  0002FE  26D9               	addwf	fsr2l,f,c
   842  000300  5012               	movf	TASK_Init@task1+1,w,c
   843  000302  22DA               	addwfc	fsr2h,f,c
   844  000304  0E00               	movlw	0
   845  000306  6EDF               	movwf	indf2,c
   846                           
   847                           ;core.c: 84: task1->reg[9]=0x00;
   848  000308  EE20 F010          	lfsr	2,16
   849  00030C  5011               	movf	TASK_Init@task1,w,c
   850  00030E  26D9               	addwf	fsr2l,f,c
   851  000310  5012               	movf	TASK_Init@task1+1,w,c
   852  000312  22DA               	addwfc	fsr2h,f,c
   853  000314  0E00               	movlw	0
   854  000316  6EDF               	movwf	indf2,c
   855                           
   856                           ;core.c: 85: task1->reg[10]=0x00;
   857  000318  EE20 F011          	lfsr	2,17
   858  00031C  5011               	movf	TASK_Init@task1,w,c
   859  00031E  26D9               	addwf	fsr2l,f,c
   860  000320  5012               	movf	TASK_Init@task1+1,w,c
   861  000322  22DA               	addwfc	fsr2h,f,c
   862  000324  0E00               	movlw	0
   863  000326  6EDF               	movwf	indf2,c
   864                           
   865                           ;core.c: 86: task1->reg[11]=0x00;
   866  000328  EE20 F012          	lfsr	2,18
   867  00032C  5011               	movf	TASK_Init@task1,w,c
   868  00032E  26D9               	addwf	fsr2l,f,c
   869  000330  5012               	movf	TASK_Init@task1+1,w,c
   870  000332  22DA               	addwfc	fsr2h,f,c
   871  000334  0E00               	movlw	0
   872  000336  6EDF               	movwf	indf2,c
   873  000338  0012               	return	
   874  00033A                     __end_of_TASK_Init:
   875                           	opt stack 0
   876                           tosu	equ	0xFFF
   877                           tosh	equ	0xFFE
   878                           tosl	equ	0xFFD
   879                           pclath	equ	0xFFA
   880                           tblptru	equ	0xFF8
   881                           prodh	equ	0xFF4
   882                           prodl	equ	0xFF3
   883                           intcon	equ	0xFF2
   884                           postinc0	equ	0xFEE
   885                           postdec0	equ	0xFED
   886                           fsr0h	equ	0xFEA
   887                           fsr0l	equ	0xFE9
   888                           wreg	equ	0xFE8
   889                           postinc1	equ	0xFE6
   890                           indf2	equ	0xFDF
   891                           postinc2	equ	0xFDE
   892                           postdec2	equ	0xFDD
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           
   896 ;; *************** function _HighInt *****************
   897 ;; Defined at:
   898 ;;		line 62 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0
   914 ;;      Temps:         14       0       0       0       0       0       0
   915 ;;      Totals:        14       0       0       0       0       0       0
   916 ;;Total ram usage:       14 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		_TASK_Restore
   921 ;;		_Task_Save
   922 ;;		i2_Task_Empty
   923 ;; This function is called by:
   924 ;;		Interrupt level 2
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	intcode
   929  000008                     __pintcode:
   930                           	opt stack 0
   931  000008                     _HighInt:
   932                           	opt stack 28
   933                           
   934                           ;incstack = 0
   935  000008  CFFA F003          	movff	pclath,??_HighInt
   936  00000C  CFFB F004          	movff	pclatu,??_HighInt+1
   937  000010  CFE9 F005          	movff	fsr0l,??_HighInt+2
   938  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
   939                           tosu	equ	0xFFF
   940                           tosh	equ	0xFFE
   941                           tosl	equ	0xFFD
   942                           pclatu	equ	0xFFB
   943                           pclath	equ	0xFFA
   944                           tblptru	equ	0xFF8
   945                           prodh	equ	0xFF4
   946                           prodl	equ	0xFF3
   947                           intcon	equ	0xFF2
   948                           postinc0	equ	0xFEE
   949                           postdec0	equ	0xFED
   950                           fsr0h	equ	0xFEA
   951                           fsr0l	equ	0xFE9
   952                           wreg	equ	0xFE8
   953                           postinc1	equ	0xFE6
   954                           indf2	equ	0xFDF
   955                           postinc2	equ	0xFDE
   956                           postdec2	equ	0xFDD
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           
   960                           	psect	intcode_body
   961  00001C                     __pintcode_body:
   962                           	opt stack 28
   963  00001C                     int_func:
   964                           	opt stack 28
   965  00001C  0006               	pop		; remove dummy address from shadow register refresh
   966  00001E  CFEA F006          	movff	fsr0h,??_HighInt+3
   967  000022  CFE1 F007          	movff	fsr1l,??_HighInt+4
   968  000026  CFE2 F008          	movff	fsr1h,??_HighInt+5
   969  00002A  CFD9 F009          	movff	fsr2l,??_HighInt+6
   970  00002E  CFDA F00A          	movff	fsr2h,??_HighInt+7
   971  000032  CFF3 F00B          	movff	prodl,??_HighInt+8
   972  000036  CFF4 F00C          	movff	prodh,??_HighInt+9
   973  00003A  CFF6 F00D          	movff	tblptrl,??_HighInt+10
   974  00003E  CFF7 F00E          	movff	tblptrh,??_HighInt+11
   975  000042  CFF8 F00F          	movff	tblptru,??_HighInt+12
   976  000046  CFF5 F010          	movff	tablat,??_HighInt+13
   977                           
   978                           ;main.c: 64: if(TMR1IE && TMR1IF)
   979  00004A  B09D               	btfsc	3997,0,c	;volatile
   980  00004C  A09E               	btfss	3998,0,c	;volatile
   981  00004E  D095               	goto	i2l66
   982                           
   983                           ;main.c: 65: {
   984                           ;main.c: 66: TMR1IE=0;
   985  000050  909D               	bcf	3997,0,c	;volatile
   986                           
   987                           ;main.c: 67: TMR1IF=0;
   988  000052  909E               	bcf	3998,0,c	;volatile
   989                           
   990                           ;main.c: 68: Task_Save(&tt[index]);
   991  000054  5061               	movf	_index,w,c
   992  000056  0D13               	mullw	19
   993  000058  0100               	movlb	0	; () banked
   994  00005A  0E80               	movlw	low _tt
   995  00005C  24F3               	addwf	prodl,w,c
   996  00005E  6E01               	movwf	Task_Save@task1,c
   997  000060  0100               	movlb	0	; () banked
   998  000062  0E00               	movlw	high _tt
   999  000064  20F4               	addwfc	prodh,w,c
  1000  000066  6E02               	movwf	Task_Save@task1+1,c
  1001  000068  EC9D  F001         	call	_Task_Save	;wreg free
  1002                           
  1003                           ;main.c: 70: Task_Empty();
  1004  00006C  EC93  F002         	call	i2_Task_Empty	;wreg free
  1005                           
  1006                           ;main.c: 72: tt[index].S_TOSL=TOSL;
  1007  000070  5061               	movf	_index,w,c
  1008  000072  0D13               	mullw	19
  1009  000074  0E04               	movlw	4
  1010  000076  26F3               	addwf	prodl,f,c
  1011  000078  0E00               	movlw	0
  1012  00007A  22F4               	addwfc	prodh,f,c
  1013  00007C  0100               	movlb	0	; () banked
  1014  00007E  0E80               	movlw	low _tt
  1015  000080  24F3               	addwf	prodl,w,c
  1016  000082  6ED9               	movwf	fsr2l,c
  1017  000084  0100               	movlb	0	; () banked
  1018  000086  0E00               	movlw	high _tt
  1019  000088  20F4               	addwfc	prodh,w,c
  1020  00008A  6EDA               	movwf	fsr2h,c
  1021  00008C  CFFD FFDF          	movff	tosl,indf2	;volatile
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 73: tt[index].S_TOSH=TOSH;
  1025  000090  5061               	movf	_index,w,c
  1026  000092  0D13               	mullw	19
  1027  000094  0E05               	movlw	5
  1028  000096  26F3               	addwf	prodl,f,c
  1029  000098  0E00               	movlw	0
  1030  00009A  22F4               	addwfc	prodh,f,c
  1031  00009C  0100               	movlb	0	; () banked
  1032  00009E  0E80               	movlw	low _tt
  1033  0000A0  24F3               	addwf	prodl,w,c
  1034  0000A2  6ED9               	movwf	fsr2l,c
  1035  0000A4  0100               	movlb	0	; () banked
  1036  0000A6  0E00               	movlw	high _tt
  1037  0000A8  20F4               	addwfc	prodh,w,c
  1038  0000AA  6EDA               	movwf	fsr2h,c
  1039  0000AC  CFFE FFDF          	movff	tosh,indf2	;volatile
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;main.c: 74: tt[index].S_TOSU=TOSU;
  1043  0000B0  5061               	movf	_index,w,c
  1044  0000B2  0D13               	mullw	19
  1045  0000B4  0E06               	movlw	6
  1046  0000B6  26F3               	addwf	prodl,f,c
  1047  0000B8  0E00               	movlw	0
  1048  0000BA  22F4               	addwfc	prodh,f,c
  1049  0000BC  0100               	movlb	0	; () banked
  1050  0000BE  0E80               	movlw	low _tt
  1051  0000C0  24F3               	addwf	prodl,w,c
  1052  0000C2  6ED9               	movwf	fsr2l,c
  1053  0000C4  0100               	movlb	0	; () banked
  1054  0000C6  0E00               	movlw	high _tt
  1055  0000C8  20F4               	addwfc	prodh,w,c
  1056  0000CA  6EDA               	movwf	fsr2h,c
  1057  0000CC  CFFF FFDF          	movff	tosu,indf2	;volatile
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;main.c: 75: index++;
  1061  0000D0  2A61               	incf	_index,f,c
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;main.c: 76: index=index%2;
  1065  0000D2  5061               	movf	_index,w,c
  1066  0000D4  0B01               	andlw	1
  1067  0000D6  6E61               	movwf	_index,c
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;main.c: 77: TASK_Restore(&tt[index]);
  1071  0000D8  5061               	movf	_index,w,c
  1072  0000DA  0D13               	mullw	19
  1073  0000DC  0100               	movlb	0	; () banked
  1074  0000DE  0E80               	movlw	low _tt
  1075  0000E0  24F3               	addwf	prodl,w,c
  1076  0000E2  6E01               	movwf	TASK_Restore@task1,c
  1077  0000E4  0100               	movlb	0	; () banked
  1078  0000E6  0E00               	movlw	high _tt
  1079  0000E8  20F4               	addwfc	prodh,w,c
  1080  0000EA  6E02               	movwf	TASK_Restore@task1+1,c
  1081  0000EC  ECFE  F001         	call	_TASK_Restore	;wreg free
  1082                           
  1083                           ;main.c: 78: TOSH=tt[index].S_TOSH;
  1084  0000F0  5061               	movf	_index,w,c
  1085  0000F2  0D13               	mullw	19
  1086  0000F4  0E05               	movlw	5
  1087  0000F6  26F3               	addwf	prodl,f,c
  1088  0000F8  0E00               	movlw	0
  1089  0000FA  22F4               	addwfc	prodh,f,c
  1090  0000FC  0100               	movlb	0	; () banked
  1091  0000FE  0E80               	movlw	low _tt
  1092  000100  24F3               	addwf	prodl,w,c
  1093  000102  6ED9               	movwf	fsr2l,c
  1094  000104  0100               	movlb	0	; () banked
  1095  000106  0E00               	movlw	high _tt
  1096  000108  20F4               	addwfc	prodh,w,c
  1097  00010A  6EDA               	movwf	fsr2h,c
  1098  00010C  50DF               	movf	indf2,w,c
  1099  00010E  6EFE               	movwf	tosh,c	;volatile
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 79: TOSL=tt[index].S_TOSL;
  1103  000110  5061               	movf	_index,w,c
  1104  000112  0D13               	mullw	19
  1105  000114  0E04               	movlw	4
  1106  000116  26F3               	addwf	prodl,f,c
  1107  000118  0E00               	movlw	0
  1108  00011A  22F4               	addwfc	prodh,f,c
  1109  00011C  0100               	movlb	0	; () banked
  1110  00011E  0E80               	movlw	low _tt
  1111  000120  24F3               	addwf	prodl,w,c
  1112  000122  6ED9               	movwf	fsr2l,c
  1113  000124  0100               	movlb	0	; () banked
  1114  000126  0E00               	movlw	high _tt
  1115  000128  20F4               	addwfc	prodh,w,c
  1116  00012A  6EDA               	movwf	fsr2h,c
  1117  00012C  50DF               	movf	indf2,w,c
  1118  00012E  6EFD               	movwf	tosl,c	;volatile
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 80: TOSU=tt[index].S_TOSU;
  1122  000130  5061               	movf	_index,w,c
  1123  000132  0D13               	mullw	19
  1124  000134  0E06               	movlw	6
  1125  000136  26F3               	addwf	prodl,f,c
  1126  000138  0E00               	movlw	0
  1127  00013A  22F4               	addwfc	prodh,f,c
  1128  00013C  0100               	movlb	0	; () banked
  1129  00013E  0E80               	movlw	low _tt
  1130  000140  24F3               	addwf	prodl,w,c
  1131  000142  6ED9               	movwf	fsr2l,c
  1132  000144  0100               	movlb	0	; () banked
  1133  000146  0E00               	movlw	high _tt
  1134  000148  20F4               	addwfc	prodh,w,c
  1135  00014A  6EDA               	movwf	fsr2h,c
  1136  00014C  50DF               	movf	indf2,w,c
  1137  00014E  6EFF               	movwf	tosu,c	;volatile
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;main.c: 81: tt[index].count++;
  1141  000150  5061               	movf	_index,w,c
  1142  000152  0D13               	mullw	19
  1143  000154  0E02               	movlw	2
  1144  000156  26F3               	addwf	prodl,f,c
  1145  000158  0E00               	movlw	0
  1146  00015A  22F4               	addwfc	prodh,f,c
  1147  00015C  0100               	movlb	0	; () banked
  1148  00015E  0E80               	movlw	low _tt
  1149  000160  24F3               	addwf	prodl,w,c
  1150  000162  6ED9               	movwf	fsr2l,c
  1151  000164  0100               	movlb	0	; () banked
  1152  000166  0E00               	movlw	high _tt
  1153  000168  20F4               	addwfc	prodh,w,c
  1154  00016A  6EDA               	movwf	fsr2h,c
  1155  00016C  2ADE               	incf	postinc2,f,c
  1156  00016E  0E00               	movlw	0
  1157  000170  22DD               	addwfc	postdec2,f,c
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 83: TMR1H=(65536-20)/256;
  1161  000172  68CF               	setf	4047,c	;volatile
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 84: TMR1L=(65536-20)%256;
  1165  000174  0EEC               	movlw	236
  1166  000176  6ECE               	movwf	4046,c	;volatile
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 85: TMR1IE=1;
  1170  000178  809D               	bsf	3997,0,c	;volatile
  1171  00017A                     i2l66:
  1172  00017A  C010  FFF5         	movff	??_HighInt+13,tablat
  1173  00017E  C00F  FFF8         	movff	??_HighInt+12,tblptru
  1174  000182  C00E  FFF7         	movff	??_HighInt+11,tblptrh
  1175  000186  C00D  FFF6         	movff	??_HighInt+10,tblptrl
  1176  00018A  C00C  FFF4         	movff	??_HighInt+9,prodh
  1177  00018E  C00B  FFF3         	movff	??_HighInt+8,prodl
  1178  000192  C00A  FFDA         	movff	??_HighInt+7,fsr2h
  1179  000196  C009  FFD9         	movff	??_HighInt+6,fsr2l
  1180  00019A  C008  FFE2         	movff	??_HighInt+5,fsr1h
  1181  00019E  C007  FFE1         	movff	??_HighInt+4,fsr1l
  1182  0001A2  C006  FFEA         	movff	??_HighInt+3,fsr0h
  1183  0001A6  C005  FFE9         	movff	??_HighInt+2,fsr0l
  1184  0001AA  C004  FFFB         	movff	??_HighInt+1,pclatu
  1185  0001AE  C003  FFFA         	movff	??_HighInt,pclath
  1186  0001B2  0011               	retfie		f
  1187  0001B4                     __end_of_HighInt:
  1188                           	opt stack 0
  1189                           tosu	equ	0xFFF
  1190                           tosh	equ	0xFFE
  1191                           tosl	equ	0xFFD
  1192                           pclatu	equ	0xFFB
  1193                           pclath	equ	0xFFA
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           intcon	equ	0xFF2
  1201                           postinc0	equ	0xFEE
  1202                           postdec0	equ	0xFED
  1203                           fsr0h	equ	0xFEA
  1204                           fsr0l	equ	0xFE9
  1205                           wreg	equ	0xFE8
  1206                           postinc1	equ	0xFE6
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           indf2	equ	0xFDF
  1210                           postinc2	equ	0xFDE
  1211                           postdec2	equ	0xFDD
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           
  1215 ;; *************** function i2_Task_Empty *****************
  1216 ;; Defined at:
  1217 ;;		line 11 in file "core.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg, status,2
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_HighInt
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text7
  1245  000526                     __ptext7:
  1246                           	opt stack 0
  1247  000526                     i2_Task_Empty:
  1248                           	opt stack 28
  1249                           
  1250                           ;core.c: 13: TRISA=0x00;
  1251                           
  1252                           ;incstack = 0
  1253  000526  0E00               	movlw	0
  1254  000528  6E92               	movwf	3986,c	;volatile
  1255                           
  1256                           ;core.c: 14: TRISB=0x00;
  1257  00052A  0E00               	movlw	0
  1258  00052C  6E93               	movwf	3987,c	;volatile
  1259                           
  1260                           ;core.c: 15: TRISC=0x00;
  1261  00052E  0E00               	movlw	0
  1262  000530  6E94               	movwf	3988,c	;volatile
  1263                           
  1264                           ;core.c: 16: TRISD=0x00;
  1265  000532  0E00               	movlw	0
  1266  000534  6E95               	movwf	3989,c	;volatile
  1267                           
  1268                           ;core.c: 18: PORTA=0x00;
  1269  000536  0E00               	movlw	0
  1270  000538  6E80               	movwf	3968,c	;volatile
  1271                           
  1272                           ;core.c: 19: PORTB=0x00;
  1273  00053A  0E00               	movlw	0
  1274  00053C  6E81               	movwf	3969,c	;volatile
  1275                           
  1276                           ;core.c: 20: PORTC=0x00;
  1277  00053E  0E00               	movlw	0
  1278  000540  6E82               	movwf	3970,c	;volatile
  1279                           
  1280                           ;core.c: 21: PORTD=0x00;
  1281  000542  0E00               	movlw	0
  1282  000544  6E83               	movwf	3971,c	;volatile
  1283                           
  1284                           ;core.c: 23: LATA=0x00;
  1285  000546  0E00               	movlw	0
  1286  000548  6E89               	movwf	3977,c	;volatile
  1287                           
  1288                           ;core.c: 24: LATB=0x00;
  1289  00054A  0E00               	movlw	0
  1290  00054C  6E8A               	movwf	3978,c	;volatile
  1291                           
  1292                           ;core.c: 25: LATC=0x00;
  1293  00054E  0E00               	movlw	0
  1294  000550  6E8B               	movwf	3979,c	;volatile
  1295                           
  1296                           ;core.c: 26: LATD=0x00;
  1297  000552  0E00               	movlw	0
  1298  000554  6E8C               	movwf	3980,c	;volatile
  1299  000556  0012               	return	
  1300  000558                     __end_ofi2_Task_Empty:
  1301                           	opt stack 0
  1302                           tosu	equ	0xFFF
  1303                           tosh	equ	0xFFE
  1304                           tosl	equ	0xFFD
  1305                           pclatu	equ	0xFFB
  1306                           pclath	equ	0xFFA
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           intcon	equ	0xFF2
  1314                           postinc0	equ	0xFEE
  1315                           postdec0	equ	0xFED
  1316                           fsr0h	equ	0xFEA
  1317                           fsr0l	equ	0xFE9
  1318                           wreg	equ	0xFE8
  1319                           postinc1	equ	0xFE6
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           indf2	equ	0xFDF
  1323                           postinc2	equ	0xFDE
  1324                           postdec2	equ	0xFDD
  1325                           fsr2h	equ	0xFDA
  1326                           fsr2l	equ	0xFD9
  1327                           
  1328 ;; *************** function _Task_Save *****************
  1329 ;; Defined at:
  1330 ;;		line 29 in file "core.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  task1           2    0[COMRAM] PTR struct _task
  1333 ;;		 -> tt(38), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1345 ;;      Params:         2       0       0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0
  1348 ;;      Totals:         2       0       0       0       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_HighInt
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text8
  1359  00033A                     __ptext8:
  1360                           	opt stack 0
  1361  00033A                     _Task_Save:
  1362                           	opt stack 28
  1363                           
  1364                           ;core.c: 33: task1->reg[0]=TRISA;
  1365                           
  1366                           ;incstack = 0
  1367  00033A  EE20 F007          	lfsr	2,7
  1368  00033E  5001               	movf	Task_Save@task1,w,c
  1369  000340  26D9               	addwf	fsr2l,f,c
  1370  000342  5002               	movf	Task_Save@task1+1,w,c
  1371  000344  22DA               	addwfc	fsr2h,f,c
  1372  000346  CF92 FFDF          	movff	3986,indf2	;volatile
  1373                           
  1374                           ;core.c: 34: task1->reg[1]=TRISB;
  1375  00034A  EE20 F008          	lfsr	2,8
  1376  00034E  5001               	movf	Task_Save@task1,w,c
  1377  000350  26D9               	addwf	fsr2l,f,c
  1378  000352  5002               	movf	Task_Save@task1+1,w,c
  1379  000354  22DA               	addwfc	fsr2h,f,c
  1380  000356  CF93 FFDF          	movff	3987,indf2	;volatile
  1381                           
  1382                           ;core.c: 35: task1->reg[2]=TRISC;
  1383  00035A  EE20 F009          	lfsr	2,9
  1384  00035E  5001               	movf	Task_Save@task1,w,c
  1385  000360  26D9               	addwf	fsr2l,f,c
  1386  000362  5002               	movf	Task_Save@task1+1,w,c
  1387  000364  22DA               	addwfc	fsr2h,f,c
  1388  000366  CF94 FFDF          	movff	3988,indf2	;volatile
  1389                           
  1390                           ;core.c: 36: task1->reg[3]=TRISD;
  1391  00036A  EE20 F00A          	lfsr	2,10
  1392  00036E  5001               	movf	Task_Save@task1,w,c
  1393  000370  26D9               	addwf	fsr2l,f,c
  1394  000372  5002               	movf	Task_Save@task1+1,w,c
  1395  000374  22DA               	addwfc	fsr2h,f,c
  1396  000376  CF95 FFDF          	movff	3989,indf2	;volatile
  1397                           
  1398                           ;core.c: 38: task1->reg[4]=PORTA;
  1399  00037A  EE20 F00B          	lfsr	2,11
  1400  00037E  5001               	movf	Task_Save@task1,w,c
  1401  000380  26D9               	addwf	fsr2l,f,c
  1402  000382  5002               	movf	Task_Save@task1+1,w,c
  1403  000384  22DA               	addwfc	fsr2h,f,c
  1404  000386  CF80 FFDF          	movff	3968,indf2	;volatile
  1405                           
  1406                           ;core.c: 39: task1->reg[5]=PORTB;
  1407  00038A  EE20 F00C          	lfsr	2,12
  1408  00038E  5001               	movf	Task_Save@task1,w,c
  1409  000390  26D9               	addwf	fsr2l,f,c
  1410  000392  5002               	movf	Task_Save@task1+1,w,c
  1411  000394  22DA               	addwfc	fsr2h,f,c
  1412  000396  CF81 FFDF          	movff	3969,indf2	;volatile
  1413                           
  1414                           ;core.c: 40: task1->reg[6]=PORTC;
  1415  00039A  EE20 F00D          	lfsr	2,13
  1416  00039E  5001               	movf	Task_Save@task1,w,c
  1417  0003A0  26D9               	addwf	fsr2l,f,c
  1418  0003A2  5002               	movf	Task_Save@task1+1,w,c
  1419  0003A4  22DA               	addwfc	fsr2h,f,c
  1420  0003A6  CF82 FFDF          	movff	3970,indf2	;volatile
  1421                           
  1422                           ;core.c: 41: task1->reg[7]=PORTD;
  1423  0003AA  EE20 F00E          	lfsr	2,14
  1424  0003AE  5001               	movf	Task_Save@task1,w,c
  1425  0003B0  26D9               	addwf	fsr2l,f,c
  1426  0003B2  5002               	movf	Task_Save@task1+1,w,c
  1427  0003B4  22DA               	addwfc	fsr2h,f,c
  1428  0003B6  CF83 FFDF          	movff	3971,indf2	;volatile
  1429                           
  1430                           ;core.c: 43: task1->reg[8]=LATA;
  1431  0003BA  EE20 F00F          	lfsr	2,15
  1432  0003BE  5001               	movf	Task_Save@task1,w,c
  1433  0003C0  26D9               	addwf	fsr2l,f,c
  1434  0003C2  5002               	movf	Task_Save@task1+1,w,c
  1435  0003C4  22DA               	addwfc	fsr2h,f,c
  1436  0003C6  CF89 FFDF          	movff	3977,indf2	;volatile
  1437                           
  1438                           ;core.c: 44: task1->reg[9]=LATB;
  1439  0003CA  EE20 F010          	lfsr	2,16
  1440  0003CE  5001               	movf	Task_Save@task1,w,c
  1441  0003D0  26D9               	addwf	fsr2l,f,c
  1442  0003D2  5002               	movf	Task_Save@task1+1,w,c
  1443  0003D4  22DA               	addwfc	fsr2h,f,c
  1444  0003D6  CF8A FFDF          	movff	3978,indf2	;volatile
  1445                           
  1446                           ;core.c: 45: task1->reg[10]=LATC;
  1447  0003DA  EE20 F011          	lfsr	2,17
  1448  0003DE  5001               	movf	Task_Save@task1,w,c
  1449  0003E0  26D9               	addwf	fsr2l,f,c
  1450  0003E2  5002               	movf	Task_Save@task1+1,w,c
  1451  0003E4  22DA               	addwfc	fsr2h,f,c
  1452  0003E6  CF8B FFDF          	movff	3979,indf2	;volatile
  1453                           
  1454                           ;core.c: 46: task1->reg[11]=LATD;
  1455  0003EA  EE20 F012          	lfsr	2,18
  1456  0003EE  5001               	movf	Task_Save@task1,w,c
  1457  0003F0  26D9               	addwf	fsr2l,f,c
  1458  0003F2  5002               	movf	Task_Save@task1+1,w,c
  1459  0003F4  22DA               	addwfc	fsr2h,f,c
  1460  0003F6  CF8C FFDF          	movff	3980,indf2	;volatile
  1461  0003FA  0012               	return	
  1462  0003FC                     __end_of_Task_Save:
  1463                           	opt stack 0
  1464                           tosu	equ	0xFFF
  1465                           tosh	equ	0xFFE
  1466                           tosl	equ	0xFFD
  1467                           pclatu	equ	0xFFB
  1468                           pclath	equ	0xFFA
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           prodh	equ	0xFF4
  1474                           prodl	equ	0xFF3
  1475                           intcon	equ	0xFF2
  1476                           postinc0	equ	0xFEE
  1477                           postdec0	equ	0xFED
  1478                           fsr0h	equ	0xFEA
  1479                           fsr0l	equ	0xFE9
  1480                           wreg	equ	0xFE8
  1481                           postinc1	equ	0xFE6
  1482                           fsr1h	equ	0xFE2
  1483                           fsr1l	equ	0xFE1
  1484                           indf2	equ	0xFDF
  1485                           postinc2	equ	0xFDE
  1486                           postdec2	equ	0xFDD
  1487                           fsr2h	equ	0xFDA
  1488                           fsr2l	equ	0xFD9
  1489                           
  1490 ;; *************** function _TASK_Restore *****************
  1491 ;; Defined at:
  1492 ;;		line 48 in file "core.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  task1           2    0[COMRAM] PTR struct _task
  1495 ;;		 -> tt(38), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;		None               void
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1507 ;;      Params:         2       0       0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0
  1510 ;;      Totals:         2       0       0       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_HighInt
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text9
  1521  0003FC                     __ptext9:
  1522                           	opt stack 0
  1523  0003FC                     _TASK_Restore:
  1524                           	opt stack 28
  1525                           
  1526                           ;core.c: 52: TRISA=task1->reg[0];
  1527                           
  1528                           ;incstack = 0
  1529  0003FC  EE20 F007          	lfsr	2,7
  1530  000400  5001               	movf	TASK_Restore@task1,w,c
  1531  000402  26D9               	addwf	fsr2l,f,c
  1532  000404  5002               	movf	TASK_Restore@task1+1,w,c
  1533  000406  22DA               	addwfc	fsr2h,f,c
  1534  000408  50DF               	movf	indf2,w,c
  1535  00040A  6E92               	movwf	3986,c	;volatile
  1536                           
  1537                           ;core.c: 53: TRISB=task1->reg[1];
  1538  00040C  EE20 F008          	lfsr	2,8
  1539  000410  5001               	movf	TASK_Restore@task1,w,c
  1540  000412  26D9               	addwf	fsr2l,f,c
  1541  000414  5002               	movf	TASK_Restore@task1+1,w,c
  1542  000416  22DA               	addwfc	fsr2h,f,c
  1543  000418  50DF               	movf	indf2,w,c
  1544  00041A  6E93               	movwf	3987,c	;volatile
  1545                           
  1546                           ;core.c: 54: TRISC=task1->reg[2];
  1547  00041C  EE20 F009          	lfsr	2,9
  1548  000420  5001               	movf	TASK_Restore@task1,w,c
  1549  000422  26D9               	addwf	fsr2l,f,c
  1550  000424  5002               	movf	TASK_Restore@task1+1,w,c
  1551  000426  22DA               	addwfc	fsr2h,f,c
  1552  000428  50DF               	movf	indf2,w,c
  1553  00042A  6E94               	movwf	3988,c	;volatile
  1554                           
  1555                           ;core.c: 55: TRISD=task1->reg[3];
  1556  00042C  EE20 F00A          	lfsr	2,10
  1557  000430  5001               	movf	TASK_Restore@task1,w,c
  1558  000432  26D9               	addwf	fsr2l,f,c
  1559  000434  5002               	movf	TASK_Restore@task1+1,w,c
  1560  000436  22DA               	addwfc	fsr2h,f,c
  1561  000438  50DF               	movf	indf2,w,c
  1562  00043A  6E95               	movwf	3989,c	;volatile
  1563                           
  1564                           ;core.c: 57: PORTA=task1->reg[4];
  1565  00043C  EE20 F00B          	lfsr	2,11
  1566  000440  5001               	movf	TASK_Restore@task1,w,c
  1567  000442  26D9               	addwf	fsr2l,f,c
  1568  000444  5002               	movf	TASK_Restore@task1+1,w,c
  1569  000446  22DA               	addwfc	fsr2h,f,c
  1570  000448  50DF               	movf	indf2,w,c
  1571  00044A  6E80               	movwf	3968,c	;volatile
  1572                           
  1573                           ;core.c: 58: PORTB=task1->reg[5];
  1574  00044C  EE20 F00C          	lfsr	2,12
  1575  000450  5001               	movf	TASK_Restore@task1,w,c
  1576  000452  26D9               	addwf	fsr2l,f,c
  1577  000454  5002               	movf	TASK_Restore@task1+1,w,c
  1578  000456  22DA               	addwfc	fsr2h,f,c
  1579  000458  50DF               	movf	indf2,w,c
  1580  00045A  6E81               	movwf	3969,c	;volatile
  1581                           
  1582                           ;core.c: 59: PORTC=task1->reg[6];
  1583  00045C  EE20 F00D          	lfsr	2,13
  1584  000460  5001               	movf	TASK_Restore@task1,w,c
  1585  000462  26D9               	addwf	fsr2l,f,c
  1586  000464  5002               	movf	TASK_Restore@task1+1,w,c
  1587  000466  22DA               	addwfc	fsr2h,f,c
  1588  000468  50DF               	movf	indf2,w,c
  1589  00046A  6E82               	movwf	3970,c	;volatile
  1590                           
  1591                           ;core.c: 60: PORTD=task1->reg[7];
  1592  00046C  EE20 F00E          	lfsr	2,14
  1593  000470  5001               	movf	TASK_Restore@task1,w,c
  1594  000472  26D9               	addwf	fsr2l,f,c
  1595  000474  5002               	movf	TASK_Restore@task1+1,w,c
  1596  000476  22DA               	addwfc	fsr2h,f,c
  1597  000478  50DF               	movf	indf2,w,c
  1598  00047A  6E83               	movwf	3971,c	;volatile
  1599                           
  1600                           ;core.c: 62: LATA=task1->reg[8];
  1601  00047C  EE20 F00F          	lfsr	2,15
  1602  000480  5001               	movf	TASK_Restore@task1,w,c
  1603  000482  26D9               	addwf	fsr2l,f,c
  1604  000484  5002               	movf	TASK_Restore@task1+1,w,c
  1605  000486  22DA               	addwfc	fsr2h,f,c
  1606  000488  50DF               	movf	indf2,w,c
  1607  00048A  6E89               	movwf	3977,c	;volatile
  1608                           
  1609                           ;core.c: 63: LATB=task1->reg[9];
  1610  00048C  EE20 F010          	lfsr	2,16
  1611  000490  5001               	movf	TASK_Restore@task1,w,c
  1612  000492  26D9               	addwf	fsr2l,f,c
  1613  000494  5002               	movf	TASK_Restore@task1+1,w,c
  1614  000496  22DA               	addwfc	fsr2h,f,c
  1615  000498  50DF               	movf	indf2,w,c
  1616  00049A  6E8A               	movwf	3978,c	;volatile
  1617                           
  1618                           ;core.c: 64: LATC=task1->reg[10];
  1619  00049C  EE20 F011          	lfsr	2,17
  1620  0004A0  5001               	movf	TASK_Restore@task1,w,c
  1621  0004A2  26D9               	addwf	fsr2l,f,c
  1622  0004A4  5002               	movf	TASK_Restore@task1+1,w,c
  1623  0004A6  22DA               	addwfc	fsr2h,f,c
  1624  0004A8  50DF               	movf	indf2,w,c
  1625  0004AA  6E8B               	movwf	3979,c	;volatile
  1626                           
  1627                           ;core.c: 65: LATD=task1->reg[11];
  1628  0004AC  EE20 F012          	lfsr	2,18
  1629  0004B0  5001               	movf	TASK_Restore@task1,w,c
  1630  0004B2  26D9               	addwf	fsr2l,f,c
  1631  0004B4  5002               	movf	TASK_Restore@task1+1,w,c
  1632  0004B6  22DA               	addwfc	fsr2h,f,c
  1633  0004B8  50DF               	movf	indf2,w,c
  1634  0004BA  6E8C               	movwf	3980,c	;volatile
  1635  0004BC  0012               	return	
  1636  0004BE                     __end_of_TASK_Restore:
  1637                           	opt stack 0
  1638  0000                     tosu	equ	0xFFF
  1639                           tosh	equ	0xFFE
  1640                           tosl	equ	0xFFD
  1641                           pclatu	equ	0xFFB
  1642                           pclath	equ	0xFFA
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           prodh	equ	0xFF4
  1648                           prodl	equ	0xFF3
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           postdec0	equ	0xFED
  1652                           fsr0h	equ	0xFEA
  1653                           fsr0l	equ	0xFE9
  1654                           wreg	equ	0xFE8
  1655                           postinc1	equ	0xFE6
  1656                           fsr1h	equ	0xFE2
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           postinc2	equ	0xFDE
  1660                           postdec2	equ	0xFDD
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           tosu	equ	0xFFF
  1664                           tosh	equ	0xFFE
  1665                           tosl	equ	0xFFD
  1666                           pclatu	equ	0xFFB
  1667                           pclath	equ	0xFFA
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           intcon	equ	0xFF2
  1675                           postinc0	equ	0xFEE
  1676                           postdec0	equ	0xFED
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           postinc1	equ	0xFE6
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           
  1689                           	psect	text10
  1690  000000                     __ptext10:
  1691                           	opt stack 0
  1692                           tosu	equ	0xFFF
  1693                           tosh	equ	0xFFE
  1694                           tosl	equ	0xFFD
  1695                           pclatu	equ	0xFFB
  1696                           pclath	equ	0xFFA
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           postinc0	equ	0xFEE
  1705                           postdec0	equ	0xFED
  1706                           fsr0h	equ	0xFEA
  1707                           fsr0l	equ	0xFE9
  1708                           wreg	equ	0xFE8
  1709                           postinc1	equ	0xFE6
  1710                           fsr1h	equ	0xFE2
  1711                           fsr1l	equ	0xFE1
  1712                           indf2	equ	0xFDF
  1713                           postinc2	equ	0xFDE
  1714                           postdec2	equ	0xFDD
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           
  1718                           	psect	rparam
  1719  0000                     tosu	equ	0xFFF
  1720                           tosh	equ	0xFFE
  1721                           tosl	equ	0xFFD
  1722                           pclatu	equ	0xFFB
  1723                           pclath	equ	0xFFA
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           prodh	equ	0xFF4
  1729                           prodl	equ	0xFF3
  1730                           intcon	equ	0xFF2
  1731                           postinc0	equ	0xFEE
  1732                           postdec0	equ	0xFED
  1733                           fsr0h	equ	0xFEA
  1734                           fsr0l	equ	0xFE9
  1735                           wreg	equ	0xFE8
  1736                           postinc1	equ	0xFE6
  1737                           fsr1h	equ	0xFE2
  1738                           fsr1l	equ	0xFE1
  1739                           indf2	equ	0xFDF
  1740                           postinc2	equ	0xFDE
  1741                           postdec2	equ	0xFDD
  1742                           fsr2h	equ	0xFDA
  1743                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     95      97
    BANK0           128      0      38
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?_Task_Create.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Init@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Init@task1	PTR struct _task size(2) Largest target is 38
		 -> tt(BANK0[38]), 

    TASK_Restore@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Restore@task1	PTR struct _task size(2) Largest target is 38
		 -> tt(BANK0[38]), 

    Task_Save@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    Task_Save@task1	PTR struct _task size(2) Largest target is 38
		 -> tt(BANK0[38]), 

    Task_Create@func1	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    new_task.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    tt.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    t2.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    S22_task$func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    t1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 


Critical Paths under _main in COMRAM

    _main->_Task_Create

Critical Paths under _HighInt in COMRAM

    _HighInt->_TASK_Restore
    _HighInt->_Task_Save

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighInt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0     727
                                             57 COMRAM    38    38      0
                          _TASK_Init
                        _Task_Create
                         _Task_Empty
                              _func1 *
                              _func2 *
 ---------------------------------------------------------------------------------
 (1) _func2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _func1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Task_Empty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Task_Create                                         41    22     19     289
                                             16 COMRAM    41    22     19
 ---------------------------------------------------------------------------------
 (1) _TASK_Init                                            2     0      2     392
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighInt                                             14    14      0     656
                                              2 COMRAM    14    14      0
                       _TASK_Restore
                          _Task_Save
                       i2_Task_Empty
 ---------------------------------------------------------------------------------
 (3) i2_Task_Empty                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Task_Save                                            2     0      2     328
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TASK_Restore                                         2     0      2     328
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TASK_Init
   _Task_Create
   _Task_Empty
   _func1 *
   _func2 *

 _HighInt (ROOT)
   _TASK_Restore
   _Task_Save
   i2_Task_Empty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      26       5       29.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5F      61       1       76.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87      15        0.0%
DATA                 0      0      87       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr 21 22:21:31 2016

                     u91 04E6                       _tt 0080                      l893 0248  
                    u101 01C6                      u111 01E0                      u121 01F2  
                    u131 0204                      u148 0260                      u149 0274  
                    fsr0 000FE9                      prod 000FF3                      tosl 000FFD  
                    wreg 000FE8                     _GIEH 007F97                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _IPEN 007E87                     i2l66 017A                     _TOSH 000FFE  
                   _TOSL 000FFD                     _TOSU 000FFF                     _main 01B4  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0018          __end_of_HighInt 01B4  
                  ?_main 0001                    _T1CON 000FCD       __size_of_TASK_Init 00C2  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _func1 0572                    _func2 0582  
                  _index 0061                    pclath 000FFA                    tablat 000FF5  
        __initialization 0558             __end_of_main 0278                   ??_main 003A  
          __activetblptr 000002            ??_Task_Create 0024                   ?_func1 0001  
                 ?_func2 0001      Task_Create@new_task 0027               _Task_Empty 04F4  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   _TMR1IP 007CF8  
              ??_HighInt 0003        __end_of_TASK_Init 033A       __size_of_Task_Save 00C2  
                 clear_0 055E                   main@t1 003A                   main@t2 004D  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
    __end_of_Task_Create 04F4               __accesstop 0080  __end_of__initialization 0568  
         __pcstackCOMRAM 0001            __end_of_func1 0582            __end_of_func2 0592  
                ??_func1 0011                  ??_func2 0011               __pbssBANK0 0080  
      __end_of_Task_Save 03FC              ?_Task_Empty 0001            ?_TASK_Restore 0001  
            _Task_Create 04BE        TASK_Restore@task1 0001                  _HighInt 0008  
         ??_TASK_Restore 0003                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0558                  __ramtop 0600                  __ptext0 01B4  
                __ptext1 0572                  __ptext2 0582                  __ptext3 04F4  
                __ptext4 04BE                  __ptext5 0278                  __ptext7 0526  
                __ptext8 033A                  __ptext9 03FC      __size_of_Task_Empty 0032  
         __pintcode_body 001C     end_of_initialization 0568            __Lmediumconst 0000  
                int_func 001C           Task_Save@task1 0001                  postdec0 000FED  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                _TASK_Init 0278            ?i2_Task_Empty 0001  
       Task_Create@func1 0011               ?_TASK_Init 0011     __end_of_TASK_Restore 04BE  
    start_initialization 0558           ??i2_Task_Empty 0001             ??_Task_Empty 0011  
              _Task_Save 033A                _Stack_Sav 0060       __end_of_Task_Empty 0526  
            __pbssCOMRAM 0060             ?_Task_Create 0011                 ?_HighInt 0001  
             ?_Task_Save 0001                __pintcode 0008              ??_TASK_Init 0013  
         __size_of_func1 0010           __size_of_func2 0010    __size_of_TASK_Restore 00C2  
   __end_ofi2_Task_Empty 0558         __size_of_HighInt 01AC              ??_Task_Save 0003  
               __Hrparam 0000             _TASK_Restore 03FC                 __Lrparam 0000  
               __ptext10 0000           TASK_Init@task1 0011     __size_of_Task_Create 0036  
          __size_of_main 00C4                 intlevel2 0000    __size_ofi2_Task_Empty 0032  
           i2_Task_Empty 0526  
