

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Apr 24 17:52:24 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
     9                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     _LATA	set	3977
    28  0000                     _LATB	set	3978
    29  0000                     _LATC	set	3979
    30  0000                     _LATD	set	3980
    31  0000                     _PORTA	set	3968
    32  0000                     _PORTB	set	3969
    33  0000                     _PORTC	set	3970
    34  0000                     _PORTD	set	3971
    35  0000                     _T1CON	set	4045
    36  0000                     _TMR1H	set	4047
    37  0000                     _TMR1L	set	4046
    38  0000                     _TOSH	set	4094
    39  0000                     _TOSL	set	4093
    40  0000                     _TOSU	set	4095
    41  0000                     _TRISA	set	3986
    42  0000                     _TRISB	set	3987
    43  0000                     _TRISC	set	3988
    44  0000                     _TRISD	set	3989
    45  0000                     _GIEH	set	32663
    46  0000                     _IPEN	set	32391
    47  0000                     _TMR1IE	set	31976
    48  0000                     _TMR1IF	set	31984
    49  0000                     _TMR1IP	set	31992
    50                           
    51 ;;
    52 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    53 ;;
    54 ;; *************** function _main *****************
    55 ;; Defined at:
    56 ;;		line 37 in file "main.c"
    57 ;; Parameters:    Size  Location     Type
    58 ;;		None
    59 ;; Auto vars:     Size  Location     Type
    60 ;;  t2            147    0[BANK4 ] struct _task
    61 ;;  t1            147    0[BANK3 ] struct _task
    62 ;;  bbytess         2   22[COMRAM] int 
    63 ;; Return value:  Size  Location     Type
    64 ;;                  2   60[COMRAM] int 
    65 ;; Registers used:
    66 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
    67 ;; Tracked objects:
    68 ;;		On entry : 0/0
    69 ;;		On exit  : 0/0
    70 ;;		Unchanged: 0/0
    71 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    72 ;;      Params:         0       0       0       0       0       0       0
    73 ;;      Locals:         2       0       0       0     147     147       0
    74 ;;      Temps:          0       0       0       0       0       0       0
    75 ;;      Totals:         2       0       0       0     147     147       0
    76 ;;Total ram usage:      296 bytes
    77 ;; Hardware stack levels required when called:    4
    78 ;; This function calls:
    79 ;;		_TASK_Init
    80 ;;		_Task_Create
    81 ;;		_Task_Empty
    82 ;;		_func1
    83 ;;		_func2
    84 ;; This function is called by:
    85 ;;		Startup code after reset
    86 ;; This function uses a non-reentrant model
    87 ;;
    88                           
    89                           	psect	text0
    90  000474                     __ptext0:
    91                           	opt stack 0
    92  000474                     _main:
    93                           	opt stack 27
    94                           
    95                           ;main.c: 39: int bbytess=0x00;
    96                           
    97                           ;incstack = 0
    98  000474  0E00               	movlw	0
    99  000476  6E18               	movwf	main@bbytess+1,c
   100  000478  0E00               	movlw	0
   101  00047A  6E17               	movwf	main@bbytess,c
   102                           
   103                           ;main.c: 40: task t1;
   104                           ;main.c: 41: task t2;
   105                           ;main.c: 42: t1=Task_Create(func1);
   106  00047C  0E06               	movlw	high _func1
   107  00047E  0101               	movlb	1	; () banked
   108  000480  6F01               	movwf	(Task_Create@func1+1)& (0+255),b
   109  000482  0E42               	movlw	low _func1
   110  000484  0101               	movlb	1	; () banked
   111  000486  6F00               	movwf	Task_Create@func1& (0+255),b
   112  000488  ECA2  F002         	call	_Task_Create	;wreg free
   113  00048C  EE23  F000         	lfsr	2,main@t1
   114  000490  0E93               	movlw	147
   115  000492                     u221:
   116  000492  CFEE FFDE          	movff	postinc0,postinc2
   117  000496  2EE8               	decfsz	wreg,f,c
   118  000498  D7FC               	goto	u221
   119                           
   120                           ;main.c: 43: t2=Task_Create(func2);
   121  00049A  0E05               	movlw	high _func2
   122  00049C  0101               	movlb	1	; () banked
   123  00049E  6F01               	movwf	(Task_Create@func1+1)& (0+255),b
   124  0004A0  0E88               	movlw	low _func2
   125  0004A2  0101               	movlb	1	; () banked
   126  0004A4  6F00               	movwf	Task_Create@func1& (0+255),b
   127  0004A6  ECA2  F002         	call	_Task_Create	;wreg free
   128  0004AA  EE24  F000         	lfsr	2,main@t2
   129  0004AE  0E93               	movlw	147
   130  0004B0                     u231:
   131  0004B0  CFEE FFDE          	movff	postinc0,postinc2
   132  0004B4  2EE8               	decfsz	wreg,f,c
   133  0004B6  D7FC               	goto	u231
   134                           
   135                           ;main.c: 44: tt[0]=t1;
   136  0004B8  EE23  F000         	lfsr	2,main@t1
   137  0004BC  EE14  F093         	lfsr	1,_tt
   138  0004C0  0E93               	movlw	147
   139  0004C2                     u241:
   140  0004C2  CFDE FFE6          	movff	postinc2,postinc1
   141  0004C6  2EE8               	decfsz	wreg,f,c
   142  0004C8  D7FC               	goto	u241
   143                           
   144                           ;main.c: 45: tt[1]=t2;
   145  0004CA  EE24  F000         	lfsr	2,main@t2
   146  0004CE  EE15  F026         	lfsr	1,_tt+147
   147  0004D2  0E93               	movlw	147
   148  0004D4                     u251:
   149  0004D4  CFDE FFE6          	movff	postinc2,postinc1
   150  0004D8  2EE8               	decfsz	wreg,f,c
   151  0004DA  D7FC               	goto	u251
   152                           
   153                           ;main.c: 47: Task_Empty();
   154  0004DC  ECDE  F002         	call	_Task_Empty	;wreg free
   155                           
   156                           ;main.c: 48: TASK_Init(&tt[0]);
   157  0004E0  0E04               	movlw	high _tt
   158  0004E2  6E15               	movwf	TASK_Init@task1+1,c
   159  0004E4  0E93               	movlw	low _tt
   160  0004E6  6E14               	movwf	TASK_Init@task1,c
   161  0004E8  ECC2  F001         	call	_TASK_Init	;wreg free
   162                           
   163                           ;main.c: 49: TASK_Init(&tt[1]);
   164  0004EC  0E05               	movlw	high (_tt+147)
   165  0004EE  6E15               	movwf	TASK_Init@task1+1,c
   166  0004F0  0E26               	movlw	low (_tt+147)
   167  0004F2  6E14               	movwf	TASK_Init@task1,c
   168  0004F4  ECC2  F001         	call	_TASK_Init	;wreg free
   169                           
   170                           ;main.c: 51: index=0;
   171  0004F8  0E00               	movlw	0
   172  0004FA  6E1A               	movwf	_index,c
   173                           
   174                           ;main.c: 53: T1CON=0B11111101;
   175  0004FC  0EFD               	movlw	253
   176  0004FE  6ECD               	movwf	4045,c	;volatile
   177                           
   178                           ;main.c: 54: TMR1H=(65536-2)/256;
   179  000500  68CF               	setf	4047,c	;volatile
   180                           
   181                           ;main.c: 55: TMR1L=(65536-2)%256;
   182  000502  0EFE               	movlw	254
   183  000504  6ECE               	movwf	4046,c	;volatile
   184                           
   185                           ;main.c: 56: TMR1IF=0;
   186  000506  909E               	bcf	3998,0,c	;volatile
   187                           
   188                           ;main.c: 57: TMR1IP=1;
   189  000508  809F               	bsf	3999,0,c	;volatile
   190                           
   191                           ;main.c: 58: TMR1IE=1;
   192  00050A  809D               	bsf	3997,0,c	;volatile
   193                           
   194                           ;main.c: 59: IPEN=1;
   195  00050C  8ED0               	bsf	4048,7,c	;volatile
   196                           
   197                           ;main.c: 60: GIEH=1;
   198  00050E  8EF2               	bsf	intcon,7,c	;volatile
   199  000510                     l989:
   200                           
   201                           ;main.c: 63: {
   202                           ;main.c: 64: tt[index].func();
   203  000510  501A               	movf	_index,w,c
   204  000512  0D93               	mullw	147
   205  000514  0E93               	movlw	low _tt
   206  000516  24F3               	addwf	prodl,w,c
   207  000518  6ED9               	movwf	fsr2l,c
   208  00051A  0E04               	movlw	high _tt
   209  00051C  20F4               	addwfc	prodh,w,c
   210  00051E  6EDA               	movwf	fsr2h,c
   211  000520  D801               	call	u268
   212  000522  D00A               	goto	u269
   213  000524                     u268:
   214  000524  0005               	push	
   215  000526  6EFA               	movwf	pclath,c
   216  000528  50DE               	movf	postinc2,w,c
   217  00052A  6EFD               	movwf	tosl,c
   218  00052C  50DE               	movf	postinc2,w,c
   219  00052E  6EFE               	movwf	tosh,c
   220  000530  50F8               	movf	tblptru,w,c
   221  000532  6EFF               	movwf	tosu,c
   222  000534  50FA               	movf	pclath,w,c
   223  000536  0012               	return		;indir
   224  000538                     u269:
   225                           
   226                           ;main.c: 65: bbytess+=index;
   227  000538  501A               	movf	_index,w,c
   228  00053A  2617               	addwf	main@bbytess,f,c
   229  00053C  0E00               	movlw	0
   230  00053E  2218               	addwfc	main@bbytess+1,f,c
   231                           
   232                           ;main.c: 66: __nop();
   233  000540  F000               	nop	
   234  000542  D7E6               	goto	l989
   235  000544                     __end_of_main:
   236                           	opt stack 0
   237                           tosu	equ	0xFFF
   238                           tosh	equ	0xFFE
   239                           tosl	equ	0xFFD
   240                           pclath	equ	0xFFA
   241                           tblptru	equ	0xFF8
   242                           prodh	equ	0xFF4
   243                           prodl	equ	0xFF3
   244                           intcon	equ	0xFF2
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           postinc1	equ	0xFE6
   248                           postinc2	equ	0xFDE
   249                           fsr2h	equ	0xFDA
   250                           fsr2l	equ	0xFD9
   251                           
   252                           	psect	cinit
   253  000620                     __pcinit:
   254                           	opt stack 0
   255  000620                     start_initialization:
   256                           	opt stack 0
   257  000620                     __initialization:
   258                           	opt stack 0
   259                           
   260                           ; Clear objects allocated to BIGRAM (294 bytes)
   261  000620  EE04  F093         	lfsr	0,__pbssBIGRAM
   262  000624  EE11 F026          	lfsr	1,294
   263  000628                     clear_0:
   264  000628  6AEE               	clrf	postinc0,c
   265  00062A  50E5               	movf	postdec1,w,c
   266  00062C  50E1               	movf	fsr1l,w,c
   267  00062E  E1FC               	bnz	clear_0
   268  000630  50E2               	movf	fsr1h,w,c
   269  000632  E1FA               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to COMRAM (2 bytes)
   272  000634  6A1A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   273  000636  6A19               	clrf	__pbssCOMRAM& (0+255),c
   274  000638                     end_of_initialization:
   275                           	opt stack 0
   276  000638                     __end_of__initialization:
   277                           	opt stack 0
   278  000638  0E00               	movlw	low (__Lmediumconst shr (0+16))
   279  00063A  6EF8               	movwf	tblptru,c
   280  00063C  0100               	movlb	0
   281  00063E  EF3A  F002         	goto	_main	;jump to C main() function
   282                           tosu	equ	0xFFF
   283                           tosh	equ	0xFFE
   284                           tosl	equ	0xFFD
   285                           pclath	equ	0xFFA
   286                           tblptru	equ	0xFF8
   287                           prodh	equ	0xFF4
   288                           prodl	equ	0xFF3
   289                           intcon	equ	0xFF2
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postinc1	equ	0xFE6
   293                           postdec1	equ	0xFE5
   294                           fsr1h	equ	0xFE2
   295                           fsr1l	equ	0xFE1
   296                           postinc2	equ	0xFDE
   297                           fsr2h	equ	0xFDA
   298                           fsr2l	equ	0xFD9
   299                           
   300                           	psect	bssCOMRAM
   301  000019                     __pbssCOMRAM:
   302                           	opt stack 0
   303  000019                     _Stack_Sav:
   304                           	opt stack 0
   305  000019                     	ds	1
   306  00001A                     _index:
   307                           	opt stack 0
   308  00001A                     	ds	1
   309                           tosu	equ	0xFFF
   310                           tosh	equ	0xFFE
   311                           tosl	equ	0xFFD
   312                           pclath	equ	0xFFA
   313                           tblptru	equ	0xFF8
   314                           prodh	equ	0xFF4
   315                           prodl	equ	0xFF3
   316                           intcon	equ	0xFF2
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postinc1	equ	0xFE6
   320                           postdec1	equ	0xFE5
   321                           fsr1h	equ	0xFE2
   322                           fsr1l	equ	0xFE1
   323                           postinc2	equ	0xFDE
   324                           fsr2h	equ	0xFDA
   325                           fsr2l	equ	0xFD9
   326                           
   327                           	psect	bssBIGRAM
   328  000493                     __pbssBIGRAM:
   329                           	opt stack 0
   330  000493                     _tt:
   331                           	opt stack 0
   332  000493                     	ds	294
   333                           tosu	equ	0xFFF
   334                           tosh	equ	0xFFE
   335                           tosl	equ	0xFFD
   336                           pclath	equ	0xFFA
   337                           tblptru	equ	0xFF8
   338                           prodh	equ	0xFF4
   339                           prodl	equ	0xFF3
   340                           intcon	equ	0xFF2
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postinc1	equ	0xFE6
   344                           postdec1	equ	0xFE5
   345                           fsr1h	equ	0xFE2
   346                           fsr1l	equ	0xFE1
   347                           postinc2	equ	0xFDE
   348                           fsr2h	equ	0xFDA
   349                           fsr2l	equ	0xFD9
   350                           
   351                           	psect	cstackBANK4
   352  000400                     __pcstackBANK4:
   353                           	opt stack 0
   354  000400                     main@t2:
   355                           	opt stack 0
   356                           
   357                           ; 147 bytes @ 0x0
   358  000400                     	ds	147
   359                           tosu	equ	0xFFF
   360                           tosh	equ	0xFFE
   361                           tosl	equ	0xFFD
   362                           pclath	equ	0xFFA
   363                           tblptru	equ	0xFF8
   364                           prodh	equ	0xFF4
   365                           prodl	equ	0xFF3
   366                           intcon	equ	0xFF2
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postinc1	equ	0xFE6
   370                           postdec1	equ	0xFE5
   371                           fsr1h	equ	0xFE2
   372                           fsr1l	equ	0xFE1
   373                           postinc2	equ	0xFDE
   374                           fsr2h	equ	0xFDA
   375                           fsr2l	equ	0xFD9
   376                           
   377                           	psect	cstackBANK3
   378  000300                     __pcstackBANK3:
   379                           	opt stack 0
   380  000300                     main@t1:
   381                           	opt stack 0
   382                           
   383                           ; 147 bytes @ 0x0
   384  000300                     	ds	147
   385                           tosu	equ	0xFFF
   386                           tosh	equ	0xFFE
   387                           tosl	equ	0xFFD
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           prodh	equ	0xFF4
   391                           prodl	equ	0xFF3
   392                           intcon	equ	0xFF2
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postinc1	equ	0xFE6
   396                           postdec1	equ	0xFE5
   397                           fsr1h	equ	0xFE2
   398                           fsr1l	equ	0xFE1
   399                           postinc2	equ	0xFDE
   400                           fsr2h	equ	0xFDA
   401                           fsr2l	equ	0xFD9
   402                           
   403                           	psect	cstackBANK2
   404  000200                     __pcstackBANK2:
   405                           	opt stack 0
   406  000200                     Task_Create@new_task:
   407                           	opt stack 0
   408                           
   409                           ; 147 bytes @ 0x0
   410  000200                     	ds	147
   411                           tosu	equ	0xFFF
   412                           tosh	equ	0xFFE
   413                           tosl	equ	0xFFD
   414                           pclath	equ	0xFFA
   415                           tblptru	equ	0xFF8
   416                           prodh	equ	0xFF4
   417                           prodl	equ	0xFF3
   418                           intcon	equ	0xFF2
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           postinc1	equ	0xFE6
   422                           postdec1	equ	0xFE5
   423                           fsr1h	equ	0xFE2
   424                           fsr1l	equ	0xFE1
   425                           postinc2	equ	0xFDE
   426                           fsr2h	equ	0xFDA
   427                           fsr2l	equ	0xFD9
   428                           
   429                           	psect	cstackBANK1
   430  000100                     __pcstackBANK1:
   431                           	opt stack 0
   432  000100                     ?_Task_Create:
   433                           	opt stack 0
   434  000100                     Task_Create@func1:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x0
   438  000100                     	ds	147
   439                           tosu	equ	0xFFF
   440                           tosh	equ	0xFFE
   441                           tosl	equ	0xFFD
   442                           pclath	equ	0xFFA
   443                           tblptru	equ	0xFF8
   444                           prodh	equ	0xFF4
   445                           prodl	equ	0xFF3
   446                           intcon	equ	0xFF2
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postinc1	equ	0xFE6
   450                           postdec1	equ	0xFE5
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           postinc2	equ	0xFDE
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           
   457                           	psect	cstackCOMRAM
   458  000001                     __pcstackCOMRAM:
   459                           	opt stack 0
   460  000001                     Task_Save@task1:
   461                           	opt stack 0
   462  000001                     TASK_Restore@task1:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x0
   466  000001                     	ds	2
   467  000003                     ??_Task_Save:
   468  000003                     ??_TASK_Restore:
   469                           
   470                           ; 0 bytes @ 0x2
   471  000003                     	ds	2
   472  000005                     Task_Save@j:
   473                           	opt stack 0
   474  000005                     TASK_Restore@j:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x4
   478  000005                     	ds	1
   479  000006                     ??_HighInt:
   480                           
   481                           ; 0 bytes @ 0x5
   482  000006                     	ds	14
   483  000014                     ??_Task_Create:
   484  000014                     func1@bytess:
   485                           	opt stack 0
   486  000014                     func2@i:
   487                           	opt stack 0
   488  000014                     TASK_Init@task1:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x13
   492  000014                     	ds	2
   493  000016                     TASK_Init@i:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x15
   497  000016                     	ds	1
   498  000017                     main@bbytess:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x16
   502  000017                     	ds	2
   503                           tosu	equ	0xFFF
   504                           tosh	equ	0xFFE
   505                           tosl	equ	0xFFD
   506                           pclath	equ	0xFFA
   507                           tblptru	equ	0xFF8
   508                           prodh	equ	0xFF4
   509                           prodl	equ	0xFF3
   510                           intcon	equ	0xFF2
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postinc1	equ	0xFE6
   514                           postdec1	equ	0xFE5
   515                           fsr1h	equ	0xFE2
   516                           fsr1l	equ	0xFE1
   517                           postinc2	equ	0xFDE
   518                           fsr2h	equ	0xFDA
   519                           fsr2l	equ	0xFD9
   520                           
   521 ;; *************** function _func1 *****************
   522 ;; Defined at:
   523 ;;		line 21 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  bytess          1   19[COMRAM] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;		None               void
   530 ;; Registers used:
   531 ;;		wreg, status,2
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   537 ;;      Params:         0       0       0       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0
   540 ;;      Totals:         1       0       0       0       0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    2
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text1
   552  000642                     __ptext1:
   553                           	opt stack 0
   554  000642                     _func1:
   555                           	opt stack 28
   556                           
   557                           ;main.c: 23: TRISB=0x00;
   558                           
   559                           ;incstack = 0
   560  000642  0E00               	movlw	0
   561  000644  6E93               	movwf	3987,c	;volatile
   562  000646                     
   563                           ;main.c: 24: __nop();
   564  000646  F000               	nop	
   565                           
   566                           ;main.c: 25: __nop();
   567  000648  F000               	nop	
   568                           
   569                           ;main.c: 27: {
   570                           ;main.c: 28: unsigned char bytess=0x02;
   571                           
   572                           ;main.c: 26: while(1)
   573  00064A  0E02               	movlw	2
   574  00064C  6E14               	movwf	func1@bytess,c
   575                           
   576                           ;main.c: 29: __nop();
   577  00064E  F000               	nop	
   578                           
   579                           ;main.c: 30: __nop();
   580  000650  F000               	nop	
   581                           
   582                           ;main.c: 31: PORTB=bytess;
   583  000652  C014  FF81         	movff	func1@bytess,3969	;volatile
   584                           
   585                           ;main.c: 32: __nop();
   586  000656  F000               	nop	
   587  000658  D7F6               	goto	L1
   588  00065A                     __end_of_func1:
   589                           	opt stack 0
   590                           tosu	equ	0xFFF
   591                           tosh	equ	0xFFE
   592                           tosl	equ	0xFFD
   593                           pclath	equ	0xFFA
   594                           tblptru	equ	0xFF8
   595                           prodh	equ	0xFF4
   596                           prodl	equ	0xFF3
   597                           intcon	equ	0xFF2
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postinc1	equ	0xFE6
   601                           postdec1	equ	0xFE5
   602                           fsr1h	equ	0xFE2
   603                           fsr1l	equ	0xFE1
   604                           postinc2	equ	0xFDE
   605                           fsr2h	equ	0xFDA
   606                           fsr2l	equ	0xFD9
   607                           
   608 ;; *************** function _func2 *****************
   609 ;; Defined at:
   610 ;;		line 4 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  i               2   19[COMRAM] int 
   615 ;; Return value:  Size  Location     Type
   616 ;;		None               void
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         0       0       0       0       0       0       0
   625 ;;      Locals:         2       0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0
   627 ;;      Totals:         2       0       0       0       0       0       0
   628 ;;Total ram usage:        2 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    2
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text2
   639  000588                     __ptext2:
   640                           	opt stack 0
   641  000588                     _func2:
   642                           	opt stack 28
   643                           
   644                           ;main.c: 6: TRISB=0x00;
   645                           
   646                           ;incstack = 0
   647  000588  0E00               	movlw	0
   648  00058A  6E93               	movwf	3987,c	;volatile
   649                           
   650                           ;main.c: 7: __nop();
   651  00058C  F000               	nop	
   652                           
   653                           ;main.c: 8: __nop();
   654  00058E  F000               	nop	
   655                           
   656                           ;main.c: 9: for(int i=0;i<10000;i++)
   657  000590  0E00               	movlw	0
   658  000592  6E15               	movwf	func2@i+1,c
   659  000594  0E00               	movlw	0
   660  000596  6E14               	movwf	func2@i,c
   661  000598  5015               	movf	func2@i+1,w,c
   662  00059A  0A80               	xorlw	128
   663  00059C  0F59               	addlw	-167
   664  00059E  0E10               	movlw	16
   665  0005A0  B4D8               	btfsc	status,2,c
   666  0005A2  5C14               	subwf	func2@i,w,c
   667  0005A4  B0D8               	btfsc	status,0,c
   668  0005A6  D004               	goto	l901
   669                           
   670                           ;main.c: 10: {
   671                           ;main.c: 11: __nop();
   672  0005A8  F000               	nop	
   673  0005AA  4A14               	infsnz	func2@i,f,c
   674  0005AC  2A15               	incf	func2@i+1,f,c
   675  0005AE  D7F4               	goto	L2
   676  0005B0                     l901:
   677                           
   678                           ;main.c: 14: {
   679                           ;main.c: 15: PORTB=0x01;
   680  0005B0  0E01               	movlw	1
   681  0005B2  6E81               	movwf	3969,c	;volatile
   682                           
   683                           ;main.c: 16: __nop();
   684  0005B4  F000               	nop	
   685                           
   686                           ;main.c: 17: __nop();
   687  0005B6  F000               	nop	
   688                           
   689                           ;main.c: 18: __nop();
   690  0005B8  F000               	nop	
   691  0005BA  D7FA               	goto	l901
   692  0005BC                     __end_of_func2:
   693                           	opt stack 0
   694                           tosu	equ	0xFFF
   695                           tosh	equ	0xFFE
   696                           tosl	equ	0xFFD
   697                           pclath	equ	0xFFA
   698                           tblptru	equ	0xFF8
   699                           prodh	equ	0xFF4
   700                           prodl	equ	0xFF3
   701                           intcon	equ	0xFF2
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           postinc1	equ	0xFE6
   705                           postdec1	equ	0xFE5
   706                           fsr1h	equ	0xFE2
   707                           fsr1l	equ	0xFE1
   708                           postinc2	equ	0xFDE
   709                           fsr2h	equ	0xFDA
   710                           fsr2l	equ	0xFD9
   711                           status	equ	0xFD8
   712                           
   713 ;; *************** function _Task_Create *****************
   714 ;; Defined at:
   715 ;;		line 2 in file "core.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  func1           2    0[BANK1 ] PTR FTN()void 
   718 ;;		 -> func1(0), func2(0), 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  new_task      147    0[BANK2 ] struct _task
   721 ;; Return value:  Size  Location     Type
   722 ;;                  147    0[BANK1 ] struct _task
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   730 ;;      Params:         0       0     147       0       0       0       0
   731 ;;      Locals:         0       0       0     147       0       0       0
   732 ;;      Temps:          3       0       0       0       0       0       0
   733 ;;      Totals:         3       0     147     147       0       0       0
   734 ;;Total ram usage:      297 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    2
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text3
   745  000544                     __ptext3:
   746                           	opt stack 0
   747  000544                     _Task_Create:
   748                           	opt stack 28
   749                           
   750                           ;core.c: 4: task new_task;
   751                           ;core.c: 5: new_task.func=func1;
   752                           
   753                           ;incstack = 0
   754  000544  0101               	movlb	1	; () banked
   755  000546  0102               	movlb	2	; () banked
   756  000548  C101  F201         	movff	Task_Create@func1+1,Task_Create@new_task+1
   757  00054C  0101               	movlb	1	; () banked
   758  00054E  0102               	movlb	2	; () banked
   759  000550  C100  F200         	movff	Task_Create@func1,Task_Create@new_task
   760                           
   761                           ; BSR set to: 2
   762                           ;core.c: 6: new_task.S_TOSH=(unsigned char)(((unsigned int)func1 & 0xFF00) >> 8);
   763  000554  0101               	movlb	1	; () banked
   764  000556  C101  F014         	movff	Task_Create@func1+1,??_Task_Create
   765  00055A  C014  F015         	movff	??_Task_Create,??_Task_Create+1
   766  00055E  6A16               	clrf	(??_Task_Create+2)& (0+255),c
   767  000560  5015               	movf	??_Task_Create+1,w,c
   768  000562  0102               	movlb	2	; () banked
   769  000564  6F05               	movwf	(Task_Create@new_task+5)& (0+255),b
   770                           
   771                           ; BSR set to: 2
   772                           ;core.c: 7: new_task.S_TOSL=(unsigned char)((unsigned int)func1 & 0x00FF);
   773  000566  C100  F204         	movff	Task_Create@func1,Task_Create@new_task+4
   774                           
   775                           ; BSR set to: 2
   776                           ;core.c: 8: new_task.S_TOSU=0x00;
   777  00056A  0E00               	movlw	0
   778  00056C  0102               	movlb	2	; () banked
   779  00056E  6F06               	movwf	(Task_Create@new_task+6)& (0+255),b
   780                           
   781                           ; BSR set to: 2
   782                           ;core.c: 9: return new_task;
   783  000570  EE22  F092         	lfsr	2,Task_Create@new_task+146
   784  000574  EE01  F092         	lfsr	0,?_Task_Create+146
   785  000578  0E93               	movlw	147
   786  00057A                     u191:
   787  00057A  CFDD FFED          	movff	postdec2,postdec0
   788  00057E  2EE8               	decfsz	wreg,f,c
   789  000580  D7FC               	goto	u191
   790  000582  2AE9               	incf	fsr0l,f,c
   791  000584  22EA               	addwfc	fsr0h,f,c
   792                           
   793                           ; BSR set to: 2
   794                           
   795                           ; BSR set to: 2
   796  000586  0012               	return	
   797  000588                     __end_of_Task_Create:
   798                           	opt stack 0
   799                           tosu	equ	0xFFF
   800                           tosh	equ	0xFFE
   801                           tosl	equ	0xFFD
   802                           pclath	equ	0xFFA
   803                           tblptru	equ	0xFF8
   804                           prodh	equ	0xFF4
   805                           prodl	equ	0xFF3
   806                           intcon	equ	0xFF2
   807                           postinc0	equ	0xFEE
   808                           postdec0	equ	0xFED
   809                           fsr0h	equ	0xFEA
   810                           fsr0l	equ	0xFE9
   811                           wreg	equ	0xFE8
   812                           postinc1	equ	0xFE6
   813                           postdec1	equ	0xFE5
   814                           fsr1h	equ	0xFE2
   815                           fsr1l	equ	0xFE1
   816                           postinc2	equ	0xFDE
   817                           postdec2	equ	0xFDD
   818                           fsr2h	equ	0xFDA
   819                           fsr2l	equ	0xFD9
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _TASK_Init *****************
   823 ;; Defined at:
   824 ;;		line 85 in file "core.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  task1           2   19[COMRAM] PTR struct _task
   827 ;;		 -> tt(294), 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  i               1   21[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   839 ;;      Params:         2       0       0       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0
   842 ;;      Totals:         3       0       0       0       0       0       0
   843 ;;Total ram usage:        3 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    3
   846 ;; This function calls:
   847 ;;		_Task_Empty
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text4
   854  000384                     __ptext4:
   855                           	opt stack 0
   856  000384                     _TASK_Init:
   857                           	opt stack 27
   858                           
   859                           ;core.c: 89: task1->reg[0]=0x00;
   860                           
   861                           ; BSR set to: 2
   862                           ;incstack = 0
   863  000384  EE20 F007          	lfsr	2,7
   864  000388  5014               	movf	TASK_Init@task1,w,c
   865  00038A  26D9               	addwf	fsr2l,f,c
   866  00038C  5015               	movf	TASK_Init@task1+1,w,c
   867  00038E  22DA               	addwfc	fsr2h,f,c
   868  000390  0E00               	movlw	0
   869  000392  6EDF               	movwf	indf2,c
   870                           
   871                           ;core.c: 90: task1->reg[1]=0x00;
   872  000394  EE20 F008          	lfsr	2,8
   873  000398  5014               	movf	TASK_Init@task1,w,c
   874  00039A  26D9               	addwf	fsr2l,f,c
   875  00039C  5015               	movf	TASK_Init@task1+1,w,c
   876  00039E  22DA               	addwfc	fsr2h,f,c
   877  0003A0  0E00               	movlw	0
   878  0003A2  6EDF               	movwf	indf2,c
   879                           
   880                           ;core.c: 91: task1->reg[2]=0x00;
   881  0003A4  EE20 F009          	lfsr	2,9
   882  0003A8  5014               	movf	TASK_Init@task1,w,c
   883  0003AA  26D9               	addwf	fsr2l,f,c
   884  0003AC  5015               	movf	TASK_Init@task1+1,w,c
   885  0003AE  22DA               	addwfc	fsr2h,f,c
   886  0003B0  0E00               	movlw	0
   887  0003B2  6EDF               	movwf	indf2,c
   888                           
   889                           ;core.c: 92: task1->reg[3]=0x00;
   890  0003B4  EE20 F00A          	lfsr	2,10
   891  0003B8  5014               	movf	TASK_Init@task1,w,c
   892  0003BA  26D9               	addwf	fsr2l,f,c
   893  0003BC  5015               	movf	TASK_Init@task1+1,w,c
   894  0003BE  22DA               	addwfc	fsr2h,f,c
   895  0003C0  0E00               	movlw	0
   896  0003C2  6EDF               	movwf	indf2,c
   897                           
   898                           ;core.c: 94: task1->reg[4]=0x00;
   899  0003C4  EE20 F00B          	lfsr	2,11
   900  0003C8  5014               	movf	TASK_Init@task1,w,c
   901  0003CA  26D9               	addwf	fsr2l,f,c
   902  0003CC  5015               	movf	TASK_Init@task1+1,w,c
   903  0003CE  22DA               	addwfc	fsr2h,f,c
   904  0003D0  0E00               	movlw	0
   905  0003D2  6EDF               	movwf	indf2,c
   906                           
   907                           ;core.c: 95: task1->reg[5]=0x00;
   908  0003D4  EE20 F00C          	lfsr	2,12
   909  0003D8  5014               	movf	TASK_Init@task1,w,c
   910  0003DA  26D9               	addwf	fsr2l,f,c
   911  0003DC  5015               	movf	TASK_Init@task1+1,w,c
   912  0003DE  22DA               	addwfc	fsr2h,f,c
   913  0003E0  0E00               	movlw	0
   914  0003E2  6EDF               	movwf	indf2,c
   915                           
   916                           ;core.c: 96: task1->reg[6]=0x00;
   917  0003E4  EE20 F00D          	lfsr	2,13
   918  0003E8  5014               	movf	TASK_Init@task1,w,c
   919  0003EA  26D9               	addwf	fsr2l,f,c
   920  0003EC  5015               	movf	TASK_Init@task1+1,w,c
   921  0003EE  22DA               	addwfc	fsr2h,f,c
   922  0003F0  0E00               	movlw	0
   923  0003F2  6EDF               	movwf	indf2,c
   924                           
   925                           ;core.c: 97: task1->reg[7]=0x00;
   926  0003F4  EE20 F00E          	lfsr	2,14
   927  0003F8  5014               	movf	TASK_Init@task1,w,c
   928  0003FA  26D9               	addwf	fsr2l,f,c
   929  0003FC  5015               	movf	TASK_Init@task1+1,w,c
   930  0003FE  22DA               	addwfc	fsr2h,f,c
   931  000400  0E00               	movlw	0
   932  000402  6EDF               	movwf	indf2,c
   933                           
   934                           ;core.c: 99: task1->reg[8]=0x00;
   935  000404  EE20 F00F          	lfsr	2,15
   936  000408  5014               	movf	TASK_Init@task1,w,c
   937  00040A  26D9               	addwf	fsr2l,f,c
   938  00040C  5015               	movf	TASK_Init@task1+1,w,c
   939  00040E  22DA               	addwfc	fsr2h,f,c
   940  000410  0E00               	movlw	0
   941  000412  6EDF               	movwf	indf2,c
   942                           
   943                           ;core.c: 100: task1->reg[9]=0x00;
   944  000414  EE20 F010          	lfsr	2,16
   945  000418  5014               	movf	TASK_Init@task1,w,c
   946  00041A  26D9               	addwf	fsr2l,f,c
   947  00041C  5015               	movf	TASK_Init@task1+1,w,c
   948  00041E  22DA               	addwfc	fsr2h,f,c
   949  000420  0E00               	movlw	0
   950  000422  6EDF               	movwf	indf2,c
   951                           
   952                           ;core.c: 101: task1->reg[10]=0x00;
   953  000424  EE20 F011          	lfsr	2,17
   954  000428  5014               	movf	TASK_Init@task1,w,c
   955  00042A  26D9               	addwf	fsr2l,f,c
   956  00042C  5015               	movf	TASK_Init@task1+1,w,c
   957  00042E  22DA               	addwfc	fsr2h,f,c
   958  000430  0E00               	movlw	0
   959  000432  6EDF               	movwf	indf2,c
   960                           
   961                           ;core.c: 102: task1->reg[11]=0x00;
   962  000434  EE20 F012          	lfsr	2,18
   963  000438  5014               	movf	TASK_Init@task1,w,c
   964  00043A  26D9               	addwf	fsr2l,f,c
   965  00043C  5015               	movf	TASK_Init@task1+1,w,c
   966  00043E  22DA               	addwfc	fsr2h,f,c
   967  000440  0E00               	movlw	0
   968  000442  6EDF               	movwf	indf2,c
   969                           
   970                           ;core.c: 103: for(unsigned char i=0;i<129;i++)
   971  000444  0E00               	movlw	0
   972  000446  6E16               	movwf	TASK_Init@i,c
   973  000448  D00F               	goto	L3
   974  00044A                     l947:
   975                           
   976                           ;core.c: 104: {
   977                           ;core.c: 105: task1->SSRAM[i]=0x00;
   978  00044A  5016               	movf	TASK_Init@i,w,c
   979  00044C  0D01               	mullw	1
   980  00044E  0E13               	movlw	19
   981  000450  26F3               	addwf	prodl,f,c
   982  000452  0E00               	movlw	0
   983  000454  22F4               	addwfc	prodh,f,c
   984  000456  50F3               	movf	prodl,w,c
   985  000458  2414               	addwf	TASK_Init@task1,w,c
   986  00045A  6ED9               	movwf	fsr2l,c
   987  00045C  50F4               	movf	prodh,w,c
   988  00045E  2015               	addwfc	TASK_Init@task1+1,w,c
   989  000460  6EDA               	movwf	fsr2h,c
   990  000462  0E00               	movlw	0
   991  000464  6EDF               	movwf	indf2,c
   992  000466  2A16               	incf	TASK_Init@i,f,c
   993  000468                     L3:
   994  000468  0E80               	movlw	128
   995  00046A  6416               	cpfsgt	TASK_Init@i,c
   996  00046C  D7EE               	goto	l947
   997                           
   998                           ;core.c: 106: }
   999                           ;core.c: 107: Task_Empty();
  1000  00046E  ECDE  F002         	call	_Task_Empty	;wreg free
  1001  000472  0012               	return	
  1002  000474                     __end_of_TASK_Init:
  1003                           	opt stack 0
  1004                           tosu	equ	0xFFF
  1005                           tosh	equ	0xFFE
  1006                           tosl	equ	0xFFD
  1007                           pclath	equ	0xFFA
  1008                           tblptru	equ	0xFF8
  1009                           prodh	equ	0xFF4
  1010                           prodl	equ	0xFF3
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           postdec0	equ	0xFED
  1014                           fsr0h	equ	0xFEA
  1015                           fsr0l	equ	0xFE9
  1016                           wreg	equ	0xFE8
  1017                           postinc1	equ	0xFE6
  1018                           postdec1	equ	0xFE5
  1019                           fsr1h	equ	0xFE2
  1020                           fsr1l	equ	0xFE1
  1021                           indf2	equ	0xFDF
  1022                           postinc2	equ	0xFDE
  1023                           postdec2	equ	0xFDD
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8
  1027                           
  1028 ;; *************** function _Task_Empty *****************
  1029 ;; Defined at:
  1030 ;;		line 11 in file "core.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;		None               void
  1037 ;; Registers used:
  1038 ;;		wreg, status,2
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1044 ;;      Params:         0       0       0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    2
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;;		_TASK_Init
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text5
  1060  0005BC                     __ptext5:
  1061                           	opt stack 0
  1062  0005BC                     _Task_Empty:
  1063                           	opt stack 28
  1064                           
  1065                           ;core.c: 13: TRISA=0x00;
  1066                           
  1067                           ;incstack = 0
  1068  0005BC  0E00               	movlw	0
  1069  0005BE  6E92               	movwf	3986,c	;volatile
  1070                           
  1071                           ;core.c: 14: TRISB=0x00;
  1072  0005C0  0E00               	movlw	0
  1073  0005C2  6E93               	movwf	3987,c	;volatile
  1074                           
  1075                           ;core.c: 15: TRISC=0x00;
  1076  0005C4  0E00               	movlw	0
  1077  0005C6  6E94               	movwf	3988,c	;volatile
  1078                           
  1079                           ;core.c: 16: TRISD=0x00;
  1080  0005C8  0E00               	movlw	0
  1081  0005CA  6E95               	movwf	3989,c	;volatile
  1082                           
  1083                           ;core.c: 18: PORTA=0x00;
  1084  0005CC  0E00               	movlw	0
  1085  0005CE  6E80               	movwf	3968,c	;volatile
  1086                           
  1087                           ;core.c: 19: PORTB=0x00;
  1088  0005D0  0E00               	movlw	0
  1089  0005D2  6E81               	movwf	3969,c	;volatile
  1090                           
  1091                           ;core.c: 20: PORTC=0x00;
  1092  0005D4  0E00               	movlw	0
  1093  0005D6  6E82               	movwf	3970,c	;volatile
  1094                           
  1095                           ;core.c: 21: PORTD=0x00;
  1096  0005D8  0E00               	movlw	0
  1097  0005DA  6E83               	movwf	3971,c	;volatile
  1098                           
  1099                           ;core.c: 23: LATA=0x00;
  1100  0005DC  0E00               	movlw	0
  1101  0005DE  6E89               	movwf	3977,c	;volatile
  1102                           
  1103                           ;core.c: 24: LATB=0x00;
  1104  0005E0  0E00               	movlw	0
  1105  0005E2  6E8A               	movwf	3978,c	;volatile
  1106                           
  1107                           ;core.c: 25: LATC=0x00;
  1108  0005E4  0E00               	movlw	0
  1109  0005E6  6E8B               	movwf	3979,c	;volatile
  1110                           
  1111                           ;core.c: 26: LATD=0x00;
  1112  0005E8  0E00               	movlw	0
  1113  0005EA  6E8C               	movwf	3980,c	;volatile
  1114  0005EC  0012               	return	
  1115  0005EE                     __end_of_Task_Empty:
  1116                           	opt stack 0
  1117                           tosu	equ	0xFFF
  1118                           tosh	equ	0xFFE
  1119                           tosl	equ	0xFFD
  1120                           pclath	equ	0xFFA
  1121                           tblptru	equ	0xFF8
  1122                           prodh	equ	0xFF4
  1123                           prodl	equ	0xFF3
  1124                           intcon	equ	0xFF2
  1125                           postinc0	equ	0xFEE
  1126                           postdec0	equ	0xFED
  1127                           fsr0h	equ	0xFEA
  1128                           fsr0l	equ	0xFE9
  1129                           wreg	equ	0xFE8
  1130                           postinc1	equ	0xFE6
  1131                           postdec1	equ	0xFE5
  1132                           fsr1h	equ	0xFE2
  1133                           fsr1l	equ	0xFE1
  1134                           indf2	equ	0xFDF
  1135                           postinc2	equ	0xFDE
  1136                           postdec2	equ	0xFDD
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _HighInt *****************
  1142 ;; Defined at:
  1143 ;;		line 71 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;		None               void
  1150 ;; Registers used:
  1151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0
  1159 ;;      Temps:         14       0       0       0       0       0       0
  1160 ;;      Totals:        14       0       0       0       0       0       0
  1161 ;;Total ram usage:       14 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    1
  1164 ;; This function calls:
  1165 ;;		_TASK_Restore
  1166 ;;		_Task_Save
  1167 ;;		i2_Task_Empty
  1168 ;; This function is called by:
  1169 ;;		Interrupt level 2
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	intcode
  1174  000008                     __pintcode:
  1175                           	opt stack 0
  1176  000008                     _HighInt:
  1177                           	opt stack 27
  1178                           
  1179                           ;incstack = 0
  1180  000008  CFFA F006          	movff	pclath,??_HighInt
  1181  00000C  CFFB F007          	movff	pclatu,??_HighInt+1
  1182  000010  CFE9 F008          	movff	fsr0l,??_HighInt+2
  1183  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
  1184                           tosu	equ	0xFFF
  1185                           tosh	equ	0xFFE
  1186                           tosl	equ	0xFFD
  1187                           pclatu	equ	0xFFB
  1188                           pclath	equ	0xFFA
  1189                           tblptru	equ	0xFF8
  1190                           prodh	equ	0xFF4
  1191                           prodl	equ	0xFF3
  1192                           intcon	equ	0xFF2
  1193                           postinc0	equ	0xFEE
  1194                           postdec0	equ	0xFED
  1195                           fsr0h	equ	0xFEA
  1196                           fsr0l	equ	0xFE9
  1197                           wreg	equ	0xFE8
  1198                           postinc1	equ	0xFE6
  1199                           postdec1	equ	0xFE5
  1200                           fsr1h	equ	0xFE2
  1201                           fsr1l	equ	0xFE1
  1202                           indf2	equ	0xFDF
  1203                           postinc2	equ	0xFDE
  1204                           postdec2	equ	0xFDD
  1205                           fsr2h	equ	0xFDA
  1206                           fsr2l	equ	0xFD9
  1207                           status	equ	0xFD8
  1208                           
  1209                           	psect	intcode_body
  1210  00001C                     __pintcode_body:
  1211                           	opt stack 27
  1212  00001C                     int_func:
  1213                           	opt stack 27
  1214  00001C  0006               	pop		; remove dummy address from shadow register refresh
  1215  00001E  CFEA F009          	movff	fsr0h,??_HighInt+3
  1216  000022  CFE1 F00A          	movff	fsr1l,??_HighInt+4
  1217  000026  CFE2 F00B          	movff	fsr1h,??_HighInt+5
  1218  00002A  CFD9 F00C          	movff	fsr2l,??_HighInt+6
  1219  00002E  CFDA F00D          	movff	fsr2h,??_HighInt+7
  1220  000032  CFF3 F00E          	movff	prodl,??_HighInt+8
  1221  000036  CFF4 F00F          	movff	prodh,??_HighInt+9
  1222  00003A  CFF6 F010          	movff	tblptrl,??_HighInt+10
  1223  00003E  CFF7 F011          	movff	tblptrh,??_HighInt+11
  1224  000042  CFF8 F012          	movff	tblptru,??_HighInt+12
  1225  000046  CFF5 F013          	movff	tablat,??_HighInt+13
  1226                           
  1227                           ;main.c: 73: if(TMR1IE && TMR1IF)
  1228  00004A  B09D               	btfsc	3997,0,c	;volatile
  1229  00004C  A09E               	btfss	3998,0,c	;volatile
  1230  00004E  D083               	goto	i2l68
  1231                           
  1232                           ;main.c: 74: {
  1233                           ;main.c: 75: TMR1IE=0;
  1234  000050  909D               	bcf	3997,0,c	;volatile
  1235                           
  1236                           ;main.c: 76: TMR1IF=0;
  1237  000052  909E               	bcf	3998,0,c	;volatile
  1238                           
  1239                           ;main.c: 77: Task_Save(&tt[index]);
  1240  000054  501A               	movf	_index,w,c
  1241  000056  0D93               	mullw	147
  1242  000058  0E93               	movlw	low _tt
  1243  00005A  24F3               	addwf	prodl,w,c
  1244  00005C  6E01               	movwf	Task_Save@task1,c
  1245  00005E  0E04               	movlw	high _tt
  1246  000060  20F4               	addwfc	prodh,w,c
  1247  000062  6E02               	movwf	Task_Save@task1+1,c
  1248  000064  ECC8  F000         	call	_Task_Save	;wreg free
  1249                           
  1250                           ;main.c: 79: Task_Empty();
  1251  000068  ECF7  F002         	call	i2_Task_Empty	;wreg free
  1252                           
  1253                           ;main.c: 81: tt[index].S_TOSL=TOSL;
  1254  00006C  501A               	movf	_index,w,c
  1255  00006E  0D93               	mullw	147
  1256  000070  0E04               	movlw	4
  1257  000072  26F3               	addwf	prodl,f,c
  1258  000074  0E00               	movlw	0
  1259  000076  22F4               	addwfc	prodh,f,c
  1260  000078  0E93               	movlw	low _tt
  1261  00007A  24F3               	addwf	prodl,w,c
  1262  00007C  6ED9               	movwf	fsr2l,c
  1263  00007E  0E04               	movlw	high _tt
  1264  000080  20F4               	addwfc	prodh,w,c
  1265  000082  6EDA               	movwf	fsr2h,c
  1266  000084  CFFD FFDF          	movff	tosl,indf2	;volatile
  1267                           
  1268                           ;main.c: 82: tt[index].S_TOSH=TOSH;
  1269  000088  501A               	movf	_index,w,c
  1270  00008A  0D93               	mullw	147
  1271  00008C  0E05               	movlw	5
  1272  00008E  26F3               	addwf	prodl,f,c
  1273  000090  0E00               	movlw	0
  1274  000092  22F4               	addwfc	prodh,f,c
  1275  000094  0E93               	movlw	low _tt
  1276  000096  24F3               	addwf	prodl,w,c
  1277  000098  6ED9               	movwf	fsr2l,c
  1278  00009A  0E04               	movlw	high _tt
  1279  00009C  20F4               	addwfc	prodh,w,c
  1280  00009E  6EDA               	movwf	fsr2h,c
  1281  0000A0  CFFE FFDF          	movff	tosh,indf2	;volatile
  1282                           
  1283                           ;main.c: 83: tt[index].S_TOSU=TOSU;
  1284  0000A4  501A               	movf	_index,w,c
  1285  0000A6  0D93               	mullw	147
  1286  0000A8  0E06               	movlw	6
  1287  0000AA  26F3               	addwf	prodl,f,c
  1288  0000AC  0E00               	movlw	0
  1289  0000AE  22F4               	addwfc	prodh,f,c
  1290  0000B0  0E93               	movlw	low _tt
  1291  0000B2  24F3               	addwf	prodl,w,c
  1292  0000B4  6ED9               	movwf	fsr2l,c
  1293  0000B6  0E04               	movlw	high _tt
  1294  0000B8  20F4               	addwfc	prodh,w,c
  1295  0000BA  6EDA               	movwf	fsr2h,c
  1296  0000BC  CFFF FFDF          	movff	tosu,indf2	;volatile
  1297                           
  1298                           ;main.c: 84: index++;
  1299  0000C0  2A1A               	incf	_index,f,c
  1300                           
  1301                           ;main.c: 85: index=index%2;
  1302  0000C2  501A               	movf	_index,w,c
  1303  0000C4  0B01               	andlw	1
  1304  0000C6  6E1A               	movwf	_index,c
  1305                           
  1306                           ;main.c: 86: TASK_Restore(&tt[index]);
  1307  0000C8  501A               	movf	_index,w,c
  1308  0000CA  0D93               	mullw	147
  1309  0000CC  0E93               	movlw	low _tt
  1310  0000CE  24F3               	addwf	prodl,w,c
  1311  0000D0  6E01               	movwf	TASK_Restore@task1,c
  1312  0000D2  0E04               	movlw	high _tt
  1313  0000D4  20F4               	addwfc	prodh,w,c
  1314  0000D6  6E02               	movwf	TASK_Restore@task1+1,c
  1315  0000D8  EC45  F001         	call	_TASK_Restore	;wreg free
  1316                           
  1317                           ;main.c: 87: TOSH=tt[index].S_TOSH;
  1318  0000DC  501A               	movf	_index,w,c
  1319  0000DE  0D93               	mullw	147
  1320  0000E0  0E05               	movlw	5
  1321  0000E2  26F3               	addwf	prodl,f,c
  1322  0000E4  0E00               	movlw	0
  1323  0000E6  22F4               	addwfc	prodh,f,c
  1324  0000E8  0E93               	movlw	low _tt
  1325  0000EA  24F3               	addwf	prodl,w,c
  1326  0000EC  6ED9               	movwf	fsr2l,c
  1327  0000EE  0E04               	movlw	high _tt
  1328  0000F0  20F4               	addwfc	prodh,w,c
  1329  0000F2  6EDA               	movwf	fsr2h,c
  1330  0000F4  50DF               	movf	indf2,w,c
  1331  0000F6  6EFE               	movwf	tosh,c	;volatile
  1332                           
  1333                           ;main.c: 88: TOSL=tt[index].S_TOSL;
  1334  0000F8  501A               	movf	_index,w,c
  1335  0000FA  0D93               	mullw	147
  1336  0000FC  0E04               	movlw	4
  1337  0000FE  26F3               	addwf	prodl,f,c
  1338  000100  0E00               	movlw	0
  1339  000102  22F4               	addwfc	prodh,f,c
  1340  000104  0E93               	movlw	low _tt
  1341  000106  24F3               	addwf	prodl,w,c
  1342  000108  6ED9               	movwf	fsr2l,c
  1343  00010A  0E04               	movlw	high _tt
  1344  00010C  20F4               	addwfc	prodh,w,c
  1345  00010E  6EDA               	movwf	fsr2h,c
  1346  000110  50DF               	movf	indf2,w,c
  1347  000112  6EFD               	movwf	tosl,c	;volatile
  1348                           
  1349                           ;main.c: 89: TOSU=tt[index].S_TOSU;
  1350  000114  501A               	movf	_index,w,c
  1351  000116  0D93               	mullw	147
  1352  000118  0E06               	movlw	6
  1353  00011A  26F3               	addwf	prodl,f,c
  1354  00011C  0E00               	movlw	0
  1355  00011E  22F4               	addwfc	prodh,f,c
  1356  000120  0E93               	movlw	low _tt
  1357  000122  24F3               	addwf	prodl,w,c
  1358  000124  6ED9               	movwf	fsr2l,c
  1359  000126  0E04               	movlw	high _tt
  1360  000128  20F4               	addwfc	prodh,w,c
  1361  00012A  6EDA               	movwf	fsr2h,c
  1362  00012C  50DF               	movf	indf2,w,c
  1363  00012E  6EFF               	movwf	tosu,c	;volatile
  1364                           
  1365                           ;main.c: 90: tt[index].count++;
  1366  000130  501A               	movf	_index,w,c
  1367  000132  0D93               	mullw	147
  1368  000134  0E02               	movlw	2
  1369  000136  26F3               	addwf	prodl,f,c
  1370  000138  0E00               	movlw	0
  1371  00013A  22F4               	addwfc	prodh,f,c
  1372  00013C  0E93               	movlw	low _tt
  1373  00013E  24F3               	addwf	prodl,w,c
  1374  000140  6ED9               	movwf	fsr2l,c
  1375  000142  0E04               	movlw	high _tt
  1376  000144  20F4               	addwfc	prodh,w,c
  1377  000146  6EDA               	movwf	fsr2h,c
  1378  000148  2ADE               	incf	postinc2,f,c
  1379  00014A  0E00               	movlw	0
  1380  00014C  22DD               	addwfc	postdec2,f,c
  1381                           
  1382                           ;main.c: 92: TMR1H=(65536-5)/256;
  1383  00014E  68CF               	setf	4047,c	;volatile
  1384                           
  1385                           ;main.c: 93: TMR1L=(65536-5)%256;
  1386  000150  0EFB               	movlw	251
  1387  000152  6ECE               	movwf	4046,c	;volatile
  1388                           
  1389                           ;main.c: 94: TMR1IE=1;
  1390  000154  809D               	bsf	3997,0,c	;volatile
  1391  000156                     i2l68:
  1392  000156  C013  FFF5         	movff	??_HighInt+13,tablat
  1393  00015A  C012  FFF8         	movff	??_HighInt+12,tblptru
  1394  00015E  C011  FFF7         	movff	??_HighInt+11,tblptrh
  1395  000162  C010  FFF6         	movff	??_HighInt+10,tblptrl
  1396  000166  C00F  FFF4         	movff	??_HighInt+9,prodh
  1397  00016A  C00E  FFF3         	movff	??_HighInt+8,prodl
  1398  00016E  C00D  FFDA         	movff	??_HighInt+7,fsr2h
  1399  000172  C00C  FFD9         	movff	??_HighInt+6,fsr2l
  1400  000176  C00B  FFE2         	movff	??_HighInt+5,fsr1h
  1401  00017A  C00A  FFE1         	movff	??_HighInt+4,fsr1l
  1402  00017E  C009  FFEA         	movff	??_HighInt+3,fsr0h
  1403  000182  C008  FFE9         	movff	??_HighInt+2,fsr0l
  1404  000186  C007  FFFB         	movff	??_HighInt+1,pclatu
  1405  00018A  C006  FFFA         	movff	??_HighInt,pclath
  1406  00018E  0011               	retfie		f
  1407  000190                     __end_of_HighInt:
  1408                           	opt stack 0
  1409                           tosu	equ	0xFFF
  1410                           tosh	equ	0xFFE
  1411                           tosl	equ	0xFFD
  1412                           pclatu	equ	0xFFB
  1413                           pclath	equ	0xFFA
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           prodh	equ	0xFF4
  1419                           prodl	equ	0xFF3
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           postdec0	equ	0xFED
  1423                           fsr0h	equ	0xFEA
  1424                           fsr0l	equ	0xFE9
  1425                           wreg	equ	0xFE8
  1426                           postinc1	equ	0xFE6
  1427                           postdec1	equ	0xFE5
  1428                           fsr1h	equ	0xFE2
  1429                           fsr1l	equ	0xFE1
  1430                           indf2	equ	0xFDF
  1431                           postinc2	equ	0xFDE
  1432                           postdec2	equ	0xFDD
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function i2_Task_Empty *****************
  1438 ;; Defined at:
  1439 ;;		line 11 in file "core.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, status,2
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         0       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_HighInt
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text7
  1467  0005EE                     __ptext7:
  1468                           	opt stack 0
  1469  0005EE                     i2_Task_Empty:
  1470                           	opt stack 27
  1471                           
  1472                           ;core.c: 13: TRISA=0x00;
  1473                           
  1474                           ;incstack = 0
  1475  0005EE  0E00               	movlw	0
  1476  0005F0  6E92               	movwf	3986,c	;volatile
  1477                           
  1478                           ;core.c: 14: TRISB=0x00;
  1479  0005F2  0E00               	movlw	0
  1480  0005F4  6E93               	movwf	3987,c	;volatile
  1481                           
  1482                           ;core.c: 15: TRISC=0x00;
  1483  0005F6  0E00               	movlw	0
  1484  0005F8  6E94               	movwf	3988,c	;volatile
  1485                           
  1486                           ;core.c: 16: TRISD=0x00;
  1487  0005FA  0E00               	movlw	0
  1488  0005FC  6E95               	movwf	3989,c	;volatile
  1489                           
  1490                           ;core.c: 18: PORTA=0x00;
  1491  0005FE  0E00               	movlw	0
  1492  000600  6E80               	movwf	3968,c	;volatile
  1493                           
  1494                           ;core.c: 19: PORTB=0x00;
  1495  000602  0E00               	movlw	0
  1496  000604  6E81               	movwf	3969,c	;volatile
  1497                           
  1498                           ;core.c: 20: PORTC=0x00;
  1499  000606  0E00               	movlw	0
  1500  000608  6E82               	movwf	3970,c	;volatile
  1501                           
  1502                           ;core.c: 21: PORTD=0x00;
  1503  00060A  0E00               	movlw	0
  1504  00060C  6E83               	movwf	3971,c	;volatile
  1505                           
  1506                           ;core.c: 23: LATA=0x00;
  1507  00060E  0E00               	movlw	0
  1508  000610  6E89               	movwf	3977,c	;volatile
  1509                           
  1510                           ;core.c: 24: LATB=0x00;
  1511  000612  0E00               	movlw	0
  1512  000614  6E8A               	movwf	3978,c	;volatile
  1513                           
  1514                           ;core.c: 25: LATC=0x00;
  1515  000616  0E00               	movlw	0
  1516  000618  6E8B               	movwf	3979,c	;volatile
  1517                           
  1518                           ;core.c: 26: LATD=0x00;
  1519  00061A  0E00               	movlw	0
  1520  00061C  6E8C               	movwf	3980,c	;volatile
  1521  00061E  0012               	return	
  1522  000620                     __end_ofi2_Task_Empty:
  1523                           	opt stack 0
  1524                           tosu	equ	0xFFF
  1525                           tosh	equ	0xFFE
  1526                           tosl	equ	0xFFD
  1527                           pclatu	equ	0xFFB
  1528                           pclath	equ	0xFFA
  1529                           tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           prodh	equ	0xFF4
  1534                           prodl	equ	0xFF3
  1535                           intcon	equ	0xFF2
  1536                           postinc0	equ	0xFEE
  1537                           postdec0	equ	0xFED
  1538                           fsr0h	equ	0xFEA
  1539                           fsr0l	equ	0xFE9
  1540                           wreg	equ	0xFE8
  1541                           postinc1	equ	0xFE6
  1542                           postdec1	equ	0xFE5
  1543                           fsr1h	equ	0xFE2
  1544                           fsr1l	equ	0xFE1
  1545                           indf2	equ	0xFDF
  1546                           postinc2	equ	0xFDE
  1547                           postdec2	equ	0xFDD
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _Task_Save *****************
  1553 ;; Defined at:
  1554 ;;		line 29 in file "core.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  task1           2    0[COMRAM] PTR struct _task
  1557 ;;		 -> tt(294), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  j               1    4[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;		None               void
  1562 ;; Registers used:
  1563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         2       0       0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0
  1571 ;;      Temps:          2       0       0       0       0       0       0
  1572 ;;      Totals:         5       0       0       0       0       0       0
  1573 ;;Total ram usage:        5 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_HighInt
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text8
  1583  000190                     __ptext8:
  1584                           	opt stack 0
  1585  000190                     _Task_Save:
  1586                           	opt stack 27
  1587                           
  1588                           ;core.c: 35: for(unsigned char j=0x00;j<0x7F;j++)
  1589                           
  1590                           ;incstack = 0
  1591  000190  0E00               	movlw	0
  1592  000192  6E05               	movwf	Task_Save@j,c
  1593  000194  D016               	goto	L4
  1594  000196                     i2l785:
  1595                           
  1596                           ;core.c: 36: {
  1597                           ;core.c: 37: task1->SSRAM[j]=*(unsigned char*)(0x00+j);
  1598  000196  5005               	movf	Task_Save@j,w,c
  1599  000198  6E03               	movwf	??_Task_Save& (0+255),c
  1600  00019A  6A04               	clrf	(??_Task_Save+1)& (0+255),c
  1601  00019C  C003  FFD9         	movff	??_Task_Save,fsr2l
  1602  0001A0  C004  FFDA         	movff	??_Task_Save+1,fsr2h
  1603  0001A4  5005               	movf	Task_Save@j,w,c
  1604  0001A6  0D01               	mullw	1
  1605  0001A8  0E13               	movlw	19
  1606  0001AA  26F3               	addwf	prodl,f,c
  1607  0001AC  0E00               	movlw	0
  1608  0001AE  22F4               	addwfc	prodh,f,c
  1609  0001B0  50F3               	movf	prodl,w,c
  1610  0001B2  2401               	addwf	Task_Save@task1,w,c
  1611  0001B4  6EE1               	movwf	fsr1l,c
  1612  0001B6  50F4               	movf	prodh,w,c
  1613  0001B8  2002               	addwfc	Task_Save@task1+1,w,c
  1614  0001BA  6EE2               	movwf	fsr1h,c
  1615  0001BC  CFDF FFE7          	movff	indf2,indf1
  1616  0001C0  2A05               	incf	Task_Save@j,f,c
  1617  0001C2                     L4:
  1618  0001C2  0E7E               	movlw	126
  1619  0001C4  6405               	cpfsgt	Task_Save@j,c
  1620  0001C6  D7E7               	goto	i2l785
  1621                           
  1622                           ;core.c: 38: }
  1623                           ;core.c: 41: task1->reg[0]=TRISA;
  1624  0001C8  EE20 F007          	lfsr	2,7
  1625  0001CC  5001               	movf	Task_Save@task1,w,c
  1626  0001CE  26D9               	addwf	fsr2l,f,c
  1627  0001D0  5002               	movf	Task_Save@task1+1,w,c
  1628  0001D2  22DA               	addwfc	fsr2h,f,c
  1629  0001D4  CF92 FFDF          	movff	3986,indf2	;volatile
  1630                           
  1631                           ;core.c: 42: task1->reg[1]=TRISB;
  1632  0001D8  EE20 F008          	lfsr	2,8
  1633  0001DC  5001               	movf	Task_Save@task1,w,c
  1634  0001DE  26D9               	addwf	fsr2l,f,c
  1635  0001E0  5002               	movf	Task_Save@task1+1,w,c
  1636  0001E2  22DA               	addwfc	fsr2h,f,c
  1637  0001E4  CF93 FFDF          	movff	3987,indf2	;volatile
  1638                           
  1639                           ;core.c: 43: task1->reg[2]=TRISC;
  1640  0001E8  EE20 F009          	lfsr	2,9
  1641  0001EC  5001               	movf	Task_Save@task1,w,c
  1642  0001EE  26D9               	addwf	fsr2l,f,c
  1643  0001F0  5002               	movf	Task_Save@task1+1,w,c
  1644  0001F2  22DA               	addwfc	fsr2h,f,c
  1645  0001F4  CF94 FFDF          	movff	3988,indf2	;volatile
  1646                           
  1647                           ;core.c: 44: task1->reg[3]=TRISD;
  1648  0001F8  EE20 F00A          	lfsr	2,10
  1649  0001FC  5001               	movf	Task_Save@task1,w,c
  1650  0001FE  26D9               	addwf	fsr2l,f,c
  1651  000200  5002               	movf	Task_Save@task1+1,w,c
  1652  000202  22DA               	addwfc	fsr2h,f,c
  1653  000204  CF95 FFDF          	movff	3989,indf2	;volatile
  1654                           
  1655                           ;core.c: 46: task1->reg[4]=PORTA;
  1656  000208  EE20 F00B          	lfsr	2,11
  1657  00020C  5001               	movf	Task_Save@task1,w,c
  1658  00020E  26D9               	addwf	fsr2l,f,c
  1659  000210  5002               	movf	Task_Save@task1+1,w,c
  1660  000212  22DA               	addwfc	fsr2h,f,c
  1661  000214  CF80 FFDF          	movff	3968,indf2	;volatile
  1662                           
  1663                           ;core.c: 47: task1->reg[5]=PORTB;
  1664  000218  EE20 F00C          	lfsr	2,12
  1665  00021C  5001               	movf	Task_Save@task1,w,c
  1666  00021E  26D9               	addwf	fsr2l,f,c
  1667  000220  5002               	movf	Task_Save@task1+1,w,c
  1668  000222  22DA               	addwfc	fsr2h,f,c
  1669  000224  CF81 FFDF          	movff	3969,indf2	;volatile
  1670                           
  1671                           ;core.c: 48: task1->reg[6]=PORTC;
  1672  000228  EE20 F00D          	lfsr	2,13
  1673  00022C  5001               	movf	Task_Save@task1,w,c
  1674  00022E  26D9               	addwf	fsr2l,f,c
  1675  000230  5002               	movf	Task_Save@task1+1,w,c
  1676  000232  22DA               	addwfc	fsr2h,f,c
  1677  000234  CF82 FFDF          	movff	3970,indf2	;volatile
  1678                           
  1679                           ;core.c: 49: task1->reg[7]=PORTD;
  1680  000238  EE20 F00E          	lfsr	2,14
  1681  00023C  5001               	movf	Task_Save@task1,w,c
  1682  00023E  26D9               	addwf	fsr2l,f,c
  1683  000240  5002               	movf	Task_Save@task1+1,w,c
  1684  000242  22DA               	addwfc	fsr2h,f,c
  1685  000244  CF83 FFDF          	movff	3971,indf2	;volatile
  1686                           
  1687                           ;core.c: 51: task1->reg[8]=LATA;
  1688  000248  EE20 F00F          	lfsr	2,15
  1689  00024C  5001               	movf	Task_Save@task1,w,c
  1690  00024E  26D9               	addwf	fsr2l,f,c
  1691  000250  5002               	movf	Task_Save@task1+1,w,c
  1692  000252  22DA               	addwfc	fsr2h,f,c
  1693  000254  CF89 FFDF          	movff	3977,indf2	;volatile
  1694                           
  1695                           ;core.c: 52: task1->reg[9]=LATB;
  1696  000258  EE20 F010          	lfsr	2,16
  1697  00025C  5001               	movf	Task_Save@task1,w,c
  1698  00025E  26D9               	addwf	fsr2l,f,c
  1699  000260  5002               	movf	Task_Save@task1+1,w,c
  1700  000262  22DA               	addwfc	fsr2h,f,c
  1701  000264  CF8A FFDF          	movff	3978,indf2	;volatile
  1702                           
  1703                           ;core.c: 53: task1->reg[10]=LATC;
  1704  000268  EE20 F011          	lfsr	2,17
  1705  00026C  5001               	movf	Task_Save@task1,w,c
  1706  00026E  26D9               	addwf	fsr2l,f,c
  1707  000270  5002               	movf	Task_Save@task1+1,w,c
  1708  000272  22DA               	addwfc	fsr2h,f,c
  1709  000274  CF8B FFDF          	movff	3979,indf2	;volatile
  1710                           
  1711                           ;core.c: 54: task1->reg[11]=LATD;
  1712  000278  EE20 F012          	lfsr	2,18
  1713  00027C  5001               	movf	Task_Save@task1,w,c
  1714  00027E  26D9               	addwf	fsr2l,f,c
  1715  000280  5002               	movf	Task_Save@task1+1,w,c
  1716  000282  22DA               	addwfc	fsr2h,f,c
  1717  000284  CF8C FFDF          	movff	3980,indf2	;volatile
  1718  000288  0012               	return	
  1719  00028A                     __end_of_Task_Save:
  1720                           	opt stack 0
  1721                           tosu	equ	0xFFF
  1722                           tosh	equ	0xFFE
  1723                           tosl	equ	0xFFD
  1724                           pclatu	equ	0xFFB
  1725                           pclath	equ	0xFFA
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           prodh	equ	0xFF4
  1731                           prodl	equ	0xFF3
  1732                           intcon	equ	0xFF2
  1733                           postinc0	equ	0xFEE
  1734                           postdec0	equ	0xFED
  1735                           fsr0h	equ	0xFEA
  1736                           fsr0l	equ	0xFE9
  1737                           wreg	equ	0xFE8
  1738                           indf1	equ	0xFE7
  1739                           postinc1	equ	0xFE6
  1740                           postdec1	equ	0xFE5
  1741                           fsr1h	equ	0xFE2
  1742                           fsr1l	equ	0xFE1
  1743                           indf2	equ	0xFDF
  1744                           postinc2	equ	0xFDE
  1745                           postdec2	equ	0xFDD
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function _TASK_Restore *****************
  1751 ;; Defined at:
  1752 ;;		line 56 in file "core.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  task1           2    0[COMRAM] PTR struct _task
  1755 ;;		 -> tt(294), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  j               1    4[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1767 ;;      Params:         2       0       0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0
  1769 ;;      Temps:          2       0       0       0       0       0       0
  1770 ;;      Totals:         5       0       0       0       0       0       0
  1771 ;;Total ram usage:        5 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_HighInt
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text9
  1781  00028A                     __ptext9:
  1782                           	opt stack 0
  1783  00028A                     _TASK_Restore:
  1784                           	opt stack 27
  1785                           
  1786                           ;core.c: 59: for(unsigned char j=0x00;j<0x7F;j++)
  1787                           
  1788                           ;incstack = 0
  1789  00028A  0E00               	movlw	0
  1790  00028C  6E05               	movwf	TASK_Restore@j,c
  1791  00028E  D016               	goto	L5
  1792  000290                     i2l799:
  1793                           
  1794                           ;core.c: 60: {
  1795                           ;core.c: 61: *(unsigned char*)(0x00+j)=task1->SSRAM[j];
  1796  000290  5005               	movf	TASK_Restore@j,w,c
  1797  000292  0D01               	mullw	1
  1798  000294  0E13               	movlw	19
  1799  000296  26F3               	addwf	prodl,f,c
  1800  000298  0E00               	movlw	0
  1801  00029A  22F4               	addwfc	prodh,f,c
  1802  00029C  50F3               	movf	prodl,w,c
  1803  00029E  2401               	addwf	TASK_Restore@task1,w,c
  1804  0002A0  6ED9               	movwf	fsr2l,c
  1805  0002A2  50F4               	movf	prodh,w,c
  1806  0002A4  2002               	addwfc	TASK_Restore@task1+1,w,c
  1807  0002A6  6EDA               	movwf	fsr2h,c
  1808  0002A8  5005               	movf	TASK_Restore@j,w,c
  1809  0002AA  6E03               	movwf	??_TASK_Restore& (0+255),c
  1810  0002AC  6A04               	clrf	(??_TASK_Restore+1)& (0+255),c
  1811  0002AE  C003  FFE1         	movff	??_TASK_Restore,fsr1l
  1812  0002B2  C004  FFE2         	movff	??_TASK_Restore+1,fsr1h
  1813  0002B6  CFDF FFE7          	movff	indf2,indf1
  1814  0002BA  2A05               	incf	TASK_Restore@j,f,c
  1815  0002BC                     L5:
  1816  0002BC  0E7E               	movlw	126
  1817  0002BE  6405               	cpfsgt	TASK_Restore@j,c
  1818  0002C0  D7E7               	goto	i2l799
  1819                           
  1820                           ;core.c: 62: }
  1821                           ;core.c: 68: TRISA=task1->reg[0];
  1822  0002C2  EE20 F007          	lfsr	2,7
  1823  0002C6  5001               	movf	TASK_Restore@task1,w,c
  1824  0002C8  26D9               	addwf	fsr2l,f,c
  1825  0002CA  5002               	movf	TASK_Restore@task1+1,w,c
  1826  0002CC  22DA               	addwfc	fsr2h,f,c
  1827  0002CE  50DF               	movf	indf2,w,c
  1828  0002D0  6E92               	movwf	3986,c	;volatile
  1829                           
  1830                           ;core.c: 69: TRISB=task1->reg[1];
  1831  0002D2  EE20 F008          	lfsr	2,8
  1832  0002D6  5001               	movf	TASK_Restore@task1,w,c
  1833  0002D8  26D9               	addwf	fsr2l,f,c
  1834  0002DA  5002               	movf	TASK_Restore@task1+1,w,c
  1835  0002DC  22DA               	addwfc	fsr2h,f,c
  1836  0002DE  50DF               	movf	indf2,w,c
  1837  0002E0  6E93               	movwf	3987,c	;volatile
  1838                           
  1839                           ;core.c: 70: TRISC=task1->reg[2];
  1840  0002E2  EE20 F009          	lfsr	2,9
  1841  0002E6  5001               	movf	TASK_Restore@task1,w,c
  1842  0002E8  26D9               	addwf	fsr2l,f,c
  1843  0002EA  5002               	movf	TASK_Restore@task1+1,w,c
  1844  0002EC  22DA               	addwfc	fsr2h,f,c
  1845  0002EE  50DF               	movf	indf2,w,c
  1846  0002F0  6E94               	movwf	3988,c	;volatile
  1847                           
  1848                           ;core.c: 71: TRISD=task1->reg[3];
  1849  0002F2  EE20 F00A          	lfsr	2,10
  1850  0002F6  5001               	movf	TASK_Restore@task1,w,c
  1851  0002F8  26D9               	addwf	fsr2l,f,c
  1852  0002FA  5002               	movf	TASK_Restore@task1+1,w,c
  1853  0002FC  22DA               	addwfc	fsr2h,f,c
  1854  0002FE  50DF               	movf	indf2,w,c
  1855  000300  6E95               	movwf	3989,c	;volatile
  1856                           
  1857                           ;core.c: 73: PORTA=task1->reg[4];
  1858  000302  EE20 F00B          	lfsr	2,11
  1859  000306  5001               	movf	TASK_Restore@task1,w,c
  1860  000308  26D9               	addwf	fsr2l,f,c
  1861  00030A  5002               	movf	TASK_Restore@task1+1,w,c
  1862  00030C  22DA               	addwfc	fsr2h,f,c
  1863  00030E  50DF               	movf	indf2,w,c
  1864  000310  6E80               	movwf	3968,c	;volatile
  1865                           
  1866                           ;core.c: 74: PORTB=task1->reg[5];
  1867  000312  EE20 F00C          	lfsr	2,12
  1868  000316  5001               	movf	TASK_Restore@task1,w,c
  1869  000318  26D9               	addwf	fsr2l,f,c
  1870  00031A  5002               	movf	TASK_Restore@task1+1,w,c
  1871  00031C  22DA               	addwfc	fsr2h,f,c
  1872  00031E  50DF               	movf	indf2,w,c
  1873  000320  6E81               	movwf	3969,c	;volatile
  1874                           
  1875                           ;core.c: 75: PORTC=task1->reg[6];
  1876  000322  EE20 F00D          	lfsr	2,13
  1877  000326  5001               	movf	TASK_Restore@task1,w,c
  1878  000328  26D9               	addwf	fsr2l,f,c
  1879  00032A  5002               	movf	TASK_Restore@task1+1,w,c
  1880  00032C  22DA               	addwfc	fsr2h,f,c
  1881  00032E  50DF               	movf	indf2,w,c
  1882  000330  6E82               	movwf	3970,c	;volatile
  1883                           
  1884                           ;core.c: 76: PORTD=task1->reg[7];
  1885  000332  EE20 F00E          	lfsr	2,14
  1886  000336  5001               	movf	TASK_Restore@task1,w,c
  1887  000338  26D9               	addwf	fsr2l,f,c
  1888  00033A  5002               	movf	TASK_Restore@task1+1,w,c
  1889  00033C  22DA               	addwfc	fsr2h,f,c
  1890  00033E  50DF               	movf	indf2,w,c
  1891  000340  6E83               	movwf	3971,c	;volatile
  1892                           
  1893                           ;core.c: 78: LATA=task1->reg[8];
  1894  000342  EE20 F00F          	lfsr	2,15
  1895  000346  5001               	movf	TASK_Restore@task1,w,c
  1896  000348  26D9               	addwf	fsr2l,f,c
  1897  00034A  5002               	movf	TASK_Restore@task1+1,w,c
  1898  00034C  22DA               	addwfc	fsr2h,f,c
  1899  00034E  50DF               	movf	indf2,w,c
  1900  000350  6E89               	movwf	3977,c	;volatile
  1901                           
  1902                           ;core.c: 79: LATB=task1->reg[9];
  1903  000352  EE20 F010          	lfsr	2,16
  1904  000356  5001               	movf	TASK_Restore@task1,w,c
  1905  000358  26D9               	addwf	fsr2l,f,c
  1906  00035A  5002               	movf	TASK_Restore@task1+1,w,c
  1907  00035C  22DA               	addwfc	fsr2h,f,c
  1908  00035E  50DF               	movf	indf2,w,c
  1909  000360  6E8A               	movwf	3978,c	;volatile
  1910                           
  1911                           ;core.c: 80: LATC=task1->reg[10];
  1912  000362  EE20 F011          	lfsr	2,17
  1913  000366  5001               	movf	TASK_Restore@task1,w,c
  1914  000368  26D9               	addwf	fsr2l,f,c
  1915  00036A  5002               	movf	TASK_Restore@task1+1,w,c
  1916  00036C  22DA               	addwfc	fsr2h,f,c
  1917  00036E  50DF               	movf	indf2,w,c
  1918  000370  6E8B               	movwf	3979,c	;volatile
  1919                           
  1920                           ;core.c: 81: LATD=task1->reg[11];
  1921  000372  EE20 F012          	lfsr	2,18
  1922  000376  5001               	movf	TASK_Restore@task1,w,c
  1923  000378  26D9               	addwf	fsr2l,f,c
  1924  00037A  5002               	movf	TASK_Restore@task1+1,w,c
  1925  00037C  22DA               	addwfc	fsr2h,f,c
  1926  00037E  50DF               	movf	indf2,w,c
  1927  000380  6E8C               	movwf	3980,c	;volatile
  1928  000382  0012               	return	
  1929  000384                     __end_of_TASK_Restore:
  1930                           	opt stack 0
  1931  0000                     tosu	equ	0xFFF
  1932                           tosh	equ	0xFFE
  1933                           tosl	equ	0xFFD
  1934                           pclatu	equ	0xFFB
  1935                           pclath	equ	0xFFA
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           intcon	equ	0xFF2
  1943                           postinc0	equ	0xFEE
  1944                           postdec0	equ	0xFED
  1945                           fsr0h	equ	0xFEA
  1946                           fsr0l	equ	0xFE9
  1947                           wreg	equ	0xFE8
  1948                           indf1	equ	0xFE7
  1949                           postinc1	equ	0xFE6
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           postinc2	equ	0xFDE
  1955                           postdec2	equ	0xFDD
  1956                           fsr2h	equ	0xFDA
  1957                           fsr2l	equ	0xFD9
  1958                           status	equ	0xFD8
  1959                           tosu	equ	0xFFF
  1960                           tosh	equ	0xFFE
  1961                           tosl	equ	0xFFD
  1962                           pclatu	equ	0xFFB
  1963                           pclath	equ	0xFFA
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           prodh	equ	0xFF4
  1969                           prodl	equ	0xFF3
  1970                           intcon	equ	0xFF2
  1971                           postinc0	equ	0xFEE
  1972                           postdec0	equ	0xFED
  1973                           fsr0h	equ	0xFEA
  1974                           fsr0l	equ	0xFE9
  1975                           wreg	equ	0xFE8
  1976                           indf1	equ	0xFE7
  1977                           postinc1	equ	0xFE6
  1978                           postdec1	equ	0xFE5
  1979                           fsr1h	equ	0xFE2
  1980                           fsr1l	equ	0xFE1
  1981                           indf2	equ	0xFDF
  1982                           postinc2	equ	0xFDE
  1983                           postdec2	equ	0xFDD
  1984                           fsr2h	equ	0xFDA
  1985                           fsr2l	equ	0xFD9
  1986                           status	equ	0xFD8
  1987                           
  1988                           	psect	text10
  1989  000000                     __ptext10:
  1990                           	opt stack 0
  1991                           tosu	equ	0xFFF
  1992                           tosh	equ	0xFFE
  1993                           tosl	equ	0xFFD
  1994                           pclatu	equ	0xFFB
  1995                           pclath	equ	0xFFA
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           intcon	equ	0xFF2
  2003                           postinc0	equ	0xFEE
  2004                           postdec0	equ	0xFED
  2005                           fsr0h	equ	0xFEA
  2006                           fsr0l	equ	0xFE9
  2007                           wreg	equ	0xFE8
  2008                           indf1	equ	0xFE7
  2009                           postinc1	equ	0xFE6
  2010                           postdec1	equ	0xFE5
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           postinc2	equ	0xFDE
  2015                           postdec2	equ	0xFDD
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8
  2019                           
  2020                           	psect	rparam
  2021  0000                     tosu	equ	0xFFF
  2022                           tosh	equ	0xFFE
  2023                           tosl	equ	0xFFD
  2024                           pclatu	equ	0xFFB
  2025                           pclath	equ	0xFFA
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           prodh	equ	0xFF4
  2031                           prodl	equ	0xFF3
  2032                           intcon	equ	0xFF2
  2033                           postinc0	equ	0xFEE
  2034                           postdec0	equ	0xFED
  2035                           fsr0h	equ	0xFEA
  2036                           fsr0l	equ	0xFE9
  2037                           wreg	equ	0xFE8
  2038                           indf1	equ	0xFE7
  2039                           postinc1	equ	0xFE6
  2040                           postdec1	equ	0xFE5
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           indf2	equ	0xFDF
  2044                           postinc2	equ	0xFDE
  2045                           postdec2	equ	0xFDD
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         296
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      26
    BANK0           128      0       0
    BANK1           256    147     147
    BANK2           256    147     147
    BANK3           256    147     147
    BANK4           256    147     147
    BANK5           256      0       0

Pointer List with Targets:

    ?_Task_Create.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Init@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Init@task1	PTR struct _task size(2) Largest target is 294
		 -> tt(BIGRAM[294]), 

    TASK_Restore@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    TASK_Restore@task1	PTR struct _task size(2) Largest target is 294
		 -> tt(BIGRAM[294]), 

    Task_Save@task1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    Task_Save@task1	PTR struct _task size(2) Largest target is 294
		 -> tt(BIGRAM[294]), 

    Task_Create@func1	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    new_task.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    tt.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    t2.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    S22_task$func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 

    t1.func	PTR FTN()void  size(2) Largest target is 0
		 -> func1(), func2(), 


Critical Paths under _main in COMRAM

    _main->_TASK_Init
    _main->_Task_Create

Critical Paths under _HighInt in COMRAM

    _HighInt->_TASK_Restore
    _HighInt->_Task_Save

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighInt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Task_Create

Critical Paths under _HighInt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Task_Create

Critical Paths under _HighInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighInt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               296   296      0     888
                                             22 COMRAM     2     2      0
                                              0 BANK3    147   147      0
                                              0 BANK4    147   147      0
                          _TASK_Init
                        _Task_Create
                         _Task_Empty
                              _func1 *
                              _func2 *
 ---------------------------------------------------------------------------------
 (1) _func2                                                2     2      0      46
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _func1                                                1     1      0      23
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Task_Create                                        297   150    147     289
                                             19 COMRAM     3     3      0
                                              0 BANK1    147     0    147
                                              0 BANK2    147   147      0
 ---------------------------------------------------------------------------------
 (1) _TASK_Init                                            3     1      2     482
                                             19 COMRAM     3     1      2
                         _Task_Empty
 ---------------------------------------------------------------------------------
 (1) _Task_Empty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighInt                                             14    14      0     616
                                              5 COMRAM    14    14      0
                       _TASK_Restore
                          _Task_Save
                       i2_Task_Empty
 ---------------------------------------------------------------------------------
 (4) i2_Task_Empty                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Task_Save                                            5     3      2     308
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _TASK_Restore                                         5     3      2     308
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TASK_Init
     _Task_Empty
   _Task_Create
   _Task_Empty
   _func1 *
   _func2 *

 _HighInt (ROOT)
   _TASK_Restore
   _Task_Save
   i2_Task_Empty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     126      17       19.2%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100     93      93      13       57.4%
BITBANK3           100      0       0      10        0.0%
BANK3              100     93      93      11       57.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     93      93       9       57.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     93      93       7       57.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      1A       1       20.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     266      15        0.0%
DATA                 0      0     38C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Apr 24 17:52:24 2016

                     _tt 0493                      l901 05B0                      l947 044A  
                    l989 0510                      u221 0492                      u231 04B0  
                    u241 04C2                      u251 04D4                      u191 057A  
                    u268 0524                      u269 0538                      fsr0 000FE9  
                    prod 000FF3                      tosl 000FFD                      wreg 000FE8  
            main@bbytess 0017                     _GIEH 007F97                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _IPEN 007E87                     i2l68 0156                     _TOSH 000FFE  
                   _TOSL 000FFD                     _TOSU 000FFF                     _main 0474  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     indf1 000FE7                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0018  
        __end_of_HighInt 0190              func1@bytess 0014                    ?_main 0001  
                  _T1CON 000FCD                    i2l785 0196                    i2l799 0290  
     __size_of_TASK_Init 00F0                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _func1 0642  
                  _func2 0588                    _index 001A                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 0620  
           __end_of_main 0544                   ??_main 0017               Task_Save@j 0005  
          __activetblptr 000002            ??_Task_Create 0014                   ?_func1 0001  
                 ?_func2 0001      Task_Create@new_task 0200               _Task_Empty 05BC  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   _TMR1IP 007CF8  
              ??_HighInt 0006        __end_of_TASK_Init 0474       __size_of_Task_Save 00FA  
                 clear_0 0628                   main@t1 0300                   main@t2 0400  
                 func2@i 0014                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8      __end_of_Task_Create 0588               __accesstop 0080  
__end_of__initialization 0638           __pcstackCOMRAM 0001            __end_of_func1 065A  
          __end_of_func2 05BC                  ??_func1 0014                  ??_func2 0014  
      __end_of_Task_Save 028A              ?_Task_Empty 0001            ?_TASK_Restore 0001  
            _Task_Create 0544        TASK_Restore@task1 0001                  _HighInt 0008  
         ??_TASK_Restore 0003                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0620                  __ramtop 0600                  __ptext0 0474  
                __ptext1 0642                  __ptext2 0588                  __ptext3 0544  
                __ptext4 0384                  __ptext5 05BC                  __ptext7 05EE  
                __ptext8 0190                  __ptext9 028A      __size_of_Task_Empty 0032  
         __pintcode_body 001C     end_of_initialization 0638            __Lmediumconst 0000  
                int_func 001C            TASK_Restore@j 0005           Task_Save@task1 0001  
                postdec0 000FED                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
              _TASK_Init 0384            ?i2_Task_Empty 0001         Task_Create@func1 0100  
             ?_TASK_Init 0014     __end_of_TASK_Restore 0384      start_initialization 0620  
         ??i2_Task_Empty 0001             ??_Task_Empty 0014                _Task_Save 0190  
              _Stack_Sav 0019       __end_of_Task_Empty 05EE              __pbssBIGRAM 0493  
            __pbssCOMRAM 0019             ?_Task_Create 0100            __pcstackBANK1 0100  
          __pcstackBANK2 0200            __pcstackBANK3 0300            __pcstackBANK4 0400  
               ?_HighInt 0001               ?_Task_Save 0001                __pintcode 0008  
            ??_TASK_Init 0016               TASK_Init@i 0016           __size_of_func1 0018  
         __size_of_func2 0034    __size_of_TASK_Restore 00FA     __end_ofi2_Task_Empty 0620  
       __size_of_HighInt 0188              ??_Task_Save 0003                 __Hrparam 0000  
           _TASK_Restore 028A                 __Lrparam 0000                 __ptext10 0000  
         TASK_Init@task1 0014     __size_of_Task_Create 0044            __size_of_main 00D0  
               intlevel2 0000    __size_ofi2_Task_Empty 0032             i2_Task_Empty 05EE  
