Disassembly Listing for Procedure_C
Generated From:
D:/project/PIC/PIC_program_C/Procedure_C/Procedure_C.X/dist/default/debug/Procedure_C.X.debug.elf
2016/4/24 ¤U¤È 05:52:27

---  D:/project/PIC/PIC_program_C/Procedure_C/Procedure_C.X/main.c  -------------------------------------
1:             #include "main.h"
2:             
3:             unsigned char Stack_Sav;
4:             void func2()
5:             {
6:                TRISB=0x00;
0588  0E00     MOVLW 0x0
058A  6E93     MOVWF TRISB, ACCESS
7:                NOP();
058C  F000     NOP
8:                NOP();
058E  F000     NOP
9:                for(int i=0;i<10000;i++)
0590  0E00     MOVLW 0x0
0592  6E15     MOVWF 0x15, ACCESS
0594  0E00     MOVLW 0x0
0596  6E14     MOVWF bytess, ACCESS
0598  5015     MOVF 0x15, W, ACCESS
059A  0A80     XORLW 0x80
059C  0F59     ADDLW 0x59
059E  0E10     MOVLW 0x10
05A0  B4D8     BTFSC STATUS, 2, ACCESS
05A2  5C14     SUBWF bytess, W, ACCESS
05A4  B0D8     BTFSC STATUS, 0, ACCESS
05A6  D004     BRA 0x5B0
05AA  4A14     INFSNZ bytess, F, ACCESS
05AC  2A15     INCF 0x15, F, ACCESS
05AE  D7F4     BRA 0x598
10:               {
11:                   NOP();
05A8  F000     NOP
12:               }
13:               while(1)
14:               {
15:                    PORTB=0x01;
05B0  0E01     MOVLW 0x1
05B2  6E81     MOVWF PORTB, ACCESS
16:                    NOP();
05B4  F000     NOP
17:                    NOP();
05B6  F000     NOP
18:                    NOP();
05B8  F000     NOP
19:               }
20:            }
21:            void func1()
22:            {
23:                TRISB=0x00;
0642  0E00     MOVLW 0x0
0644  6E93     MOVWF TRISB, ACCESS
24:                NOP();
0646  F000     NOP
25:                NOP();
0648  F000     NOP
26:                while(1)
27:                {
28:                    unsigned char bytess=0x02;
064A  0E02     MOVLW 0x2
064C  6E14     MOVWF bytess, ACCESS
29:                    NOP();
064E  F000     NOP
30:                    NOP();
0650  F000     NOP
31:                    PORTB=bytess;
0652  C014     MOVFF bytess, PORTB
0654  FF81     NOP
32:                    NOP();
0656  F000     NOP
33:                    NOP();
34:                    NOP();
35:                }
36:            }
37:            int main()
38:            {
39:                int bbytess=0x00;
0474  0E00     MOVLW 0x0
40:                task t1;
41:                task t2;
42:                t1=Task_Create(func1);
047C  0E06     MOVLW 0x6
047E  0101     MOVLB 0x1
0480  6F01     MOVWF __pcstackCOMRAM, BANKED
0482  0E42     MOVLW 0x42
0484  0101     MOVLB 0x1
0486  6F00     MOVWF 0x0, BANKED
0488  ECA2     CALL 0x544, 0
048A  F002     NOP
048C  EE23     LFSR 2, 0x300
048E  F000     NOP
0490  0E93     MOVLW 0x93
0492  CFEE     MOVFF POSTINC0, POSTINC2
0494  FFDE     NOP
0496  2EE8     DECFSZ WREG, F, ACCESS
0498  D7FC     BRA 0x492
43:                t2=Task_Create(func2);
049A  0E05     MOVLW 0x5
049C  0101     MOVLB 0x1
049E  6F01     MOVWF __pcstackCOMRAM, BANKED
04A0  0E88     MOVLW 0x88
04A2  0101     MOVLB 0x1
04A4  6F00     MOVWF 0x0, BANKED
04A6  ECA2     CALL 0x544, 0
04A8  F002     NOP
04AA  EE24     LFSR 2, 0x400
04AC  F000     NOP
04AE  0E93     MOVLW 0x93
04B0  CFEE     MOVFF POSTINC0, POSTINC2
04B2  FFDE     NOP
04B4  2EE8     DECFSZ WREG, F, ACCESS
04B6  D7FC     BRA 0x4B0
44:                tt[0]=t1;
04B8  EE23     LFSR 2, 0x300
04BA  F000     NOP
04BC  EE14     LFSR 1, 0x493
04BE  F093     NOP
04C0  0E93     MOVLW 0x93
04C2  CFDE     MOVFF POSTINC2, POSTINC1
04C4  FFE6     NOP
04C6  2EE8     DECFSZ WREG, F, ACCESS
04C8  D7FC     BRA 0x4C2
45:                tt[1]=t2;
04CA  EE24     LFSR 2, 0x400
04CC  F000     NOP
04CE  EE15     LFSR 1, 0x526
04D0  F026     NOP
04D2  0E93     MOVLW 0x93
04D4  CFDE     MOVFF POSTINC2, POSTINC1
04D6  FFE6     NOP
04D8  2EE8     DECFSZ WREG, F, ACCESS
04DA  D7FC     BRA 0x4D4
46:                //Empty
47:                Task_Empty();
04DC  ECDE     CALL 0x5BC, 0
04DE  F002     NOP
48:                TASK_Init(&tt[0]);
04E0  0E04     MOVLW 0x4
04E2  6E15     MOVWF 0x15, ACCESS
04E4  0E93     MOVLW 0x93
04E6  6E14     MOVWF bytess, ACCESS
04E8  ECC2     CALL 0x384, 0
04EA  F001     NOP
49:                TASK_Init(&tt[1]);
04EC  0E05     MOVLW 0x5
04EE  6E15     MOVWF 0x15, ACCESS
04F0  0E26     MOVLW 0x26
04F2  6E14     MOVWF bytess, ACCESS
04F4  ECC2     CALL 0x384, 0
04F6  F001     NOP
50:                //
51:                index=0;
04F8  0E00     MOVLW 0x0
04FA  6E1A     MOVWF index, ACCESS
52:                //timer imtrrupt init
53:                T1CON=0B11111101;
04FC  0EFD     MOVLW 0xFD
04FE  6ECD     MOVWF T1CON, ACCESS
54:                TMR1H=(65536-2)/256;
0500  68CF     SETF TMR1H, ACCESS
55:                TMR1L=(65536-2)%256;
0502  0EFE     MOVLW 0xFE
0504  6ECE     MOVWF TMR1, ACCESS
56:                TMR1IF=0;
0506  909E     BCF PIR1, 0, ACCESS
57:                TMR1IP=1;
0508  809F     BSF IPR1, 0, ACCESS
58:                TMR1IE=1;
050A  809D     BSF PIE1, 0, ACCESS
59:                IPEN=1;
050C  8ED0     BSF RCON, 7, ACCESS
60:                GIEH=1;
050E  8EF2     BSF INTCON, 7, ACCESS
61:                //t1.func();;*/
62:                while(1)
63:                {
64:                    tt[index].func();
0510  501A     MOVF index, W, ACCESS
0512  0D93     MULLW 0x93
0514  0E93     MOVLW 0x93
0516  24F3     ADDWF PROD, W, ACCESS
0518  6ED9     MOVWF FSR2, ACCESS
051A  0E04     MOVLW 0x4
051C  20F4     ADDWFC PRODH, W, ACCESS
051E  6EDA     MOVWF FSR2H, ACCESS
0520  D801     RCALL 0x524
0522  D00A     BRA 0x538
0524  0005     PUSH
0526  6EFA     MOVWF PCLATH, ACCESS
0528  50DE     MOVF POSTINC2, W, ACCESS
052A  6EFD     MOVWF TOS, ACCESS
052C  50DE     MOVF POSTINC2, W, ACCESS
052E  6EFE     MOVWF TOSH, ACCESS
0530  50F8     MOVF TBLPTRU, W, ACCESS
0532  6EFF     MOVWF TOSU, ACCESS
0534  50FA     MOVF PCLATH, W, ACCESS
0536  0012     RETURN 0
65:                    bbytess+=index;
0538  501A     MOVF index, W, ACCESS
053A  2617     ADDWF bbytess, F, ACCESS
053C  0E00     MOVLW 0x0
053E  2218     ADDWFC 0x18, F, ACCESS
66:                    NOP();
0540  F000     NOP
67:                }
68:                return 0;
69:            }
70:            
71:            void interrupt  HighInt()
0008  CFFA     MOVFF PCLATH, 0x6
001C  0006     POP
72:            {
73:                if(TMR1IE && TMR1IF)
004A  B09D     BTFSC PIE1, 0, ACCESS
74:                {
75:                   TMR1IE=0;
0050  909D     BCF PIE1, 0, ACCESS
76:                   TMR1IF=0;
0052  909E     BCF PIR1, 0, ACCESS
77:                   Task_Save(&tt[index]);
0054  501A     MOVF index, W, ACCESS
78:                   //Empty
79:                   Task_Empty();
0068  ECF7     CALL 0x5EE, 0
80:                   //Save Address from Stack
81:                   tt[index].S_TOSL=TOSL;
006C  501A     MOVF index, W, ACCESS
82:                   tt[index].S_TOSH=TOSH;
0088  501A     MOVF index, W, ACCESS
83:                   tt[index].S_TOSU=TOSU;
00A4  501A     MOVF index, W, ACCESS
84:                   index++;
00C0  2A1A     INCF index, F, ACCESS
85:                   index=index%2;
00C2  501A     MOVF index, W, ACCESS
86:                   TASK_Restore(&tt[index]);
00C8  501A     MOVF index, W, ACCESS
87:                   TOSH=tt[index].S_TOSH;
00DC  501A     MOVF index, W, ACCESS
88:                   TOSL=tt[index].S_TOSL;
00F8  501A     MOVF index, W, ACCESS
89:                   TOSU=tt[index].S_TOSU;
0114  501A     MOVF index, W, ACCESS
90:                   tt[index].count++;
0130  501A     MOVF index, W, ACCESS
91:                   // TMR1IE=0;
92:                   TMR1H=(65536-5)/256;
014E  68CF     SETF TMR1H, ACCESS
93:                   TMR1L=(65536-5)%256;
0150  0EFB     MOVLW 0xFB
94:                   TMR1IE=1;
0154  809D     BSF PIE1, 0, ACCESS
95:                }
96:            
97:            }
0156  C013     MOVFF 0x13, TABLAT
---  D:/project/PIC/PIC_program_C/Procedure_C/Procedure_C.X/core.c  -------------------------------------
1:             #include "core.h"
2:             task Task_Create(void (*func1)(void))
3:             {
4:                 task new_task;
5:                 new_task.func=func1;
0544  0101     MOVLB 0x1
0546  0102     MOVLB 0x2
0548  C101     MOVFF 0x101, 0x201
054A  F201     NOP
054C  0101     MOVLB 0x1
054E  0102     MOVLB 0x2
0550  C100     MOVFF __pcstackBANK1, __pcstackBANK2
0552  F200     NOP
6:                 new_task.S_TOSH=(unsigned char)(((unsigned int)func1 &  0xFF00) >> 8);
0554  0101     MOVLB 0x1
0556  C101     MOVFF 0x101, bytess
0558  F014     NOP
055A  C014     MOVFF bytess, 0x15
055C  F015     NOP
055E  6A16     CLRF i, ACCESS
0560  5015     MOVF 0x15, W, ACCESS
0562  0102     MOVLB 0x2
0564  6F05     MOVWF j, BANKED
7:                 new_task.S_TOSL=(unsigned char)((unsigned int)func1 & 0x00FF);
0566  C100     MOVFF __pcstackBANK1, 0x204
0568  F204     NOP
8:                 new_task.S_TOSU=0x00;
056A  0E00     MOVLW 0x0
056C  0102     MOVLB 0x2
056E  6F06     MOVWF 0x6, BANKED
9:                 return new_task;
0570  EE22     LFSR 2, 0x292
0572  F092     NOP
0574  EE01     LFSR 0, 0x192
0576  F092     NOP
0578  0E93     MOVLW 0x93
057A  CFDD     MOVFF POSTDEC2, POSTDEC0
057C  FFED     NOP
057E  2EE8     DECFSZ WREG, F, ACCESS
0580  D7FC     BRA 0x57A
0582  2AE9     INCF FSR0, F, ACCESS
0584  22EA     ADDWFC FSR0H, F, ACCESS
10:            }
0586  0012     RETURN 0
11:            void Task_Empty()
12:            {
13:                TRISA=0x00;
05BC  0E00     MOVLW 0x0
05BE  6E92     MOVWF TRISA, ACCESS
05EE  0E00     MOVLW 0x0
14:                TRISB=0x00;
05C0  0E00     MOVLW 0x0
05C2  6E93     MOVWF TRISB, ACCESS
05F2  0E00     MOVLW 0x0
05F4  6E93     MOVWF TRISB, ACCESS
15:                TRISC=0x00;
05C4  0E00     MOVLW 0x0
05C6  6E94     MOVWF TRISC, ACCESS
05F6  0E00     MOVLW 0x0
05F8  6E94     MOVWF TRISC, ACCESS
16:                TRISD=0x00;
05C8  0E00     MOVLW 0x0
05CA  6E95     MOVWF TRISD, ACCESS
05FA  0E00     MOVLW 0x0
05FC  6E95     MOVWF TRISD, ACCESS
17:                //GPIOX
18:                PORTA=0x00;
05CC  0E00     MOVLW 0x0
05CE  6E80     MOVWF PORTA, ACCESS
05FE  0E00     MOVLW 0x0
0600  6E80     MOVWF PORTA, ACCESS
19:                PORTB=0x00;
05D0  0E00     MOVLW 0x0
05D2  6E81     MOVWF PORTB, ACCESS
0602  0E00     MOVLW 0x0
0604  6E81     MOVWF PORTB, ACCESS
20:                PORTC=0x00;
05D4  0E00     MOVLW 0x0
05D6  6E82     MOVWF PORTC, ACCESS
0606  0E00     MOVLW 0x0
0608  6E82     MOVWF PORTC, ACCESS
21:                PORTD=0x00;
05D8  0E00     MOVLW 0x0
05DA  6E83     MOVWF PORTD, ACCESS
060A  0E00     MOVLW 0x0
060C  6E83     MOVWF PORTD, ACCESS
22:                //LATX
23:                LATA=0x00;
05DC  0E00     MOVLW 0x0
05DE  6E89     MOVWF LATA, ACCESS
060E  0E00     MOVLW 0x0
0610  6E89     MOVWF LATA, ACCESS
24:                LATB=0x00;
05E0  0E00     MOVLW 0x0
05E2  6E8A     MOVWF LATB, ACCESS
0612  0E00     MOVLW 0x0
0614  6E8A     MOVWF LATB, ACCESS
25:                LATC=0x00;
05E4  0E00     MOVLW 0x0
05E6  6E8B     MOVWF LATC, ACCESS
0616  0E00     MOVLW 0x0
0618  6E8B     MOVWF LATC, ACCESS
26:                LATD=0x00;
05E8  0E00     MOVLW 0x0
05EA  6E8C     MOVWF LATD, ACCESS
061A  0E00     MOVLW 0x0
061C  6E8C     MOVWF LATD, ACCESS
27:            }
0008  CFFA     MOVFF PCLATH, 0x6
05EC  0012     RETURN 0
061E  0012     RETURN 0
28:            
29:            void Task_Save(task* task1)
30:            {
31:                //Save GPIO Register
32:            /*#asm
33:                MOVWF   0x20
34:            #endasm*/
35:                for(unsigned char j=0x00;j<0x7F;j++)
0190  0E00     MOVLW 0x0
0192  6E05     MOVWF j, ACCESS
0194  D016     BRA 0x1C2
01C0  2A05     INCF j, F, ACCESS
01C2  0E7E     MOVLW 0x7E
01C4  6405     CPFSGT j, ACCESS
01C6  D7E7     BRA 0x196
36:                {
37:                    task1->SSRAM[j]=*(unsigned char*)(0x00+j);
0196  5005     MOVF j, W, ACCESS
0198  6E03     MOVWF 0x3, ACCESS
019A  6A04     CLRF 0x4, ACCESS
019C  C003     MOVFF 0x3, FSR2
019E  FFD9     NOP
01A0  C004     MOVFF 0x4, FSR2H
01A2  FFDA     NOP
01A4  5005     MOVF j, W, ACCESS
01A6  0D01     MULLW 0x1
01A8  0E13     MOVLW 0x13
01AA  26F3     ADDWF PROD, F, ACCESS
01AC  0E00     MOVLW 0x0
01AE  22F4     ADDWFC PRODH, F, ACCESS
01B0  50F3     MOVF PROD, W, ACCESS
01B2  2401     ADDWF __pcstackCOMRAM, W, ACCESS
01B4  6EE1     MOVWF FSR1, ACCESS
01B6  50F4     MOVF PRODH, W, ACCESS
01B8  2002     ADDWFC 0x2, W, ACCESS
01BA  6EE2     MOVWF FSR1H, ACCESS
01BC  CFDF     MOVFF INDF2, INDF1
01BE  FFE7     NOP
38:                }
39:               
40:                //TRISX
41:                task1->reg[0]=TRISA;
01C8  EE20     LFSR 2, 0x7
01CA  F007     NOP
01CC  5001     MOVF __pcstackCOMRAM, W, ACCESS
01CE  26D9     ADDWF FSR2, F, ACCESS
01D0  5002     MOVF 0x2, W, ACCESS
01D2  22DA     ADDWFC FSR2H, F, ACCESS
01D4  CF92     MOVFF TRISA, INDF2
01D6  FFDF     NOP
42:                task1->reg[1]=TRISB;
01D8  EE20     LFSR 2, 0x8
01DA  F008     NOP
01DC  5001     MOVF __pcstackCOMRAM, W, ACCESS
01DE  26D9     ADDWF FSR2, F, ACCESS
01E0  5002     MOVF 0x2, W, ACCESS
01E2  22DA     ADDWFC FSR2H, F, ACCESS
01E4  CF93     MOVFF TRISB, INDF2
01E6  FFDF     NOP
43:                task1->reg[2]=TRISC;
01E8  EE20     LFSR 2, 0x9
01EA  F009     NOP
01EC  5001     MOVF __pcstackCOMRAM, W, ACCESS
01EE  26D9     ADDWF FSR2, F, ACCESS
01F0  5002     MOVF 0x2, W, ACCESS
01F2  22DA     ADDWFC FSR2H, F, ACCESS
01F4  CF94     MOVFF TRISC, INDF2
01F6  FFDF     NOP
44:                task1->reg[3]=TRISD;
01F8  EE20     LFSR 2, 0xA
01FA  F00A     NOP
01FC  5001     MOVF __pcstackCOMRAM, W, ACCESS
01FE  26D9     ADDWF FSR2, F, ACCESS
0200  5002     MOVF 0x2, W, ACCESS
0202  22DA     ADDWFC FSR2H, F, ACCESS
0204  CF95     MOVFF TRISD, INDF2
0206  FFDF     NOP
45:                //GPIOX
46:                task1->reg[4]=PORTA;
0208  EE20     LFSR 2, 0xB
020A  F00B     NOP
020C  5001     MOVF __pcstackCOMRAM, W, ACCESS
020E  26D9     ADDWF FSR2, F, ACCESS
0210  5002     MOVF 0x2, W, ACCESS
0212  22DA     ADDWFC FSR2H, F, ACCESS
0214  CF80     MOVFF PORTA, INDF2
0216  FFDF     NOP
47:                task1->reg[5]=PORTB;
0218  EE20     LFSR 2, 0xC
021A  F00C     NOP
021C  5001     MOVF __pcstackCOMRAM, W, ACCESS
021E  26D9     ADDWF FSR2, F, ACCESS
0220  5002     MOVF 0x2, W, ACCESS
0222  22DA     ADDWFC FSR2H, F, ACCESS
0224  CF81     MOVFF PORTB, INDF2
0226  FFDF     NOP
48:                task1->reg[6]=PORTC;
0228  EE20     LFSR 2, 0xD
022A  F00D     NOP
022C  5001     MOVF __pcstackCOMRAM, W, ACCESS
022E  26D9     ADDWF FSR2, F, ACCESS
0230  5002     MOVF 0x2, W, ACCESS
0232  22DA     ADDWFC FSR2H, F, ACCESS
0234  CF82     MOVFF PORTC, INDF2
0236  FFDF     NOP
49:                task1->reg[7]=PORTD;
0238  EE20     LFSR 2, 0xE
023A  F00E     NOP
023C  5001     MOVF __pcstackCOMRAM, W, ACCESS
023E  26D9     ADDWF FSR2, F, ACCESS
0240  5002     MOVF 0x2, W, ACCESS
0242  22DA     ADDWFC FSR2H, F, ACCESS
0244  CF83     MOVFF PORTD, INDF2
0246  FFDF     NOP
50:                //LATX
51:                task1->reg[8]=LATA;
0248  EE20     LFSR 2, 0xF
024A  F00F     NOP
024C  5001     MOVF __pcstackCOMRAM, W, ACCESS
024E  26D9     ADDWF FSR2, F, ACCESS
0250  5002     MOVF 0x2, W, ACCESS
0252  22DA     ADDWFC FSR2H, F, ACCESS
0254  CF89     MOVFF LATA, INDF2
0256  FFDF     NOP
52:                task1->reg[9]=LATB;
0258  EE20     LFSR 2, 0x10
025A  F010     NOP
025C  5001     MOVF __pcstackCOMRAM, W, ACCESS
025E  26D9     ADDWF FSR2, F, ACCESS
0260  5002     MOVF 0x2, W, ACCESS
0262  22DA     ADDWFC FSR2H, F, ACCESS
0264  CF8A     MOVFF LATB, INDF2
0266  FFDF     NOP
53:                task1->reg[10]=LATC;
0268  EE20     LFSR 2, 0x11
026A  F011     NOP
026C  5001     MOVF __pcstackCOMRAM, W, ACCESS
026E  26D9     ADDWF FSR2, F, ACCESS
0270  5002     MOVF 0x2, W, ACCESS
0272  22DA     ADDWFC FSR2H, F, ACCESS
0274  CF8B     MOVFF LATC, INDF2
0276  FFDF     NOP
54:                task1->reg[11]=LATD;
0278  EE20     LFSR 2, 0x12
027A  F012     NOP
027C  5001     MOVF __pcstackCOMRAM, W, ACCESS
027E  26D9     ADDWF FSR2, F, ACCESS
0280  5002     MOVF 0x2, W, ACCESS
0282  22DA     ADDWFC FSR2H, F, ACCESS
0284  CF8C     MOVFF LATD, INDF2
0286  FFDF     NOP
55:            }
0288  0012     RETURN 0
56:            void TASK_Restore(task* task1)
57:            {
58:                //Restore GPIO Register
59:                for(unsigned char j=0x00;j<0x7F;j++)
028A  0E00     MOVLW 0x0
028C  6E05     MOVWF j, ACCESS
028E  D016     BRA 0x2BC
02BA  2A05     INCF j, F, ACCESS
02BC  0E7E     MOVLW 0x7E
02BE  6405     CPFSGT j, ACCESS
02C0  D7E7     BRA 0x290
60:                {
61:                    *(unsigned char*)(0x00+j)=task1->SSRAM[j];
0290  5005     MOVF j, W, ACCESS
0292  0D01     MULLW 0x1
0294  0E13     MOVLW 0x13
0296  26F3     ADDWF PROD, F, ACCESS
0298  0E00     MOVLW 0x0
029A  22F4     ADDWFC PRODH, F, ACCESS
029C  50F3     MOVF PROD, W, ACCESS
029E  2401     ADDWF __pcstackCOMRAM, W, ACCESS
02A0  6ED9     MOVWF FSR2, ACCESS
02A2  50F4     MOVF PRODH, W, ACCESS
02A4  2002     ADDWFC 0x2, W, ACCESS
02A6  6EDA     MOVWF FSR2H, ACCESS
02A8  5005     MOVF j, W, ACCESS
02AA  6E03     MOVWF 0x3, ACCESS
02AC  6A04     CLRF 0x4, ACCESS
02AE  C003     MOVFF 0x3, FSR1
02B0  FFE1     NOP
02B2  C004     MOVFF 0x4, FSR1H
02B4  FFE2     NOP
02B6  CFDF     MOVFF INDF2, INDF1
02B8  FFE7     NOP
62:                }
63:              
64:                /**#asm
65:                    MOVWF   0x20
66:                #endasm*/
67:                //TRISX
68:                TRISA=task1->reg[0];
02C2  EE20     LFSR 2, 0x7
02C4  F007     NOP
02C6  5001     MOVF __pcstackCOMRAM, W, ACCESS
02C8  26D9     ADDWF FSR2, F, ACCESS
02CA  5002     MOVF 0x2, W, ACCESS
02CC  22DA     ADDWFC FSR2H, F, ACCESS
02CE  50DF     MOVF INDF2, W, ACCESS
02D0  6E92     MOVWF TRISA, ACCESS
69:                TRISB=task1->reg[1];
02D2  EE20     LFSR 2, 0x8
02D4  F008     NOP
02D6  5001     MOVF __pcstackCOMRAM, W, ACCESS
02D8  26D9     ADDWF FSR2, F, ACCESS
02DA  5002     MOVF 0x2, W, ACCESS
02DC  22DA     ADDWFC FSR2H, F, ACCESS
02DE  50DF     MOVF INDF2, W, ACCESS
02E0  6E93     MOVWF TRISB, ACCESS
70:                TRISC=task1->reg[2];
02E2  EE20     LFSR 2, 0x9
02E4  F009     NOP
02E6  5001     MOVF __pcstackCOMRAM, W, ACCESS
02E8  26D9     ADDWF FSR2, F, ACCESS
02EA  5002     MOVF 0x2, W, ACCESS
02EC  22DA     ADDWFC FSR2H, F, ACCESS
02EE  50DF     MOVF INDF2, W, ACCESS
02F0  6E94     MOVWF TRISC, ACCESS
71:                TRISD=task1->reg[3];
02F2  EE20     LFSR 2, 0xA
02F4  F00A     NOP
02F6  5001     MOVF __pcstackCOMRAM, W, ACCESS
02F8  26D9     ADDWF FSR2, F, ACCESS
02FA  5002     MOVF 0x2, W, ACCESS
02FC  22DA     ADDWFC FSR2H, F, ACCESS
02FE  50DF     MOVF INDF2, W, ACCESS
0300  6E95     MOVWF TRISD, ACCESS
72:                //GPIOX
73:                PORTA=task1->reg[4];
0302  EE20     LFSR 2, 0xB
0304  F00B     NOP
0306  5001     MOVF __pcstackCOMRAM, W, ACCESS
0308  26D9     ADDWF FSR2, F, ACCESS
030A  5002     MOVF 0x2, W, ACCESS
030C  22DA     ADDWFC FSR2H, F, ACCESS
030E  50DF     MOVF INDF2, W, ACCESS
0310  6E80     MOVWF PORTA, ACCESS
74:                PORTB=task1->reg[5];
0312  EE20     LFSR 2, 0xC
0314  F00C     NOP
0316  5001     MOVF __pcstackCOMRAM, W, ACCESS
0318  26D9     ADDWF FSR2, F, ACCESS
031A  5002     MOVF 0x2, W, ACCESS
031C  22DA     ADDWFC FSR2H, F, ACCESS
031E  50DF     MOVF INDF2, W, ACCESS
0320  6E81     MOVWF PORTB, ACCESS
75:                PORTC=task1->reg[6];
0322  EE20     LFSR 2, 0xD
0324  F00D     NOP
0326  5001     MOVF __pcstackCOMRAM, W, ACCESS
0328  26D9     ADDWF FSR2, F, ACCESS
032A  5002     MOVF 0x2, W, ACCESS
032C  22DA     ADDWFC FSR2H, F, ACCESS
032E  50DF     MOVF INDF2, W, ACCESS
0330  6E82     MOVWF PORTC, ACCESS
76:                PORTD=task1->reg[7];
0332  EE20     LFSR 2, 0xE
0334  F00E     NOP
0336  5001     MOVF __pcstackCOMRAM, W, ACCESS
0338  26D9     ADDWF FSR2, F, ACCESS
033A  5002     MOVF 0x2, W, ACCESS
033C  22DA     ADDWFC FSR2H, F, ACCESS
033E  50DF     MOVF INDF2, W, ACCESS
0340  6E83     MOVWF PORTD, ACCESS
77:                //LATX
78:                LATA=task1->reg[8];
0342  EE20     LFSR 2, 0xF
0344  F00F     NOP
0346  5001     MOVF __pcstackCOMRAM, W, ACCESS
0348  26D9     ADDWF FSR2, F, ACCESS
034A  5002     MOVF 0x2, W, ACCESS
034C  22DA     ADDWFC FSR2H, F, ACCESS
034E  50DF     MOVF INDF2, W, ACCESS
0350  6E89     MOVWF LATA, ACCESS
79:                LATB=task1->reg[9];
0352  EE20     LFSR 2, 0x10
0354  F010     NOP
0356  5001     MOVF __pcstackCOMRAM, W, ACCESS
0358  26D9     ADDWF FSR2, F, ACCESS
035A  5002     MOVF 0x2, W, ACCESS
035C  22DA     ADDWFC FSR2H, F, ACCESS
035E  50DF     MOVF INDF2, W, ACCESS
0360  6E8A     MOVWF LATB, ACCESS
80:                LATC=task1->reg[10];
0362  EE20     LFSR 2, 0x11
0364  F011     NOP
0366  5001     MOVF __pcstackCOMRAM, W, ACCESS
0368  26D9     ADDWF FSR2, F, ACCESS
036A  5002     MOVF 0x2, W, ACCESS
036C  22DA     ADDWFC FSR2H, F, ACCESS
036E  50DF     MOVF INDF2, W, ACCESS
0370  6E8B     MOVWF LATC, ACCESS
81:                LATD=task1->reg[11];
0372  EE20     LFSR 2, 0x12
0374  F012     NOP
0376  5001     MOVF __pcstackCOMRAM, W, ACCESS
0378  26D9     ADDWF FSR2, F, ACCESS
037A  5002     MOVF 0x2, W, ACCESS
037C  22DA     ADDWFC FSR2H, F, ACCESS
037E  50DF     MOVF INDF2, W, ACCESS
0380  6E8C     MOVWF LATD, ACCESS
82:            
83:            
84:            }
0382  0012     RETURN 0
85:            void TASK_Init(task* task1)
86:            {
87:                //Save GPIO Register
88:                //TRISX
89:                task1->reg[0]=0x00;
0384  EE20     LFSR 2, 0x7
0386  F007     NOP
0388  5014     MOVF bytess, W, ACCESS
038A  26D9     ADDWF FSR2, F, ACCESS
038C  5015     MOVF 0x15, W, ACCESS
038E  22DA     ADDWFC FSR2H, F, ACCESS
0390  0E00     MOVLW 0x0
0392  6EDF     MOVWF INDF2, ACCESS
90:                task1->reg[1]=0x00;
0394  EE20     LFSR 2, 0x8
0396  F008     NOP
0398  5014     MOVF bytess, W, ACCESS
039A  26D9     ADDWF FSR2, F, ACCESS
039C  5015     MOVF 0x15, W, ACCESS
039E  22DA     ADDWFC FSR2H, F, ACCESS
03A0  0E00     MOVLW 0x0
03A2  6EDF     MOVWF INDF2, ACCESS
91:                task1->reg[2]=0x00;
03A4  EE20     LFSR 2, 0x9
03A6  F009     NOP
03A8  5014     MOVF bytess, W, ACCESS
03AA  26D9     ADDWF FSR2, F, ACCESS
03AC  5015     MOVF 0x15, W, ACCESS
03AE  22DA     ADDWFC FSR2H, F, ACCESS
03B0  0E00     MOVLW 0x0
03B2  6EDF     MOVWF INDF2, ACCESS
92:                task1->reg[3]=0x00;
03B4  EE20     LFSR 2, 0xA
03B6  F00A     NOP
03B8  5014     MOVF bytess, W, ACCESS
03BA  26D9     ADDWF FSR2, F, ACCESS
03BC  5015     MOVF 0x15, W, ACCESS
03BE  22DA     ADDWFC FSR2H, F, ACCESS
03C0  0E00     MOVLW 0x0
03C2  6EDF     MOVWF INDF2, ACCESS
93:                //GPIOX
94:                task1->reg[4]=0x00;
03C4  EE20     LFSR 2, 0xB
03C6  F00B     NOP
03C8  5014     MOVF bytess, W, ACCESS
03CA  26D9     ADDWF FSR2, F, ACCESS
03CC  5015     MOVF 0x15, W, ACCESS
03CE  22DA     ADDWFC FSR2H, F, ACCESS
03D0  0E00     MOVLW 0x0
03D2  6EDF     MOVWF INDF2, ACCESS
95:                task1->reg[5]=0x00;
03D4  EE20     LFSR 2, 0xC
03D6  F00C     NOP
03D8  5014     MOVF bytess, W, ACCESS
03DA  26D9     ADDWF FSR2, F, ACCESS
03DC  5015     MOVF 0x15, W, ACCESS
03DE  22DA     ADDWFC FSR2H, F, ACCESS
03E0  0E00     MOVLW 0x0
03E2  6EDF     MOVWF INDF2, ACCESS
96:                task1->reg[6]=0x00;
03E4  EE20     LFSR 2, 0xD
03E6  F00D     NOP
03E8  5014     MOVF bytess, W, ACCESS
03EA  26D9     ADDWF FSR2, F, ACCESS
03EC  5015     MOVF 0x15, W, ACCESS
03EE  22DA     ADDWFC FSR2H, F, ACCESS
03F0  0E00     MOVLW 0x0
03F2  6EDF     MOVWF INDF2, ACCESS
97:                task1->reg[7]=0x00;
03F4  EE20     LFSR 2, 0xE
03F6  F00E     NOP
03F8  5014     MOVF bytess, W, ACCESS
03FA  26D9     ADDWF FSR2, F, ACCESS
03FC  5015     MOVF 0x15, W, ACCESS
03FE  22DA     ADDWFC FSR2H, F, ACCESS
0400  0E00     MOVLW 0x0
0402  6EDF     MOVWF INDF2, ACCESS
98:                //LATX
99:                task1->reg[8]=0x00;
0404  EE20     LFSR 2, 0xF
0406  F00F     NOP
0408  5014     MOVF bytess, W, ACCESS
040A  26D9     ADDWF FSR2, F, ACCESS
040C  5015     MOVF 0x15, W, ACCESS
040E  22DA     ADDWFC FSR2H, F, ACCESS
0410  0E00     MOVLW 0x0
0412  6EDF     MOVWF INDF2, ACCESS
100:               task1->reg[9]=0x00;
0414  EE20     LFSR 2, 0x10
0416  F010     NOP
0418  5014     MOVF bytess, W, ACCESS
041A  26D9     ADDWF FSR2, F, ACCESS
041C  5015     MOVF 0x15, W, ACCESS
041E  22DA     ADDWFC FSR2H, F, ACCESS
0420  0E00     MOVLW 0x0
0422  6EDF     MOVWF INDF2, ACCESS
101:               task1->reg[10]=0x00;
0424  EE20     LFSR 2, 0x11
0426  F011     NOP
0428  5014     MOVF bytess, W, ACCESS
042A  26D9     ADDWF FSR2, F, ACCESS
042C  5015     MOVF 0x15, W, ACCESS
042E  22DA     ADDWFC FSR2H, F, ACCESS
0430  0E00     MOVLW 0x0
0432  6EDF     MOVWF INDF2, ACCESS
102:               task1->reg[11]=0x00;
0434  EE20     LFSR 2, 0x12
0436  F012     NOP
0438  5014     MOVF bytess, W, ACCESS
043A  26D9     ADDWF FSR2, F, ACCESS
043C  5015     MOVF 0x15, W, ACCESS
043E  22DA     ADDWFC FSR2H, F, ACCESS
0440  0E00     MOVLW 0x0
0442  6EDF     MOVWF INDF2, ACCESS
103:               for(unsigned char i=0;i<129;i++)
0444  0E00     MOVLW 0x0
0446  6E16     MOVWF i, ACCESS
0448  D00F     BRA 0x468
0466  2A16     INCF i, F, ACCESS
0468  0E80     MOVLW 0x80
046A  6416     CPFSGT i, ACCESS
046C  D7EE     BRA 0x44A
104:               {
105:                   task1->SSRAM[i]=0x00;
044A  5016     MOVF i, W, ACCESS
044C  0D01     MULLW 0x1
044E  0E13     MOVLW 0x13
0450  26F3     ADDWF PROD, F, ACCESS
0452  0E00     MOVLW 0x0
0454  22F4     ADDWFC PRODH, F, ACCESS
0456  50F3     MOVF PROD, W, ACCESS
0458  2414     ADDWF bytess, W, ACCESS
045A  6ED9     MOVWF FSR2, ACCESS
045C  50F4     MOVF PRODH, W, ACCESS
045E  2015     ADDWFC 0x15, W, ACCESS
0460  6EDA     MOVWF FSR2H, ACCESS
0462  0E00     MOVLW 0x0
0464  6EDF     MOVWF INDF2, ACCESS
106:               }
107:               Task_Empty();
046E  ECDE     CALL 0x5BC, 0
0470  F002     NOP
108:           
109:           }
0472  0012     RETURN 0
110:           
---  C:/Program Files (x86)/Microchip/xc8/v1.33/include/pic18f4520.h  -----------------------------------
1:             // Version 1.33 (A)
2:             // Generated 03/09/2014 GMT
3:             
4:             /*
5:              * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
6:              * 
7:              * Redistribution and use in source and binary forms, with or without modification, are
8:              * permitted provided that the following conditions are met:
9:              * 
10:             *     1. Redistributions of source code must retain the above copyright notice, this list of
11:             *        conditions and the following disclaimer.
12:             *     2. Redistributions in binary form must reproduce the above copyright notice, this list
13:             *        of conditions and the following disclaimer in the documentation and/or other
14:             *        materials provided with the distribution.
15:             *     3. All advertising materials mentioning features or use of this software must display
16:             *        the following acknowledgement: "This product includes software developed by
17:             *        Microchip Technology Inc. and its subsidiaries."
18:             *     4. Microchip's name may not be used to endorse or promote products derived from this
19:             *        software without specific prior written permission.
20:             * 
21:             * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
22:             * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
23:             * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
24:             * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
25:             * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
26:             * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
27:             * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
28:             * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
29:             */
30:            
31:            #ifndef _PIC18F4520_H_
32:            #define _PIC18F4520_H_
33:            
34:            /*
35:             * C Header file for the Microchip PIC Microcontroller
36:             * PIC18F4520
37:             */
38:            #ifndef __XC8
39:            #warning Header file pic18f4520.h included directly. Use #include <xc.h> instead.
40:            #endif
41:            
42:            /*
43:             * Register Definitions
44:             */
45:            
46:            // Register: PORTA
47:            extern volatile unsigned char           PORTA               @ 0xF80;
48:            #ifndef _LIB_BUILD
49:            asm("PORTA equ 0F80h");
50:            #endif
51:            // bitfield definitions
52:            typedef union {
53:                struct {
54:                    unsigned RA0                    :1;
55:                    unsigned RA1                    :1;
56:                    unsigned RA2                    :1;
57:                    unsigned RA3                    :1;
58:                    unsigned RA4                    :1;
59:                    unsigned RA5                    :1;
60:                    unsigned RA6                    :1;
61:                    unsigned RA7                    :1;
62:                };
63:                struct {
64:                    unsigned AN0                    :1;
65:                    unsigned AN1                    :1;
66:                    unsigned AN2                    :1;
67:                    unsigned AN3                    :1;
68:                    unsigned T0CKI                  :1;
69:                    unsigned AN4                    :1;
70:                    unsigned OSC2                   :1;
71:                    unsigned OSC1                   :1;
72:                };
73:                struct {
74:                    unsigned                        :2;
75:                    unsigned VREFN                  :1;
76:                    unsigned VREFP                  :1;
77:                    unsigned                        :1;
78:                    unsigned SS                     :1;
79:                    unsigned CLKO                   :1;
80:                    unsigned CLKI                   :1;
81:                };
82:                struct {
83:                    unsigned                        :5;
84:                    unsigned NOT_SS                 :1;
85:                };
86:                struct {
87:                    unsigned                        :2;
88:                    unsigned CVREF                  :1;
89:                    unsigned                        :2;
90:                    unsigned nSS                    :1;
91:                };
92:                struct {
93:                    unsigned                        :5;
94:                    unsigned LVDIN                  :1;
95:                };
96:                struct {
97:                    unsigned                        :5;
98:                    unsigned HLVDIN                 :1;
99:                };
100:               struct {
101:                   unsigned                        :4;
102:                   unsigned C1OUT                  :1;
103:                   unsigned C2OUT                  :1;
104:               };
105:               struct {
106:                   unsigned                        :7;
107:                   unsigned RJPU                   :1;
108:               };
109:               struct {
110:                   unsigned ULPWUIN                :1;
111:               };
112:           } PORTAbits_t;
113:           extern volatile PORTAbits_t PORTAbits @ 0xF80;
114:           // bitfield macros
115:           #define _PORTA_RA0_POSN                                     0x0
116:           #define _PORTA_RA0_POSITION                                 0x0
117:           #define _PORTA_RA0_SIZE                                     0x1
118:           #define _PORTA_RA0_LENGTH                                   0x1
119:           #define _PORTA_RA0_MASK                                     0x1
120:           #define _PORTA_RA1_POSN                                     0x1
121:           #define _PORTA_RA1_POSITION                                 0x1
122:           #define _PORTA_RA1_SIZE                                     0x1
123:           #define _PORTA_RA1_LENGTH                                   0x1
124:           #define _PORTA_RA1_MASK                                     0x2
125:           #define _PORTA_RA2_POSN                                     0x2
126:           #define _PORTA_RA2_POSITION                                 0x2
127:           #define _PORTA_RA2_SIZE                                     0x1
128:           #define _PORTA_RA2_LENGTH                                   0x1
129:           #define _PORTA_RA2_MASK                                     0x4
130:           #define _PORTA_RA3_POSN                                     0x3
131:           #define _PORTA_RA3_POSITION                                 0x3
132:           #define _PORTA_RA3_SIZE                                     0x1
133:           #define _PORTA_RA3_LENGTH                                   0x1
134:           #define _PORTA_RA3_MASK                                     0x8
135:           #define _PORTA_RA4_POSN                                     0x4
136:           #define _PORTA_RA4_POSITION                                 0x4
137:           #define _PORTA_RA4_SIZE                                     0x1
138:           #define _PORTA_RA4_LENGTH                                   0x1
139:           #define _PORTA_RA4_MASK                                     0x10
140:           #define _PORTA_RA5_POSN                                     0x5
141:           #define _PORTA_RA5_POSITION                                 0x5
142:           #define _PORTA_RA5_SIZE                                     0x1
143:           #define _PORTA_RA5_LENGTH                                   0x1
144:           #define _PORTA_RA5_MASK                                     0x20
145:           #define _PORTA_RA6_POSN                                     0x6
146:           #define _PORTA_RA6_POSITION                                 0x6
147:           #define _PORTA_RA6_SIZE                                     0x1
148:           #define _PORTA_RA6_LENGTH                                   0x1
149:           #define _PORTA_RA6_MASK                                     0x40
150:           #define _PORTA_RA7_POSN                                     0x7
151:           #define _PORTA_RA7_POSITION                                 0x7
152:           #define _PORTA_RA7_SIZE                                     0x1
153:           #define _PORTA_RA7_LENGTH                                   0x1
154:           #define _PORTA_RA7_MASK                                     0x80
155:           #define _PORTA_AN0_POSN                                     0x0
156:           #define _PORTA_AN0_POSITION                                 0x0
157:           #define _PORTA_AN0_SIZE                                     0x1
158:           #define _PORTA_AN0_LENGTH                                   0x1
159:           #define _PORTA_AN0_MASK                                     0x1
160:           #define _PORTA_AN1_POSN                                     0x1
161:           #define _PORTA_AN1_POSITION                                 0x1
162:           #define _PORTA_AN1_SIZE                                     0x1
163:           #define _PORTA_AN1_LENGTH                                   0x1
164:           #define _PORTA_AN1_MASK                                     0x2
165:           #define _PORTA_AN2_POSN                                     0x2
166:           #define _PORTA_AN2_POSITION                                 0x2
167:           #define _PORTA_AN2_SIZE                                     0x1
168:           #define _PORTA_AN2_LENGTH                                   0x1
169:           #define _PORTA_AN2_MASK                                     0x4
170:           #define _PORTA_AN3_POSN                                     0x3
171:           #define _PORTA_AN3_POSITION                                 0x3
172:           #define _PORTA_AN3_SIZE                                     0x1
173:           #define _PORTA_AN3_LENGTH                                   0x1
174:           #define _PORTA_AN3_MASK                                     0x8
175:           #define _PORTA_T0CKI_POSN                                   0x4
176:           #define _PORTA_T0CKI_POSITION                               0x4
177:           #define _PORTA_T0CKI_SIZE                                   0x1
178:           #define _PORTA_T0CKI_LENGTH                                 0x1
179:           #define _PORTA_T0CKI_MASK                                   0x10
180:           #define _PORTA_AN4_POSN                                     0x5
181:           #define _PORTA_AN4_POSITION                                 0x5
182:           #define _PORTA_AN4_SIZE                                     0x1
183:           #define _PORTA_AN4_LENGTH                                   0x1
184:           #define _PORTA_AN4_MASK                                     0x20
185:           #define _PORTA_OSC2_POSN                                    0x6
186:           #define _PORTA_OSC2_POSITION                                0x6
187:           #define _PORTA_OSC2_SIZE                                    0x1
188:           #define _PORTA_OSC2_LENGTH                                  0x1
189:           #define _PORTA_OSC2_MASK                                    0x40
190:           #define _PORTA_OSC1_POSN                                    0x7
191:           #define _PORTA_OSC1_POSITION                                0x7
192:           #define _PORTA_OSC1_SIZE                                    0x1
193:           #define _PORTA_OSC1_LENGTH                                  0x1
194:           #define _PORTA_OSC1_MASK                                    0x80
195:           #define _PORTA_VREFN_POSN                                   0x2
196:           #define _PORTA_VREFN_POSITION                               0x2
197:           #define _PORTA_VREFN_SIZE                                   0x1
198:           #define _PORTA_VREFN_LENGTH                                 0x1
199:           #define _PORTA_VREFN_MASK                                   0x4
200:           #define _PORTA_VREFP_POSN                                   0x3
201:           #define _PORTA_VREFP_POSITION                               0x3
202:           #define _PORTA_VREFP_SIZE                                   0x1
203:           #define _PORTA_VREFP_LENGTH                                 0x1
204:           #define _PORTA_VREFP_MASK                                   0x8
205:           #define _PORTA_SS_POSN                                      0x5
206:           #define _PORTA_SS_POSITION                                  0x5
207:           #define _PORTA_SS_SIZE                                      0x1
208:           #define _PORTA_SS_LENGTH                                    0x1
209:           #define _PORTA_SS_MASK                                      0x20
210:           #define _PORTA_CLKO_POSN                                    0x6
211:           #define _PORTA_CLKO_POSITION                                0x6
212:           #define _PORTA_CLKO_SIZE                                    0x1
213:           #define _PORTA_CLKO_LENGTH                                  0x1
214:           #define _PORTA_CLKO_MASK                                    0x40
215:           #define _PORTA_CLKI_POSN                                    0x7
216:           #define _PORTA_CLKI_POSITION                                0x7
217:           #define _PORTA_CLKI_SIZE                                    0x1
218:           #define _PORTA_CLKI_LENGTH                                  0x1
219:           #define _PORTA_CLKI_MASK                                    0x80
220:           #define _PORTA_NOT_SS_POSN                                  0x5
221:           #define _PORTA_NOT_SS_POSITION                              0x5
222:           #define _PORTA_NOT_SS_SIZE                                  0x1
223:           #define _PORTA_NOT_SS_LENGTH                                0x1
224:           #define _PORTA_NOT_SS_MASK                                  0x20
225:           #define _PORTA_CVREF_POSN                                   0x2
226:           #define _PORTA_CVREF_POSITION                               0x2
227:           #define _PORTA_CVREF_SIZE                                   0x1
228:           #define _PORTA_CVREF_LENGTH                                 0x1
229:           #define _PORTA_CVREF_MASK                                   0x4
230:           #define _PORTA_nSS_POSN                                     0x5
231:           #define _PORTA_nSS_POSITION                                 0x5
232:           #define _PORTA_nSS_SIZE                                     0x1
233:           #define _PORTA_nSS_LENGTH                                   0x1
234:           #define _PORTA_nSS_MASK                                     0x20
235:           #define _PORTA_LVDIN_POSN                                   0x5
236:           #define _PORTA_LVDIN_POSITION                               0x5
237:           #define _PORTA_LVDIN_SIZE                                   0x1
238:           #define _PORTA_LVDIN_LENGTH                                 0x1
239:           #define _PORTA_LVDIN_MASK                                   0x20
240:           #define _PORTA_HLVDIN_POSN                                  0x5
241:           #define _PORTA_HLVDIN_POSITION                              0x5
242:           #define _PORTA_HLVDIN_SIZE                                  0x1
243:           #define _PORTA_HLVDIN_LENGTH                                0x1
244:           #define _PORTA_HLVDIN_MASK                                  0x20
245:           #define _PORTA_C1OUT_POSN                                   0x4
246:           #define _PORTA_C1OUT_POSITION                               0x4
247:           #define _PORTA_C1OUT_SIZE                                   0x1
248:           #define _PORTA_C1OUT_LENGTH                                 0x1
249:           #define _PORTA_C1OUT_MASK                                   0x10
250:           #define _PORTA_C2OUT_POSN                                   0x5
251:           #define _PORTA_C2OUT_POSITION                               0x5
252:           #define _PORTA_C2OUT_SIZE                                   0x1
253:           #define _PORTA_C2OUT_LENGTH                                 0x1
254:           #define _PORTA_C2OUT_MASK                                   0x20
255:           #define _PORTA_RJPU_POSN                                    0x7
256:           #define _PORTA_RJPU_POSITION                                0x7
257:           #define _PORTA_RJPU_SIZE                                    0x1
258:           #define _PORTA_RJPU_LENGTH                                  0x1
259:           #define _PORTA_RJPU_MASK                                    0x80
260:           #define _PORTA_ULPWUIN_POSN                                 0x0
261:           #define _PORTA_ULPWUIN_POSITION                             0x0
262:           #define _PORTA_ULPWUIN_SIZE                                 0x1
263:           #define _PORTA_ULPWUIN_LENGTH                               0x1
264:           #define _PORTA_ULPWUIN_MASK                                 0x1
265:           
266:           // Register: PORTB
267:           extern volatile unsigned char           PORTB               @ 0xF81;
268:           #ifndef _LIB_BUILD
269:           asm("PORTB equ 0F81h");
270:           #endif
271:           // bitfield definitions
272:           typedef union {
273:               struct {
274:                   unsigned RB0                    :1;
275:                   unsigned RB1                    :1;
276:                   unsigned RB2                    :1;
277:                   unsigned RB3                    :1;
278:                   unsigned RB4                    :1;
279:                   unsigned RB5                    :1;
280:                   unsigned RB6                    :1;
281:                   unsigned RB7                    :1;
282:               };
283:               struct {
284:                   unsigned INT0                   :1;
285:                   unsigned INT1                   :1;
286:                   unsigned INT2                   :1;
287:                   unsigned CCP2                   :1;
288:                   unsigned KBI0                   :1;
289:                   unsigned KBI1                   :1;
290:                   unsigned KBI2                   :1;
291:                   unsigned KBI3                   :1;
292:               };
293:               struct {
294:                   unsigned AN12                   :1;
295:                   unsigned AN10                   :1;
296:                   unsigned AN8                    :1;
297:                   unsigned AN9                    :1;
298:                   unsigned AN11                   :1;
299:                   unsigned PGM                    :1;
300:                   unsigned PGC                    :1;
301:                   unsigned PGD                    :1;
302:               };
303:               struct {
304:                   unsigned FLT0                   :1;
305:               };
306:               struct {
307:                   unsigned                        :3;
308:                   unsigned CCP2_PA2               :1;
309:               };
310:           } PORTBbits_t;
311:           extern volatile PORTBbits_t PORTBbits @ 0xF81;
312:           // bitfield macros
313:           #define _PORTB_RB0_POSN                                     0x0
314:           #define _PORTB_RB0_POSITION                                 0x0
315:           #define _PORTB_RB0_SIZE                                     0x1
316:           #define _PORTB_RB0_LENGTH                                   0x1
317:           #define _PORTB_RB0_MASK                                     0x1
318:           #define _PORTB_RB1_POSN                                     0x1
319:           #define _PORTB_RB1_POSITION                                 0x1
320:           #define _PORTB_RB1_SIZE                                     0x1
321:           #define _PORTB_RB1_LENGTH                                   0x1
322:           #define _PORTB_RB1_MASK                                     0x2
323:           #define _PORTB_RB2_POSN                                     0x2
324:           #define _PORTB_RB2_POSITION                                 0x2
325:           #define _PORTB_RB2_SIZE                                     0x1
326:           #define _PORTB_RB2_LENGTH                                   0x1
327:           #define _PORTB_RB2_MASK                                     0x4
328:           #define _PORTB_RB3_POSN                                     0x3
329:           #define _PORTB_RB3_POSITION                                 0x3
330:           #define _PORTB_RB3_SIZE                                     0x1
331:           #define _PORTB_RB3_LENGTH                                   0x1
332:           #define _PORTB_RB3_MASK                                     0x8
333:           #define _PORTB_RB4_POSN                                     0x4
334:           #define _PORTB_RB4_POSITION                                 0x4
335:           #define _PORTB_RB4_SIZE                                     0x1
336:           #define _PORTB_RB4_LENGTH                                   0x1
337:           #define _PORTB_RB4_MASK                                     0x10
338:           #define _PORTB_RB5_POSN                                     0x5
339:           #define _PORTB_RB5_POSITION                                 0x5
340:           #define _PORTB_RB5_SIZE                                     0x1
341:           #define _PORTB_RB5_LENGTH                                   0x1
342:           #define _PORTB_RB5_MASK                                     0x20
343:           #define _PORTB_RB6_POSN                                     0x6
344:           #define _PORTB_RB6_POSITION                                 0x6
345:           #define _PORTB_RB6_SIZE                                     0x1
346:           #define _PORTB_RB6_LENGTH                                   0x1
347:           #define _PORTB_RB6_MASK                                     0x40
348:           #define _PORTB_RB7_POSN                                     0x7
349:           #define _PORTB_RB7_POSITION                                 0x7
350:           #define _PORTB_RB7_SIZE                                     0x1
351:           #define _PORTB_RB7_LENGTH                                   0x1
352:           #define _PORTB_RB7_MASK                                     0x80
353:           #define _PORTB_INT0_POSN                                    0x0
354:           #define _PORTB_INT0_POSITION                                0x0
355:           #define _PORTB_INT0_SIZE                                    0x1
356:           #define _PORTB_INT0_LENGTH                                  0x1
357:           #define _PORTB_INT0_MASK                                    0x1
358:           #define _PORTB_INT1_POSN                                    0x1
359:           #define _PORTB_INT1_POSITION                                0x1
360:           #define _PORTB_INT1_SIZE                                    0x1
361:           #define _PORTB_INT1_LENGTH                                  0x1
362:           #define _PORTB_INT1_MASK                                    0x2
363:           #define _PORTB_INT2_POSN                                    0x2
364:           #define _PORTB_INT2_POSITION                                0x2
365:           #define _PORTB_INT2_SIZE                                    0x1
366:           #define _PORTB_INT2_LENGTH                                  0x1
367:           #define _PORTB_INT2_MASK                                    0x4
368:           #define _PORTB_CCP2_POSN                                    0x3
369:           #define _PORTB_CCP2_POSITION                                0x3
370:           #define _PORTB_CCP2_SIZE                                    0x1
371:           #define _PORTB_CCP2_LENGTH                                  0x1
372:           #define _PORTB_CCP2_MASK                                    0x8
373:           #define _PORTB_KBI0_POSN                                    0x4
374:           #define _PORTB_KBI0_POSITION                                0x4
375:           #define _PORTB_KBI0_SIZE                                    0x1
376:           #define _PORTB_KBI0_LENGTH                                  0x1
377:           #define _PORTB_KBI0_MASK                                    0x10
378:           #define _PORTB_KBI1_POSN                                    0x5
379:           #define _PORTB_KBI1_POSITION                                0x5
380:           #define _PORTB_KBI1_SIZE                                    0x1
381:           #define _PORTB_KBI1_LENGTH                                  0x1
382:           #define _PORTB_KBI1_MASK                                    0x20
383:           #define _PORTB_KBI2_POSN                                    0x6
384:           #define _PORTB_KBI2_POSITION                                0x6
385:           #define _PORTB_KBI2_SIZE                                    0x1
386:           #define _PORTB_KBI2_LENGTH                                  0x1
387:           #define _PORTB_KBI2_MASK                                    0x40
388:           #define _PORTB_KBI3_POSN                                    0x7
389:           #define _PORTB_KBI3_POSITION                                0x7
390:           #define _PORTB_KBI3_SIZE                                    0x1
391:           #define _PORTB_KBI3_LENGTH                                  0x1
392:           #define _PORTB_KBI3_MASK                                    0x80
393:           #define _PORTB_AN12_POSN                                    0x0
394:           #define _PORTB_AN12_POSITION                                0x0
395:           #define _PORTB_AN12_SIZE                                    0x1
396:           #define _PORTB_AN12_LENGTH                                  0x1
397:           #define _PORTB_AN12_MASK                                    0x1
398:           #define _PORTB_AN10_POSN                                    0x1
399:           #define _PORTB_AN10_POSITION                                0x1
400:           #define _PORTB_AN10_SIZE                                    0x1
401:           #define _PORTB_AN10_LENGTH                                  0x1
402:           #define _PORTB_AN10_MASK                                    0x2
403:           #define _PORTB_AN8_POSN                                     0x2
404:           #define _PORTB_AN8_POSITION                                 0x2
405:           #define _PORTB_AN8_SIZE                                     0x1
406:           #define _PORTB_AN8_LENGTH                                   0x1
407:           #define _PORTB_AN8_MASK                                     0x4
408:           #define _PORTB_AN9_POSN                                     0x3
409:           #define _PORTB_AN9_POSITION                                 0x3
410:           #define _PORTB_AN9_SIZE                                     0x1
411:           #define _PORTB_AN9_LENGTH                                   0x1
412:           #define _PORTB_AN9_MASK                                     0x8
413:           #define _PORTB_AN11_POSN                                    0x4
414:           #define _PORTB_AN11_POSITION                                0x4
415:           #define _PORTB_AN11_SIZE                                    0x1
416:           #define _PORTB_AN11_LENGTH                                  0x1
417:           #define _PORTB_AN11_MASK                                    0x10
418:           #define _PORTB_PGM_POSN                                     0x5
419:           #define _PORTB_PGM_POSITION                                 0x5
420:           #define _PORTB_PGM_SIZE                                     0x1
421:           #define _PORTB_PGM_LENGTH                                   0x1
422:           #define _PORTB_PGM_MASK                                     0x20
423:           #define _PORTB_PGC_POSN                                     0x6
424:           #define _PORTB_PGC_POSITION                                 0x6
425:           #define _PORTB_PGC_SIZE                                     0x1
426:           #define _PORTB_PGC_LENGTH                                   0x1
427:           #define _PORTB_PGC_MASK                                     0x40
428:           #define _PORTB_PGD_POSN                                     0x7
429:           #define _PORTB_PGD_POSITION                                 0x7
430:           #define _PORTB_PGD_SIZE                                     0x1
431:           #define _PORTB_PGD_LENGTH                                   0x1
432:           #define _PORTB_PGD_MASK                                     0x80
433:           #define _PORTB_FLT0_POSN                                    0x0
434:           #define _PORTB_FLT0_POSITION                                0x0
435:           #define _PORTB_FLT0_SIZE                                    0x1
436:           #define _PORTB_FLT0_LENGTH                                  0x1
437:           #define _PORTB_FLT0_MASK                                    0x1
438:           #define _PORTB_CCP2_PA2_POSN                                0x3
439:           #define _PORTB_CCP2_PA2_POSITION                            0x3
440:           #define _PORTB_CCP2_PA2_SIZE                                0x1
441:           #define _PORTB_CCP2_PA2_LENGTH                              0x1
442:           #define _PORTB_CCP2_PA2_MASK                                0x8
443:           
444:           // Register: PORTC
445:           extern volatile unsigned char           PORTC               @ 0xF82;
446:           #ifndef _LIB_BUILD
447:           asm("PORTC equ 0F82h");
448:           #endif
449:           // bitfield definitions
450:           typedef union {
451:               struct {
452:                   unsigned RC0                    :1;
453:                   unsigned RC1                    :1;
454:                   unsigned RC2                    :1;
455:                   unsigned RC3                    :1;
456:                   unsigned RC4                    :1;
457:                   unsigned RC5                    :1;
458:                   unsigned RC6                    :1;
459:                   unsigned RC7                    :1;
460:               };
461:               struct {
462:                   unsigned T1OSO                  :1;
463:                   unsigned T1OSI                  :1;
464:                   unsigned CCP1                   :1;
465:                   unsigned SCK                    :1;
466:                   unsigned SDI                    :1;
467:                   unsigned SDO                    :1;
468:                   unsigned TX                     :1;
469:                   unsigned RX                     :1;
470:               };
471:               struct {
472:                   unsigned T13CKI                 :1;
473:                   unsigned CCP2                   :1;
474:                   unsigned                        :1;
475:                   unsigned SCL                    :1;
476:                   unsigned SDA                    :1;
477:                   unsigned                        :1;
478:                   unsigned CK                     :1;
479:                   unsigned DT                     :1;
480:               };
481:               struct {
482:                   unsigned T1CKI                  :1;
483:                   unsigned                        :1;
484:                   unsigned P1A                    :1;
485:               };
486:               struct {
487:                   unsigned                        :2;
488:                   unsigned PA1                    :1;
489:               };
490:               struct {
491:                   unsigned                        :1;
492:                   unsigned PA2                    :1;
493:               };
494:           } PORTCbits_t;
495:           extern volatile PORTCbits_t PORTCbits @ 0xF82;
496:           // bitfield macros
497:           #define _PORTC_RC0_POSN                                     0x0
498:           #define _PORTC_RC0_POSITION                                 0x0
499:           #define _PORTC_RC0_SIZE                                     0x1
500:           #define _PORTC_RC0_LENGTH                                   0x1
501:           #define _PORTC_RC0_MASK                                     0x1
502:           #define _PORTC_RC1_POSN                                     0x1
503:           #define _PORTC_RC1_POSITION                                 0x1
504:           #define _PORTC_RC1_SIZE                                     0x1
505:           #define _PORTC_RC1_LENGTH                                   0x1
506:           #define _PORTC_RC1_MASK                                     0x2
507:           #define _PORTC_RC2_POSN                                     0x2
508:           #define _PORTC_RC2_POSITION                                 0x2
509:           #define _PORTC_RC2_SIZE                                     0x1
510:           #define _PORTC_RC2_LENGTH                                   0x1
511:           #define _PORTC_RC2_MASK                                     0x4
512:           #define _PORTC_RC3_POSN                                     0x3
513:           #define _PORTC_RC3_POSITION                                 0x3
514:           #define _PORTC_RC3_SIZE                                     0x1
515:           #define _PORTC_RC3_LENGTH                                   0x1
516:           #define _PORTC_RC3_MASK                                     0x8
517:           #define _PORTC_RC4_POSN                                     0x4
518:           #define _PORTC_RC4_POSITION                                 0x4
519:           #define _PORTC_RC4_SIZE                                     0x1
520:           #define _PORTC_RC4_LENGTH                                   0x1
521:           #define _PORTC_RC4_MASK                                     0x10
522:           #define _PORTC_RC5_POSN                                     0x5
523:           #define _PORTC_RC5_POSITION                                 0x5
524:           #define _PORTC_RC5_SIZE                                     0x1
525:           #define _PORTC_RC5_LENGTH                                   0x1
526:           #define _PORTC_RC5_MASK                                     0x20
527:           #define _PORTC_RC6_POSN                                     0x6
528:           #define _PORTC_RC6_POSITION                                 0x6
529:           #define _PORTC_RC6_SIZE                                     0x1
530:           #define _PORTC_RC6_LENGTH                                   0x1
531:           #define _PORTC_RC6_MASK                                     0x40
532:           #define _PORTC_RC7_POSN                                     0x7
533:           #define _PORTC_RC7_POSITION                                 0x7
534:           #define _PORTC_RC7_SIZE                                     0x1
535:           #define _PORTC_RC7_LENGTH                                   0x1
536:           #define _PORTC_RC7_MASK                                     0x80
537:           #define _PORTC_T1OSO_POSN                                   0x0
538:           #define _PORTC_T1OSO_POSITION                               0x0
539:           #define _PORTC_T1OSO_SIZE                                   0x1
540:           #define _PORTC_T1OSO_LENGTH                                 0x1
541:           #define _PORTC_T1OSO_MASK                                   0x1
542:           #define _PORTC_T1OSI_POSN                                   0x1
543:           #define _PORTC_T1OSI_POSITION                               0x1
544:           #define _PORTC_T1OSI_SIZE                                   0x1
545:           #define _PORTC_T1OSI_LENGTH                                 0x1
546:           #define _PORTC_T1OSI_MASK                                   0x2
547:           #define _PORTC_CCP1_POSN                                    0x2
548:           #define _PORTC_CCP1_POSITION                                0x2
549:           #define _PORTC_CCP1_SIZE                                    0x1
550:           #define _PORTC_CCP1_LENGTH                                  0x1
551:           #define _PORTC_CCP1_MASK                                    0x4
552:           #define _PORTC_SCK_POSN                                     0x3
553:           #define _PORTC_SCK_POSITION                                 0x3
554:           #define _PORTC_SCK_SIZE                                     0x1
555:           #define _PORTC_SCK_LENGTH                                   0x1
556:           #define _PORTC_SCK_MASK                                     0x8
557:           #define _PORTC_SDI_POSN                                     0x4
558:           #define _PORTC_SDI_POSITION                                 0x4
559:           #define _PORTC_SDI_SIZE                                     0x1
560:           #define _PORTC_SDI_LENGTH                                   0x1
561:           #define _PORTC_SDI_MASK                                     0x10
562:           #define _PORTC_SDO_POSN                                     0x5
563:           #define _PORTC_SDO_POSITION                                 0x5
564:           #define _PORTC_SDO_SIZE                                     0x1
565:           #define _PORTC_SDO_LENGTH                                   0x1
566:           #define _PORTC_SDO_MASK                                     0x20
567:           #define _PORTC_TX_POSN                                      0x6
568:           #define _PORTC_TX_POSITION                                  0x6
569:           #define _PORTC_TX_SIZE                                      0x1
570:           #define _PORTC_TX_LENGTH                                    0x1
571:           #define _PORTC_TX_MASK                                      0x40
572:           #define _PORTC_RX_POSN                                      0x7
573:           #define _PORTC_RX_POSITION                                  0x7
574:           #define _PORTC_RX_SIZE                                      0x1
575:           #define _PORTC_RX_LENGTH                                    0x1
576:           #define _PORTC_RX_MASK                                      0x80
577:           #define _PORTC_T13CKI_POSN                                  0x0
578:           #define _PORTC_T13CKI_POSITION                              0x0
579:           #define _PORTC_T13CKI_SIZE                                  0x1
580:           #define _PORTC_T13CKI_LENGTH                                0x1
581:           #define _PORTC_T13CKI_MASK                                  0x1
582:           #define _PORTC_CCP2_POSN                                    0x1
583:           #define _PORTC_CCP2_POSITION                                0x1
584:           #define _PORTC_CCP2_SIZE                                    0x1
585:           #define _PORTC_CCP2_LENGTH                                  0x1
586:           #define _PORTC_CCP2_MASK                                    0x2
587:           #define _PORTC_SCL_POSN                                     0x3
588:           #define _PORTC_SCL_POSITION                                 0x3
589:           #define _PORTC_SCL_SIZE                                     0x1
590:           #define _PORTC_SCL_LENGTH                                   0x1
591:           #define _PORTC_SCL_MASK                                     0x8
592:           #define _PORTC_SDA_POSN                                     0x4
593:           #define _PORTC_SDA_POSITION                                 0x4
594:           #define _PORTC_SDA_SIZE                                     0x1
595:           #define _PORTC_SDA_LENGTH                                   0x1
596:           #define _PORTC_SDA_MASK                                     0x10
597:           #define _PORTC_CK_POSN                                      0x6
598:           #define _PORTC_CK_POSITION                                  0x6
599:           #define _PORTC_CK_SIZE                                      0x1
600:           #define _PORTC_CK_LENGTH                                    0x1
601:           #define _PORTC_CK_MASK                                      0x40
602:           #define _PORTC_DT_POSN                                      0x7
603:           #define _PORTC_DT_POSITION                                  0x7
604:           #define _PORTC_DT_SIZE                                      0x1
605:           #define _PORTC_DT_LENGTH                                    0x1
606:           #define _PORTC_DT_MASK                                      0x80
607:           #define _PORTC_T1CKI_POSN                                   0x0
608:           #define _PORTC_T1CKI_POSITION                               0x0
609:           #define _PORTC_T1CKI_SIZE                                   0x1
610:           #define _PORTC_T1CKI_LENGTH                                 0x1
611:           #define _PORTC_T1CKI_MASK                                   0x1
612:           #define _PORTC_P1A_POSN                                     0x2
613:           #define _PORTC_P1A_POSITION                                 0x2
614:           #define _PORTC_P1A_SIZE                                     0x1
615:           #define _PORTC_P1A_LENGTH                                   0x1
616:           #define _PORTC_P1A_MASK                                     0x4
617:           #define _PORTC_PA1_POSN                                     0x2
618:           #define _PORTC_PA1_POSITION                                 0x2
619:           #define _PORTC_PA1_SIZE                                     0x1
620:           #define _PORTC_PA1_LENGTH                                   0x1
621:           #define _PORTC_PA1_MASK                                     0x4
622:           #define _PORTC_PA2_POSN                                     0x1
623:           #define _PORTC_PA2_POSITION                                 0x1
624:           #define _PORTC_PA2_SIZE                                     0x1
625:           #define _PORTC_PA2_LENGTH                                   0x1
626:           #define _PORTC_PA2_MASK                                     0x2
627:           
628:           // Register: PORTD
629:           extern volatile unsigned char           PORTD               @ 0xF83;
630:           #ifndef _LIB_BUILD
631:           asm("PORTD equ 0F83h");
632:           #endif
633:           // bitfield definitions
634:           typedef union {
635:               struct {
636:                   unsigned RD0                    :1;
637:                   unsigned RD1                    :1;
638:                   unsigned RD2                    :1;
639:                   unsigned RD3                    :1;
640:                   unsigned RD4                    :1;
641:                   unsigned RD5                    :1;
642:                   unsigned RD6                    :1;
643:                   unsigned RD7                    :1;
644:               };
645:               struct {
646:                   unsigned PSP0                   :1;
647:                   unsigned PSP1                   :1;
648:                   unsigned PSP2                   :1;
649:                   unsigned PSP3                   :1;
650:                   unsigned PSP4                   :1;
651:                   unsigned PSP5                   :1;
652:                   unsigned PSP6                   :1;
653:                   unsigned PSP7                   :1;
654:               };
655:               struct {
656:                   unsigned                        :5;
657:                   unsigned P1B                    :1;
658:                   unsigned P1C                    :1;
659:                   unsigned P1D                    :1;
660:               };
661:               struct {
662:                   unsigned                        :7;
663:                   unsigned SS2                    :1;
664:               };
665:           } PORTDbits_t;
666:           extern volatile PORTDbits_t PORTDbits @ 0xF83;
667:           // bitfield macros
668:           #define _PORTD_RD0_POSN                                     0x0
669:           #define _PORTD_RD0_POSITION                                 0x0
670:           #define _PORTD_RD0_SIZE                                     0x1
671:           #define _PORTD_RD0_LENGTH                                   0x1
672:           #define _PORTD_RD0_MASK                                     0x1
673:           #define _PORTD_RD1_POSN                                     0x1
674:           #define _PORTD_RD1_POSITION                                 0x1
675:           #define _PORTD_RD1_SIZE                                     0x1
676:           #define _PORTD_RD1_LENGTH                                   0x1
677:           #define _PORTD_RD1_MASK                                     0x2
678:           #define _PORTD_RD2_POSN                                     0x2
679:           #define _PORTD_RD2_POSITION                                 0x2
680:           #define _PORTD_RD2_SIZE                                     0x1
681:           #define _PORTD_RD2_LENGTH                                   0x1
682:           #define _PORTD_RD2_MASK                                     0x4
683:           #define _PORTD_RD3_POSN                                     0x3
684:           #define _PORTD_RD3_POSITION                                 0x3
685:           #define _PORTD_RD3_SIZE                                     0x1
686:           #define _PORTD_RD3_LENGTH                                   0x1
687:           #define _PORTD_RD3_MASK                                     0x8
688:           #define _PORTD_RD4_POSN                                     0x4
689:           #define _PORTD_RD4_POSITION                                 0x4
690:           #define _PORTD_RD4_SIZE                                     0x1
691:           #define _PORTD_RD4_LENGTH                                   0x1
692:           #define _PORTD_RD4_MASK                                     0x10
693:           #define _PORTD_RD5_POSN                                     0x5
694:           #define _PORTD_RD5_POSITION                                 0x5
695:           #define _PORTD_RD5_SIZE                                     0x1
696:           #define _PORTD_RD5_LENGTH                                   0x1
697:           #define _PORTD_RD5_MASK                                     0x20
698:           #define _PORTD_RD6_POSN                                     0x6
699:           #define _PORTD_RD6_POSITION                                 0x6
700:           #define _PORTD_RD6_SIZE                                     0x1
701:           #define _PORTD_RD6_LENGTH                                   0x1
702:           #define _PORTD_RD6_MASK                                     0x40
703:           #define _PORTD_RD7_POSN                                     0x7
704:           #define _PORTD_RD7_POSITION                                 0x7
705:           #define _PORTD_RD7_SIZE                                     0x1
706:           #define _PORTD_RD7_LENGTH                                   0x1
707:           #define _PORTD_RD7_MASK                                     0x80
708:           #define _PORTD_PSP0_POSN                                    0x0
709:           #define _PORTD_PSP0_POSITION                                0x0
710:           #define _PORTD_PSP0_SIZE                                    0x1
711:           #define _PORTD_PSP0_LENGTH                                  0x1
712:           #define _PORTD_PSP0_MASK                                    0x1
713:           #define _PORTD_PSP1_POSN                                    0x1
714:           #define _PORTD_PSP1_POSITION                                0x1
715:           #define _PORTD_PSP1_SIZE                                    0x1
716:           #define _PORTD_PSP1_LENGTH                                  0x1
717:           #define _PORTD_PSP1_MASK                                    0x2
718:           #define _PORTD_PSP2_POSN                                    0x2
719:           #define _PORTD_PSP2_POSITION                                0x2
720:           #define _PORTD_PSP2_SIZE                                    0x1
721:           #define _PORTD_PSP2_LENGTH                                  0x1
722:           #define _PORTD_PSP2_MASK                                    0x4
723:           #define _PORTD_PSP3_POSN                                    0x3
724:           #define _PORTD_PSP3_POSITION                                0x3
725:           #define _PORTD_PSP3_SIZE                                    0x1
726:           #define _PORTD_PSP3_LENGTH                                  0x1
727:           #define _PORTD_PSP3_MASK                                    0x8
728:           #define _PORTD_PSP4_POSN                                    0x4
729:           #define _PORTD_PSP4_POSITION                                0x4
730:           #define _PORTD_PSP4_SIZE                                    0x1
731:           #define _PORTD_PSP4_LENGTH                                  0x1
732:           #define _PORTD_PSP4_MASK                                    0x10
733:           #define _PORTD_PSP5_POSN                                    0x5
734:           #define _PORTD_PSP5_POSITION                                0x5
735:           #define _PORTD_PSP5_SIZE                                    0x1
736:           #define _PORTD_PSP5_LENGTH                                  0x1
737:           #define _PORTD_PSP5_MASK                                    0x20
738:           #define _PORTD_PSP6_POSN                                    0x6
739:           #define _PORTD_PSP6_POSITION                                0x6
740:           #define _PORTD_PSP6_SIZE                                    0x1
741:           #define _PORTD_PSP6_LENGTH                                  0x1
742:           #define _PORTD_PSP6_MASK                                    0x40
743:           #define _PORTD_PSP7_POSN                                    0x7
744:           #define _PORTD_PSP7_POSITION                                0x7
745:           #define _PORTD_PSP7_SIZE                                    0x1
746:           #define _PORTD_PSP7_LENGTH                                  0x1
747:           #define _PORTD_PSP7_MASK                                    0x80
748:           #define _PORTD_P1B_POSN                                     0x5
749:           #define _PORTD_P1B_POSITION                                 0x5
750:           #define _PORTD_P1B_SIZE                                     0x1
751:           #define _PORTD_P1B_LENGTH                                   0x1
752:           #define _PORTD_P1B_MASK                                     0x20
753:           #define _PORTD_P1C_POSN                                     0x6
754:           #define _PORTD_P1C_POSITION                                 0x6
755:           #define _PORTD_P1C_SIZE                                     0x1
756:           #define _PORTD_P1C_LENGTH                                   0x1
757:           #define _PORTD_P1C_MASK                                     0x40
758:           #define _PORTD_P1D_POSN                                     0x7
759:           #define _PORTD_P1D_POSITION                                 0x7
760:           #define _PORTD_P1D_SIZE                                     0x1
761:           #define _PORTD_P1D_LENGTH                                   0x1
762:           #define _PORTD_P1D_MASK                                     0x80
763:           #define _PORTD_SS2_POSN                                     0x7
764:           #define _PORTD_SS2_POSITION                                 0x7
765:           #define _PORTD_SS2_SIZE                                     0x1
766:           #define _PORTD_SS2_LENGTH                                   0x1
767:           #define _PORTD_SS2_MASK                                     0x80
768:           
769:           // Register: PORTE
770:           extern volatile unsigned char           PORTE               @ 0xF84;
771:           #ifndef _LIB_BUILD
772:           asm("PORTE equ 0F84h");
773:           #endif
774:           // bitfield definitions
775:           typedef union {
776:               struct {
777:                   unsigned RE0                    :1;
778:                   unsigned RE1                    :1;
779:                   unsigned RE2                    :1;
780:                   unsigned RE3                    :1;
781:               };
782:               struct {
783:                   unsigned RD                     :1;
784:                   unsigned WR                     :1;
785:                   unsigned CS                     :1;
786:                   unsigned MCLR                   :1;
787:               };
788:               struct {
789:                   unsigned NOT_RD                 :1;
790:               };
791:               struct {
792:                   unsigned                        :1;
793:                   unsigned NOT_WR                 :1;
794:               };
795:               struct {
796:                   unsigned                        :2;
797:                   unsigned NOT_CS                 :1;
798:               };
799:               struct {
800:                   unsigned                        :3;
801:                   unsigned NOT_MCLR               :1;
802:               };
803:               struct {
804:                   unsigned nRD                    :1;
805:                   unsigned nWR                    :1;
806:                   unsigned nCS                    :1;
807:                   unsigned nMCLR                  :1;
808:               };
809:               struct {
810:                   unsigned AN5                    :1;
811:                   unsigned AN6                    :1;
812:                   unsigned AN7                    :1;
813:                   unsigned VPP                    :1;
814:               };
815:               struct {
816:                   unsigned                        :2;
817:                   unsigned CCP10                  :1;
818:               };
819:               struct {
820:                   unsigned                        :7;
821:                   unsigned CCP2E                  :1;
822:               };
823:               struct {
824:                   unsigned                        :6;
825:                   unsigned CCP6E                  :1;
826:               };
827:               struct {
828:                   unsigned                        :5;
829:                   unsigned CCP7E                  :1;
830:               };
831:               struct {
832:                   unsigned                        :4;
833:                   unsigned CCP8E                  :1;
834:               };
835:               struct {
836:                   unsigned                        :3;
837:                   unsigned CCP9E                  :1;
838:               };
839:               struct {
840:                   unsigned                        :7;
841:                   unsigned PA2E                   :1;
842:               };
843:               struct {
844:                   unsigned                        :6;
845:                   unsigned PB1E                   :1;
846:               };
847:               struct {
848:                   unsigned                        :2;
849:                   unsigned PB2                    :1;
850:               };
851:               struct {
852:                   unsigned                        :4;
853:                   unsigned PB3E                   :1;
854:               };
855:               struct {
856:                   unsigned                        :5;
857:                   unsigned PC1E                   :1;
858:               };
859:               struct {
860:                   unsigned                        :1;
861:                   unsigned PC2                    :1;
862:               };
863:               struct {
864:                   unsigned                        :3;
865:                   unsigned PC3E                   :1;
866:               };
867:               struct {
868:                   unsigned PD2                    :1;
869:               };
870:               struct {
871:                   unsigned RDE                    :1;
872:               };
873:               struct {
874:                   unsigned                        :4;
875:                   unsigned RE4                    :1;
876:               };
877:               struct {
878:                   unsigned                        :5;
879:                   unsigned RE5                    :1;
880:               };
881:               struct {
882:                   unsigned                        :6;
883:                   unsigned RE6                    :1;
884:               };
885:               struct {
886:                   unsigned                        :7;
887:                   unsigned RE7                    :1;
888:               };
889:               struct {
890:                   unsigned                        :1;
891:                   unsigned WRE                    :1;
892:               };
893:           } PORTEbits_t;
894:           extern volatile PORTEbits_t PORTEbits @ 0xF84;
895:           // bitfield macros
896:           #define _PORTE_RE0_POSN                                     0x0
897:           #define _PORTE_RE0_POSITION                                 0x0
898:           #define _PORTE_RE0_SIZE                                     0x1
899:           #define _PORTE_RE0_LENGTH                                   0x1
900:           #define _PORTE_RE0_MASK                                     0x1
901:           #define _PORTE_RE1_POSN                                     0x1
902:           #define _PORTE_RE1_POSITION                                 0x1
903:           #define _PORTE_RE1_SIZE                                     0x1
904:           #define _PORTE_RE1_LENGTH                                   0x1
905:           #define _PORTE_RE1_MASK                                     0x2
906:           #define _PORTE_RE2_POSN                                     0x2
907:           #define _PORTE_RE2_POSITION                                 0x2
908:           #define _PORTE_RE2_SIZE                                     0x1
909:           #define _PORTE_RE2_LENGTH                                   0x1
910:           #define _PORTE_RE2_MASK                                     0x4
911:           #define _PORTE_RE3_POSN                                     0x3
912:           #define _PORTE_RE3_POSITION                                 0x3
913:           #define _PORTE_RE3_SIZE                                     0x1
914:           #define _PORTE_RE3_LENGTH                                   0x1
915:           #define _PORTE_RE3_MASK                                     0x8
916:           #define _PORTE_RD_POSN                                      0x0
917:           #define _PORTE_RD_POSITION                                  0x0
918:           #define _PORTE_RD_SIZE                                      0x1
919:           #define _PORTE_RD_LENGTH                                    0x1
920:           #define _PORTE_RD_MASK                                      0x1
921:           #define _PORTE_WR_POSN                                      0x1
922:           #define _PORTE_WR_POSITION                                  0x1
923:           #define _PORTE_WR_SIZE                                      0x1
924:           #define _PORTE_WR_LENGTH                                    0x1
925:           #define _PORTE_WR_MASK                                      0x2
926:           #define _PORTE_CS_POSN                                      0x2
927:           #define _PORTE_CS_POSITION                                  0x2
928:           #define _PORTE_CS_SIZE                                      0x1
929:           #define _PORTE_CS_LENGTH                                    0x1
930:           #define _PORTE_CS_MASK                                      0x4
931:           #define _PORTE_MCLR_POSN                                    0x3
932:           #define _PORTE_MCLR_POSITION                                0x3
933:           #define _PORTE_MCLR_SIZE                                    0x1
934:           #define _PORTE_MCLR_LENGTH                                  0x1
935:           #define _PORTE_MCLR_MASK                                    0x8
936:           #define _PORTE_NOT_RD_POSN                                  0x0
937:           #define _PORTE_NOT_RD_POSITION                              0x0
938:           #define _PORTE_NOT_RD_SIZE                                  0x1
939:           #define _PORTE_NOT_RD_LENGTH                                0x1
940:           #define _PORTE_NOT_RD_MASK                                  0x1
941:           #define _PORTE_NOT_WR_POSN                                  0x1
942:           #define _PORTE_NOT_WR_POSITION                              0x1
943:           #define _PORTE_NOT_WR_SIZE                                  0x1
944:           #define _PORTE_NOT_WR_LENGTH                                0x1
945:           #define _PORTE_NOT_WR_MASK                                  0x2
946:           #define _PORTE_NOT_CS_POSN                                  0x2
947:           #define _PORTE_NOT_CS_POSITION                              0x2
948:           #define _PORTE_NOT_CS_SIZE                                  0x1
949:           #define _PORTE_NOT_CS_LENGTH                                0x1
950:           #define _PORTE_NOT_CS_MASK                                  0x4
951:           #define _PORTE_NOT_MCLR_POSN                                0x3
952:           #define _PORTE_NOT_MCLR_POSITION                            0x3
953:           #define _PORTE_NOT_MCLR_SIZE                                0x1
954:           #define _PORTE_NOT_MCLR_LENGTH                              0x1
955:           #define _PORTE_NOT_MCLR_MASK                                0x8
956:           #define _PORTE_nRD_POSN                                     0x0
957:           #define _PORTE_nRD_POSITION                                 0x0
958:           #define _PORTE_nRD_SIZE                                     0x1
959:           #define _PORTE_nRD_LENGTH                                   0x1
960:           #define _PORTE_nRD_MASK                                     0x1
961:           #define _PORTE_nWR_POSN                                     0x1
962:           #define _PORTE_nWR_POSITION                                 0x1
963:           #define _PORTE_nWR_SIZE                                     0x1
964:           #define _PORTE_nWR_LENGTH                                   0x1
965:           #define _PORTE_nWR_MASK                                     0x2
966:           #define _PORTE_nCS_POSN                                     0x2
967:           #define _PORTE_nCS_POSITION                                 0x2
968:           #define _PORTE_nCS_SIZE                                     0x1
969:           #define _PORTE_nCS_LENGTH                                   0x1
970:           #define _PORTE_nCS_MASK                                     0x4
971:           #define _PORTE_nMCLR_POSN                                   0x3
972:           #define _PORTE_nMCLR_POSITION                               0x3
973:           #define _PORTE_nMCLR_SIZE                                   0x1
974:           #define _PORTE_nMCLR_LENGTH                                 0x1
975:           #define _PORTE_nMCLR_MASK                                   0x8
976:           #define _PORTE_AN5_POSN                                     0x0
977:           #define _PORTE_AN5_POSITION                                 0x0
978:           #define _PORTE_AN5_SIZE                                     0x1
979:           #define _PORTE_AN5_LENGTH                                   0x1
980:           #define _PORTE_AN5_MASK                                     0x1
981:           #define _PORTE_AN6_POSN                                     0x1
982:           #define _PORTE_AN6_POSITION                                 0x1
983:           #define _PORTE_AN6_SIZE                                     0x1
984:           #define _PORTE_AN6_LENGTH                                   0x1
985:           #define _PORTE_AN6_MASK                                     0x2
986:           #define _PORTE_AN7_POSN                                     0x2
987:           #define _PORTE_AN7_POSITION                                 0x2
988:           #define _PORTE_AN7_SIZE                                     0x1
989:           #define _PORTE_AN7_LENGTH                                   0x1
990:           #define _PORTE_AN7_MASK                                     0x4
991:           #define _PORTE_VPP_POSN                                     0x3
992:           #define _PORTE_VPP_POSITION                                 0x3
993:           #define _PORTE_VPP_SIZE                                     0x1
994:           #define _PORTE_VPP_LENGTH                                   0x1
995:           #define _PORTE_VPP_MASK                                     0x8
996:           #define _PORTE_CCP10_POSN                                   0x2
997:           #define _PORTE_CCP10_POSITION                               0x2
998:           #define _PORTE_CCP10_SIZE                                   0x1
999:           #define _PORTE_CCP10_LENGTH                                 0x1
1000:          #define _PORTE_CCP10_MASK                                   0x4
1001:          #define _PORTE_CCP2E_POSN                                   0x7
1002:          #define _PORTE_CCP2E_POSITION                               0x7
1003:          #define _PORTE_CCP2E_SIZE                                   0x1
1004:          #define _PORTE_CCP2E_LENGTH                                 0x1
1005:          #define _PORTE_CCP2E_MASK                                   0x80
1006:          #define _PORTE_CCP6E_POSN                                   0x6
1007:          #define _PORTE_CCP6E_POSITION                               0x6
1008:          #define _PORTE_CCP6E_SIZE                                   0x1
1009:          #define _PORTE_CCP6E_LENGTH                                 0x1
1010:          #define _PORTE_CCP6E_MASK                                   0x40
1011:          #define _PORTE_CCP7E_POSN                                   0x5
1012:          #define _PORTE_CCP7E_POSITION                               0x5
1013:          #define _PORTE_CCP7E_SIZE                                   0x1
1014:          #define _PORTE_CCP7E_LENGTH                                 0x1
1015:          #define _PORTE_CCP7E_MASK                                   0x20
1016:          #define _PORTE_CCP8E_POSN                                   0x4
1017:          #define _PORTE_CCP8E_POSITION                               0x4
1018:          #define _PORTE_CCP8E_SIZE                                   0x1
1019:          #define _PORTE_CCP8E_LENGTH                                 0x1
1020:          #define _PORTE_CCP8E_MASK                                   0x10
1021:          #define _PORTE_CCP9E_POSN                                   0x3
1022:          #define _PORTE_CCP9E_POSITION                               0x3
1023:          #define _PORTE_CCP9E_SIZE                                   0x1
1024:          #define _PORTE_CCP9E_LENGTH                                 0x1
1025:          #define _PORTE_CCP9E_MASK                                   0x8
1026:          #define _PORTE_PA2E_POSN                                    0x7
1027:          #define _PORTE_PA2E_POSITION                                0x7
1028:          #define _PORTE_PA2E_SIZE                                    0x1
1029:          #define _PORTE_PA2E_LENGTH                                  0x1
1030:          #define _PORTE_PA2E_MASK                                    0x80
1031:          #define _PORTE_PB1E_POSN                                    0x6
1032:          #define _PORTE_PB1E_POSITION                                0x6
1033:          #define _PORTE_PB1E_SIZE                                    0x1
1034:          #define _PORTE_PB1E_LENGTH                                  0x1
1035:          #define _PORTE_PB1E_MASK                                    0x40
1036:          #define _PORTE_PB2_POSN                                     0x2
1037:          #define _PORTE_PB2_POSITION                                 0x2
1038:          #define _PORTE_PB2_SIZE                                     0x1
1039:          #define _PORTE_PB2_LENGTH                                   0x1
1040:          #define _PORTE_PB2_MASK                                     0x4
1041:          #define _PORTE_PB3E_POSN                                    0x4
1042:          #define _PORTE_PB3E_POSITION                                0x4
1043:          #define _PORTE_PB3E_SIZE                                    0x1
1044:          #define _PORTE_PB3E_LENGTH                                  0x1
1045:          #define _PORTE_PB3E_MASK                                    0x10
1046:          #define _PORTE_PC1E_POSN                                    0x5
1047:          #define _PORTE_PC1E_POSITION                                0x5
1048:          #define _PORTE_PC1E_SIZE                                    0x1
1049:          #define _PORTE_PC1E_LENGTH                                  0x1
1050:          #define _PORTE_PC1E_MASK                                    0x20
1051:          #define _PORTE_PC2_POSN                                     0x1
1052:          #define _PORTE_PC2_POSITION                                 0x1
1053:          #define _PORTE_PC2_SIZE                                     0x1
1054:          #define _PORTE_PC2_LENGTH                                   0x1
1055:          #define _PORTE_PC2_MASK                                     0x2
1056:          #define _PORTE_PC3E_POSN                                    0x3
1057:          #define _PORTE_PC3E_POSITION                                0x3
1058:          #define _PORTE_PC3E_SIZE                                    0x1
1059:          #define _PORTE_PC3E_LENGTH                                  0x1
1060:          #define _PORTE_PC3E_MASK                                    0x8
1061:          #define _PORTE_PD2_POSN                                     0x0
1062:          #define _PORTE_PD2_POSITION                                 0x0
1063:          #define _PORTE_PD2_SIZE                                     0x1
1064:          #define _PORTE_PD2_LENGTH                                   0x1
1065:          #define _PORTE_PD2_MASK                                     0x1
1066:          #define _PORTE_RDE_POSN                                     0x0
1067:          #define _PORTE_RDE_POSITION                                 0x0
1068:          #define _PORTE_RDE_SIZE                                     0x1
1069:          #define _PORTE_RDE_LENGTH                                   0x1
1070:          #define _PORTE_RDE_MASK                                     0x1
1071:          #define _PORTE_RE4_POSN                                     0x4
1072:          #define _PORTE_RE4_POSITION                                 0x4
1073:          #define _PORTE_RE4_SIZE                                     0x1
1074:          #define _PORTE_RE4_LENGTH                                   0x1
1075:          #define _PORTE_RE4_MASK                                     0x10
1076:          #define _PORTE_RE5_POSN                                     0x5
1077:          #define _PORTE_RE5_POSITION                                 0x5
1078:          #define _PORTE_RE5_SIZE                                     0x1
1079:          #define _PORTE_RE5_LENGTH                                   0x1
1080:          #define _PORTE_RE5_MASK                                     0x20
1081:          #define _PORTE_RE6_POSN                                     0x6
1082:          #define _PORTE_RE6_POSITION                                 0x6
1083:          #define _PORTE_RE6_SIZE                                     0x1
1084:          #define _PORTE_RE6_LENGTH                                   0x1
1085:          #define _PORTE_RE6_MASK                                     0x40
1086:          #define _PORTE_RE7_POSN                                     0x7
1087:          #define _PORTE_RE7_POSITION                                 0x7
1088:          #define _PORTE_RE7_SIZE                                     0x1
1089:          #define _PORTE_RE7_LENGTH                                   0x1
1090:          #define _PORTE_RE7_MASK                                     0x80
1091:          #define _PORTE_WRE_POSN                                     0x1
1092:          #define _PORTE_WRE_POSITION                                 0x1
1093:          #define _PORTE_WRE_SIZE                                     0x1
1094:          #define _PORTE_WRE_LENGTH                                   0x1
1095:          #define _PORTE_WRE_MASK                                     0x2
1096:          
1097:          // Register: LATA
1098:          extern volatile unsigned char           LATA                @ 0xF89;
1099:          #ifndef _LIB_BUILD
1100:          asm("LATA equ 0F89h");
1101:          #endif
1102:          // bitfield definitions
1103:          typedef union {
1104:              struct {
1105:                  unsigned LATA0                  :1;
1106:                  unsigned LATA1                  :1;
1107:                  unsigned LATA2                  :1;
1108:                  unsigned LATA3                  :1;
1109:                  unsigned LATA4                  :1;
1110:                  unsigned LATA5                  :1;
1111:                  unsigned LATA6                  :1;
1112:                  unsigned LATA7                  :1;
1113:              };
1114:              struct {
1115:                  unsigned LA0                    :1;
1116:              };
1117:              struct {
1118:                  unsigned                        :1;
1119:                  unsigned LA1                    :1;
1120:              };
1121:              struct {
1122:                  unsigned                        :2;
1123:                  unsigned LA2                    :1;
1124:              };
1125:              struct {
1126:                  unsigned                        :3;
1127:                  unsigned LA3                    :1;
1128:              };
1129:              struct {
1130:                  unsigned                        :4;
1131:                  unsigned LA4                    :1;
1132:              };
1133:              struct {
1134:                  unsigned                        :5;
1135:                  unsigned LA5                    :1;
1136:              };
1137:              struct {
1138:                  unsigned                        :6;
1139:                  unsigned LA6                    :1;
1140:              };
1141:              struct {
1142:                  unsigned                        :7;
1143:                  unsigned LA7                    :1;
1144:              };
1145:          } LATAbits_t;
1146:          extern volatile LATAbits_t LATAbits @ 0xF89;
1147:          // bitfield macros
1148:          #define _LATA_LATA0_POSN                                    0x0
1149:          #define _LATA_LATA0_POSITION                                0x0
1150:          #define _LATA_LATA0_SIZE                                    0x1
1151:          #define _LATA_LATA0_LENGTH                                  0x1
1152:          #define _LATA_LATA0_MASK                                    0x1
1153:          #define _LATA_LATA1_POSN                                    0x1
1154:          #define _LATA_LATA1_POSITION                                0x1
1155:          #define _LATA_LATA1_SIZE                                    0x1
1156:          #define _LATA_LATA1_LENGTH                                  0x1
1157:          #define _LATA_LATA1_MASK                                    0x2
1158:          #define _LATA_LATA2_POSN                                    0x2
1159:          #define _LATA_LATA2_POSITION                                0x2
1160:          #define _LATA_LATA2_SIZE                                    0x1
1161:          #define _LATA_LATA2_LENGTH                                  0x1
1162:          #define _LATA_LATA2_MASK                                    0x4
1163:          #define _LATA_LATA3_POSN                                    0x3
1164:          #define _LATA_LATA3_POSITION                                0x3
1165:          #define _LATA_LATA3_SIZE                                    0x1
1166:          #define _LATA_LATA3_LENGTH                                  0x1
1167:          #define _LATA_LATA3_MASK                                    0x8
1168:          #define _LATA_LATA4_POSN                                    0x4
1169:          #define _LATA_LATA4_POSITION                                0x4
1170:          #define _LATA_LATA4_SIZE                                    0x1
1171:          #define _LATA_LATA4_LENGTH                                  0x1
1172:          #define _LATA_LATA4_MASK                                    0x10
1173:          #define _LATA_LATA5_POSN                                    0x5
1174:          #define _LATA_LATA5_POSITION                                0x5
1175:          #define _LATA_LATA5_SIZE                                    0x1
1176:          #define _LATA_LATA5_LENGTH                                  0x1
1177:          #define _LATA_LATA5_MASK                                    0x20
1178:          #define _LATA_LATA6_POSN                                    0x6
1179:          #define _LATA_LATA6_POSITION                                0x6
1180:          #define _LATA_LATA6_SIZE                                    0x1
1181:          #define _LATA_LATA6_LENGTH                                  0x1
1182:          #define _LATA_LATA6_MASK                                    0x40
1183:          #define _LATA_LATA7_POSN                                    0x7
1184:          #define _LATA_LATA7_POSITION                                0x7
1185:          #define _LATA_LATA7_SIZE                                    0x1
1186:          #define _LATA_LATA7_LENGTH                                  0x1
1187:          #define _LATA_LATA7_MASK                                    0x80
1188:          #define _LATA_LA0_POSN                                      0x0
1189:          #define _LATA_LA0_POSITION                                  0x0
1190:          #define _LATA_LA0_SIZE                                      0x1
1191:          #define _LATA_LA0_LENGTH                                    0x1
1192:          #define _LATA_LA0_MASK                                      0x1
1193:          #define _LATA_LA1_POSN                                      0x1
1194:          #define _LATA_LA1_POSITION                                  0x1
1195:          #define _LATA_LA1_SIZE                                      0x1
1196:          #define _LATA_LA1_LENGTH                                    0x1
1197:          #define _LATA_LA1_MASK                                      0x2
1198:          #define _LATA_LA2_POSN                                      0x2
1199:          #define _LATA_LA2_POSITION                                  0x2
1200:          #define _LATA_LA2_SIZE                                      0x1
1201:          #define _LATA_LA2_LENGTH                                    0x1
1202:          #define _LATA_LA2_MASK                                      0x4
1203:          #define _LATA_LA3_POSN                                      0x3
1204:          #define _LATA_LA3_POSITION                                  0x3
1205:          #define _LATA_LA3_SIZE                                      0x1
1206:          #define _LATA_LA3_LENGTH                                    0x1
1207:          #define _LATA_LA3_MASK                                      0x8
1208:          #define _LATA_LA4_POSN                                      0x4
1209:          #define _LATA_LA4_POSITION                                  0x4
1210:          #define _LATA_LA4_SIZE                                      0x1
1211:          #define _LATA_LA4_LENGTH                                    0x1
1212:          #define _LATA_LA4_MASK                                      0x10
1213:          #define _LATA_LA5_POSN                                      0x5
1214:          #define _LATA_LA5_POSITION                                  0x5
1215:          #define _LATA_LA5_SIZE                                      0x1
1216:          #define _LATA_LA5_LENGTH                                    0x1
1217:          #define _LATA_LA5_MASK                                      0x20
1218:          #define _LATA_LA6_POSN                                      0x6
1219:          #define _LATA_LA6_POSITION                                  0x6
1220:          #define _LATA_LA6_SIZE                                      0x1
1221:          #define _LATA_LA6_LENGTH                                    0x1
1222:          #define _LATA_LA6_MASK                                      0x40
1223:          #define _LATA_LA7_POSN                                      0x7
1224:          #define _LATA_LA7_POSITION                                  0x7
1225:          #define _LATA_LA7_SIZE                                      0x1
1226:          #define _LATA_LA7_LENGTH                                    0x1
1227:          #define _LATA_LA7_MASK                                      0x80
1228:          
1229:          // Register: LATB
1230:          extern volatile unsigned char           LATB                @ 0xF8A;
1231:          #ifndef _LIB_BUILD
1232:          asm("LATB equ 0F8Ah");
1233:          #endif
1234:          // bitfield definitions
1235:          typedef union {
1236:              struct {
1237:                  unsigned LATB0                  :1;
1238:                  unsigned LATB1                  :1;
1239:                  unsigned LATB2                  :1;
1240:                  unsigned LATB3                  :1;
1241:                  unsigned LATB4                  :1;
1242:                  unsigned LATB5                  :1;
1243:                  unsigned LATB6                  :1;
1244:                  unsigned LATB7                  :1;
1245:              };
1246:              struct {
1247:                  unsigned LB0                    :1;
1248:              };
1249:              struct {
1250:                  unsigned                        :1;
1251:                  unsigned LB1                    :1;
1252:              };
1253:              struct {
1254:                  unsigned                        :2;
1255:                  unsigned LB2                    :1;
1256:              };
1257:              struct {
1258:                  unsigned                        :3;
1259:                  unsigned LB3                    :1;
1260:              };
1261:              struct {
1262:                  unsigned                        :4;
1263:                  unsigned LB4                    :1;
1264:              };
1265:              struct {
1266:                  unsigned                        :5;
1267:                  unsigned LB5                    :1;
1268:              };
1269:              struct {
1270:                  unsigned                        :6;
1271:                  unsigned LB6                    :1;
1272:              };
1273:              struct {
1274:                  unsigned                        :7;
1275:                  unsigned LB7                    :1;
1276:              };
1277:          } LATBbits_t;
1278:          extern volatile LATBbits_t LATBbits @ 0xF8A;
1279:          // bitfield macros
1280:          #define _LATB_LATB0_POSN                                    0x0
1281:          #define _LATB_LATB0_POSITION                                0x0
1282:          #define _LATB_LATB0_SIZE                                    0x1
1283:          #define _LATB_LATB0_LENGTH                                  0x1
1284:          #define _LATB_LATB0_MASK                                    0x1
1285:          #define _LATB_LATB1_POSN                                    0x1
1286:          #define _LATB_LATB1_POSITION                                0x1
1287:          #define _LATB_LATB1_SIZE                                    0x1
1288:          #define _LATB_LATB1_LENGTH                                  0x1
1289:          #define _LATB_LATB1_MASK                                    0x2
1290:          #define _LATB_LATB2_POSN                                    0x2
1291:          #define _LATB_LATB2_POSITION                                0x2
1292:          #define _LATB_LATB2_SIZE                                    0x1
1293:          #define _LATB_LATB2_LENGTH                                  0x1
1294:          #define _LATB_LATB2_MASK                                    0x4
1295:          #define _LATB_LATB3_POSN                                    0x3
1296:          #define _LATB_LATB3_POSITION                                0x3
1297:          #define _LATB_LATB3_SIZE                                    0x1
1298:          #define _LATB_LATB3_LENGTH                                  0x1
1299:          #define _LATB_LATB3_MASK                                    0x8
1300:          #define _LATB_LATB4_POSN                                    0x4
1301:          #define _LATB_LATB4_POSITION                                0x4
1302:          #define _LATB_LATB4_SIZE                                    0x1
1303:          #define _LATB_LATB4_LENGTH                                  0x1
1304:          #define _LATB_LATB4_MASK                                    0x10
1305:          #define _LATB_LATB5_POSN                                    0x5
1306:          #define _LATB_LATB5_POSITION                                0x5
1307:          #define _LATB_LATB5_SIZE                                    0x1
1308:          #define _LATB_LATB5_LENGTH                                  0x1
1309:          #define _LATB_LATB5_MASK                                    0x20
1310:          #define _LATB_LATB6_POSN                                    0x6
1311:          #define _LATB_LATB6_POSITION                                0x6
1312:          #define _LATB_LATB6_SIZE                                    0x1
1313:          #define _LATB_LATB6_LENGTH                                  0x1
1314:          #define _LATB_LATB6_MASK                                    0x40
1315:          #define _LATB_LATB7_POSN                                    0x7
1316:          #define _LATB_LATB7_POSITION                                0x7
1317:          #define _LATB_LATB7_SIZE                                    0x1
1318:          #define _LATB_LATB7_LENGTH                                  0x1
1319:          #define _LATB_LATB7_MASK                                    0x80
1320:          #define _LATB_LB0_POSN                                      0x0
1321:          #define _LATB_LB0_POSITION                                  0x0
1322:          #define _LATB_LB0_SIZE                                      0x1
1323:          #define _LATB_LB0_LENGTH                                    0x1
1324:          #define _LATB_LB0_MASK                                      0x1
1325:          #define _LATB_LB1_POSN                                      0x1
1326:          #define _LATB_LB1_POSITION                                  0x1
1327:          #define _LATB_LB1_SIZE                                      0x1
1328:          #define _LATB_LB1_LENGTH                                    0x1
1329:          #define _LATB_LB1_MASK                                      0x2
1330:          #define _LATB_LB2_POSN                                      0x2
1331:          #define _LATB_LB2_POSITION                                  0x2
1332:          #define _LATB_LB2_SIZE                                      0x1
1333:          #define _LATB_LB2_LENGTH                                    0x1
1334:          #define _LATB_LB2_MASK                                      0x4
1335:          #define _LATB_LB3_POSN                                      0x3
1336:          #define _LATB_LB3_POSITION                                  0x3
1337:          #define _LATB_LB3_SIZE                                      0x1
1338:          #define _LATB_LB3_LENGTH                                    0x1
1339:          #define _LATB_LB3_MASK                                      0x8
1340:          #define _LATB_LB4_POSN                                      0x4
1341:          #define _LATB_LB4_POSITION                                  0x4
1342:          #define _LATB_LB4_SIZE                                      0x1
1343:          #define _LATB_LB4_LENGTH                                    0x1
1344:          #define _LATB_LB4_MASK                                      0x10
1345:          #define _LATB_LB5_POSN                                      0x5
1346:          #define _LATB_LB5_POSITION                                  0x5
1347:          #define _LATB_LB5_SIZE                                      0x1
1348:          #define _LATB_LB5_LENGTH                                    0x1
1349:          #define _LATB_LB5_MASK                                      0x20
1350:          #define _LATB_LB6_POSN                                      0x6
1351:          #define _LATB_LB6_POSITION                                  0x6
1352:          #define _LATB_LB6_SIZE                                      0x1
1353:          #define _LATB_LB6_LENGTH                                    0x1
1354:          #define _LATB_LB6_MASK                                      0x40
1355:          #define _LATB_LB7_POSN                                      0x7
1356:          #define _LATB_LB7_POSITION                                  0x7
1357:          #define _LATB_LB7_SIZE                                      0x1
1358:          #define _LATB_LB7_LENGTH                                    0x1
1359:          #define _LATB_LB7_MASK                                      0x80
1360:          
1361:          // Register: LATC
1362:          extern volatile unsigned char           LATC                @ 0xF8B;
1363:          #ifndef _LIB_BUILD
1364:          asm("LATC equ 0F8Bh");
1365:          #endif
1366:          // bitfield definitions
1367:          typedef union {
1368:              struct {
1369:                  unsigned LATC0                  :1;
1370:                  unsigned LATC1                  :1;
1371:                  unsigned LATC2                  :1;
1372:                  unsigned LATC3                  :1;
1373:                  unsigned LATC4                  :1;
1374:                  unsigned LATC5                  :1;
1375:                  unsigned LATC6                  :1;
1376:                  unsigned LATC7                  :1;
1377:              };
1378:              struct {
1379:                  unsigned LC0                    :1;
1380:              };
1381:              struct {
1382:                  unsigned                        :1;
1383:                  unsigned LC1                    :1;
1384:              };
1385:              struct {
1386:                  unsigned                        :2;
1387:                  unsigned LC2                    :1;
1388:              };
1389:              struct {
1390:                  unsigned                        :3;
1391:                  unsigned LC3                    :1;
1392:              };
1393:              struct {
1394:                  unsigned                        :4;
1395:                  unsigned LC4                    :1;
1396:              };
1397:              struct {
1398:                  unsigned                        :5;
1399:                  unsigned LC5                    :1;
1400:              };
1401:              struct {
1402:                  unsigned                        :6;
1403:                  unsigned LC6                    :1;
1404:              };
1405:              struct {
1406:                  unsigned                        :7;
1407:                  unsigned LC7                    :1;
1408:              };
1409:          } LATCbits_t;
1410:          extern volatile LATCbits_t LATCbits @ 0xF8B;
1411:          // bitfield macros
1412:          #define _LATC_LATC0_POSN                                    0x0
1413:          #define _LATC_LATC0_POSITION                                0x0
1414:          #define _LATC_LATC0_SIZE                                    0x1
1415:          #define _LATC_LATC0_LENGTH                                  0x1
1416:          #define _LATC_LATC0_MASK                                    0x1
1417:          #define _LATC_LATC1_POSN                                    0x1
1418:          #define _LATC_LATC1_POSITION                                0x1
1419:          #define _LATC_LATC1_SIZE                                    0x1
1420:          #define _LATC_LATC1_LENGTH                                  0x1
1421:          #define _LATC_LATC1_MASK                                    0x2
1422:          #define _LATC_LATC2_POSN                                    0x2
1423:          #define _LATC_LATC2_POSITION                                0x2
1424:          #define _LATC_LATC2_SIZE                                    0x1
1425:          #define _LATC_LATC2_LENGTH                                  0x1
1426:          #define _LATC_LATC2_MASK                                    0x4
1427:          #define _LATC_LATC3_POSN                                    0x3
1428:          #define _LATC_LATC3_POSITION                                0x3
1429:          #define _LATC_LATC3_SIZE                                    0x1
1430:          #define _LATC_LATC3_LENGTH                                  0x1
1431:          #define _LATC_LATC3_MASK                                    0x8
1432:          #define _LATC_LATC4_POSN                                    0x4
1433:          #define _LATC_LATC4_POSITION                                0x4
1434:          #define _LATC_LATC4_SIZE                                    0x1
1435:          #define _LATC_LATC4_LENGTH                                  0x1
1436:          #define _LATC_LATC4_MASK                                    0x10
1437:          #define _LATC_LATC5_POSN                                    0x5
1438:          #define _LATC_LATC5_POSITION                                0x5
1439:          #define _LATC_LATC5_SIZE                                    0x1
1440:          #define _LATC_LATC5_LENGTH                                  0x1
1441:          #define _LATC_LATC5_MASK                                    0x20
1442:          #define _LATC_LATC6_POSN                                    0x6
1443:          #define _LATC_LATC6_POSITION                                0x6
1444:          #define _LATC_LATC6_SIZE                                    0x1
1445:          #define _LATC_LATC6_LENGTH                                  0x1
1446:          #define _LATC_LATC6_MASK                                    0x40
1447:          #define _LATC_LATC7_POSN                                    0x7
1448:          #define _LATC_LATC7_POSITION                                0x7
1449:          #define _LATC_LATC7_SIZE                                    0x1
1450:          #define _LATC_LATC7_LENGTH                                  0x1
1451:          #define _LATC_LATC7_MASK                                    0x80
1452:          #define _LATC_LC0_POSN                                      0x0
1453:          #define _LATC_LC0_POSITION                                  0x0
1454:          #define _LATC_LC0_SIZE                                      0x1
1455:          #define _LATC_LC0_LENGTH                                    0x1
1456:          #define _LATC_LC0_MASK                                      0x1
1457:          #define _LATC_LC1_POSN                                      0x1
1458:          #define _LATC_LC1_POSITION                                  0x1
1459:          #define _LATC_LC1_SIZE                                      0x1
1460:          #define _LATC_LC1_LENGTH                                    0x1
1461:          #define _LATC_LC1_MASK                                      0x2
1462:          #define _LATC_LC2_POSN                                      0x2
1463:          #define _LATC_LC2_POSITION                                  0x2
1464:          #define _LATC_LC2_SIZE                                      0x1
1465:          #define _LATC_LC2_LENGTH                                    0x1
1466:          #define _LATC_LC2_MASK                                      0x4
1467:          #define _LATC_LC3_POSN                                      0x3
1468:          #define _LATC_LC3_POSITION                                  0x3
1469:          #define _LATC_LC3_SIZE                                      0x1
1470:          #define _LATC_LC3_LENGTH                                    0x1
1471:          #define _LATC_LC3_MASK                                      0x8
1472:          #define _LATC_LC4_POSN                                      0x4
1473:          #define _LATC_LC4_POSITION                                  0x4
1474:          #define _LATC_LC4_SIZE                                      0x1
1475:          #define _LATC_LC4_LENGTH                                    0x1
1476:          #define _LATC_LC4_MASK                                      0x10
1477:          #define _LATC_LC5_POSN                                      0x5
1478:          #define _LATC_LC5_POSITION                                  0x5
1479:          #define _LATC_LC5_SIZE                                      0x1
1480:          #define _LATC_LC5_LENGTH                                    0x1
1481:          #define _LATC_LC5_MASK                                      0x20
1482:          #define _LATC_LC6_POSN                                      0x6
1483:          #define _LATC_LC6_POSITION                                  0x6
1484:          #define _LATC_LC6_SIZE                                      0x1
1485:          #define _LATC_LC6_LENGTH                                    0x1
1486:          #define _LATC_LC6_MASK                                      0x40
1487:          #define _LATC_LC7_POSN                                      0x7
1488:          #define _LATC_LC7_POSITION                                  0x7
1489:          #define _LATC_LC7_SIZE                                      0x1
1490:          #define _LATC_LC7_LENGTH                                    0x1
1491:          #define _LATC_LC7_MASK                                      0x80
1492:          
1493:          // Register: LATD
1494:          extern volatile unsigned char           LATD                @ 0xF8C;
1495:          #ifndef _LIB_BUILD
1496:          asm("LATD equ 0F8Ch");
1497:          #endif
1498:          // bitfield definitions
1499:          typedef union {
1500:              struct {
1501:                  unsigned LATD0                  :1;
1502:                  unsigned LATD1                  :1;
1503:                  unsigned LATD2                  :1;
1504:                  unsigned LATD3                  :1;
1505:                  unsigned LATD4                  :1;
1506:                  unsigned LATD5                  :1;
1507:                  unsigned LATD6                  :1;
1508:                  unsigned LATD7                  :1;
1509:              };
1510:              struct {
1511:                  unsigned LD0                    :1;
1512:              };
1513:              struct {
1514:                  unsigned                        :1;
1515:                  unsigned LD1                    :1;
1516:              };
1517:              struct {
1518:                  unsigned                        :2;
1519:                  unsigned LD2                    :1;
1520:              };
1521:              struct {
1522:                  unsigned                        :3;
1523:                  unsigned LD3                    :1;
1524:              };
1525:              struct {
1526:                  unsigned                        :4;
1527:                  unsigned LD4                    :1;
1528:              };
1529:              struct {
1530:                  unsigned                        :5;
1531:                  unsigned LD5                    :1;
1532:              };
1533:              struct {
1534:                  unsigned                        :6;
1535:                  unsigned LD6                    :1;
1536:              };
1537:              struct {
1538:                  unsigned                        :7;
1539:                  unsigned LD7                    :1;
1540:              };
1541:          } LATDbits_t;
1542:          extern volatile LATDbits_t LATDbits @ 0xF8C;
1543:          // bitfield macros
1544:          #define _LATD_LATD0_POSN                                    0x0
1545:          #define _LATD_LATD0_POSITION                                0x0
1546:          #define _LATD_LATD0_SIZE                                    0x1
1547:          #define _LATD_LATD0_LENGTH                                  0x1
1548:          #define _LATD_LATD0_MASK                                    0x1
1549:          #define _LATD_LATD1_POSN                                    0x1
1550:          #define _LATD_LATD1_POSITION                                0x1
1551:          #define _LATD_LATD1_SIZE                                    0x1
1552:          #define _LATD_LATD1_LENGTH                                  0x1
1553:          #define _LATD_LATD1_MASK                                    0x2
1554:          #define _LATD_LATD2_POSN                                    0x2
1555:          #define _LATD_LATD2_POSITION                                0x2
1556:          #define _LATD_LATD2_SIZE                                    0x1
1557:          #define _LATD_LATD2_LENGTH                                  0x1
1558:          #define _LATD_LATD2_MASK                                    0x4
1559:          #define _LATD_LATD3_POSN                                    0x3
1560:          #define _LATD_LATD3_POSITION                                0x3
1561:          #define _LATD_LATD3_SIZE                                    0x1
1562:          #define _LATD_LATD3_LENGTH                                  0x1
1563:          #define _LATD_LATD3_MASK                                    0x8
1564:          #define _LATD_LATD4_POSN                                    0x4
1565:          #define _LATD_LATD4_POSITION                                0x4
1566:          #define _LATD_LATD4_SIZE                                    0x1
1567:          #define _LATD_LATD4_LENGTH                                  0x1
1568:          #define _LATD_LATD4_MASK                                    0x10
1569:          #define _LATD_LATD5_POSN                                    0x5
1570:          #define _LATD_LATD5_POSITION                                0x5
1571:          #define _LATD_LATD5_SIZE                                    0x1
1572:          #define _LATD_LATD5_LENGTH                                  0x1
1573:          #define _LATD_LATD5_MASK                                    0x20
1574:          #define _LATD_LATD6_POSN                                    0x6
1575:          #define _LATD_LATD6_POSITION                                0x6
1576:          #define _LATD_LATD6_SIZE                                    0x1
1577:          #define _LATD_LATD6_LENGTH                                  0x1
1578:          #define _LATD_LATD6_MASK                                    0x40
1579:          #define _LATD_LATD7_POSN                                    0x7
1580:          #define _LATD_LATD7_POSITION                                0x7
1581:          #define _LATD_LATD7_SIZE                                    0x1
1582:          #define _LATD_LATD7_LENGTH                                  0x1
1583:          #define _LATD_LATD7_MASK                                    0x80
1584:          #define _LATD_LD0_POSN                                      0x0
1585:          #define _LATD_LD0_POSITION                                  0x0
1586:          #define _LATD_LD0_SIZE                                      0x1
1587:          #define _LATD_LD0_LENGTH                                    0x1
1588:          #define _LATD_LD0_MASK                                      0x1
1589:          #define _LATD_LD1_POSN                                      0x1
1590:          #define _LATD_LD1_POSITION                                  0x1
1591:          #define _LATD_LD1_SIZE                                      0x1
1592:          #define _LATD_LD1_LENGTH                                    0x1
1593:          #define _LATD_LD1_MASK                                      0x2
1594:          #define _LATD_LD2_POSN                                      0x2
1595:          #define _LATD_LD2_POSITION                                  0x2
1596:          #define _LATD_LD2_SIZE                                      0x1
1597:          #define _LATD_LD2_LENGTH                                    0x1
1598:          #define _LATD_LD2_MASK                                      0x4
1599:          #define _LATD_LD3_POSN                                      0x3
1600:          #define _LATD_LD3_POSITION                                  0x3
1601:          #define _LATD_LD3_SIZE                                      0x1
1602:          #define _LATD_LD3_LENGTH                                    0x1
1603:          #define _LATD_LD3_MASK                                      0x8
1604:          #define _LATD_LD4_POSN                                      0x4
1605:          #define _LATD_LD4_POSITION                                  0x4
1606:          #define _LATD_LD4_SIZE                                      0x1
1607:          #define _LATD_LD4_LENGTH                                    0x1
1608:          #define _LATD_LD4_MASK                                      0x10
1609:          #define _LATD_LD5_POSN                                      0x5
1610:          #define _LATD_LD5_POSITION                                  0x5
1611:          #define _LATD_LD5_SIZE                                      0x1
1612:          #define _LATD_LD5_LENGTH                                    0x1
1613:          #define _LATD_LD5_MASK                                      0x20
1614:          #define _LATD_LD6_POSN                                      0x6
1615:          #define _LATD_LD6_POSITION                                  0x6
1616:          #define _LATD_LD6_SIZE                                      0x1
1617:          #define _LATD_LD6_LENGTH                                    0x1
1618:          #define _LATD_LD6_MASK                                      0x40
1619:          #define _LATD_LD7_POSN                                      0x7
1620:          #define _LATD_LD7_POSITION                                  0x7
1621:          #define _LATD_LD7_SIZE                                      0x1
1622:          #define _LATD_LD7_LENGTH                                    0x1
1623:          #define _LATD_LD7_MASK                                      0x80
1624:          
1625:          // Register: LATE
1626:          extern volatile unsigned char           LATE                @ 0xF8D;
1627:          #ifndef _LIB_BUILD
1628:          asm("LATE equ 0F8Dh");
1629:          #endif
1630:          // bitfield definitions
1631:          typedef union {
1632:              struct {
1633:                  unsigned LATE0                  :1;
1634:                  unsigned LATE1                  :1;
1635:                  unsigned LATE2                  :1;
1636:              };
1637:              struct {
1638:                  unsigned LE0                    :1;
1639:              };
1640:              struct {
1641:                  unsigned                        :1;
1642:                  unsigned LE1                    :1;
1643:              };
1644:              struct {
1645:                  unsigned                        :2;
1646:                  unsigned LE2                    :1;
1647:              };
1648:              struct {
1649:                  unsigned                        :3;
1650:                  unsigned LE3                    :1;
1651:              };
1652:              struct {
1653:                  unsigned                        :4;
1654:                  unsigned LE4                    :1;
1655:              };
1656:              struct {
1657:                  unsigned                        :5;
1658:                  unsigned LE5                    :1;
1659:              };
1660:              struct {
1661:                  unsigned                        :6;
1662:                  unsigned LE6                    :1;
1663:              };
1664:              struct {
1665:                  unsigned                        :7;
1666:                  unsigned LE7                    :1;
1667:              };
1668:          } LATEbits_t;
1669:          extern volatile LATEbits_t LATEbits @ 0xF8D;
1670:          // bitfield macros
1671:          #define _LATE_LATE0_POSN                                    0x0
1672:          #define _LATE_LATE0_POSITION                                0x0
1673:          #define _LATE_LATE0_SIZE                                    0x1
1674:          #define _LATE_LATE0_LENGTH                                  0x1
1675:          #define _LATE_LATE0_MASK                                    0x1
1676:          #define _LATE_LATE1_POSN                                    0x1
1677:          #define _LATE_LATE1_POSITION                                0x1
1678:          #define _LATE_LATE1_SIZE                                    0x1
1679:          #define _LATE_LATE1_LENGTH                                  0x1
1680:          #define _LATE_LATE1_MASK                                    0x2
1681:          #define _LATE_LATE2_POSN                                    0x2
1682:          #define _LATE_LATE2_POSITION                                0x2
1683:          #define _LATE_LATE2_SIZE                                    0x1
1684:          #define _LATE_LATE2_LENGTH                                  0x1
1685:          #define _LATE_LATE2_MASK                                    0x4
1686:          #define _LATE_LE0_POSN                                      0x0
1687:          #define _LATE_LE0_POSITION                                  0x0
1688:          #define _LATE_LE0_SIZE                                      0x1
1689:          #define _LATE_LE0_LENGTH                                    0x1
1690:          #define _LATE_LE0_MASK                                      0x1
1691:          #define _LATE_LE1_POSN                                      0x1
1692:          #define _LATE_LE1_POSITION                                  0x1
1693:          #define _LATE_LE1_SIZE                                      0x1
1694:          #define _LATE_LE1_LENGTH                                    0x1
1695:          #define _LATE_LE1_MASK                                      0x2
1696:          #define _LATE_LE2_POSN                                      0x2
1697:          #define _LATE_LE2_POSITION                                  0x2
1698:          #define _LATE_LE2_SIZE                                      0x1
1699:          #define _LATE_LE2_LENGTH                                    0x1
1700:          #define _LATE_LE2_MASK                                      0x4
1701:          #define _LATE_LE3_POSN                                      0x3
1702:          #define _LATE_LE3_POSITION                                  0x3
1703:          #define _LATE_LE3_SIZE                                      0x1
1704:          #define _LATE_LE3_LENGTH                                    0x1
1705:          #define _LATE_LE3_MASK                                      0x8
1706:          #define _LATE_LE4_POSN                                      0x4
1707:          #define _LATE_LE4_POSITION                                  0x4
1708:          #define _LATE_LE4_SIZE                                      0x1
1709:          #define _LATE_LE4_LENGTH                                    0x1
1710:          #define _LATE_LE4_MASK                                      0x10
1711:          #define _LATE_LE5_POSN                                      0x5
1712:          #define _LATE_LE5_POSITION                                  0x5
1713:          #define _LATE_LE5_SIZE                                      0x1
1714:          #define _LATE_LE5_LENGTH                                    0x1
1715:          #define _LATE_LE5_MASK                                      0x20
1716:          #define _LATE_LE6_POSN                                      0x6
1717:          #define _LATE_LE6_POSITION                                  0x6
1718:          #define _LATE_LE6_SIZE                                      0x1
1719:          #define _LATE_LE6_LENGTH                                    0x1
1720:          #define _LATE_LE6_MASK                                      0x40
1721:          #define _LATE_LE7_POSN                                      0x7
1722:          #define _LATE_LE7_POSITION                                  0x7
1723:          #define _LATE_LE7_SIZE                                      0x1
1724:          #define _LATE_LE7_LENGTH                                    0x1
1725:          #define _LATE_LE7_MASK                                      0x80
1726:          
1727:          // Register: TRISA
1728:          extern volatile unsigned char           TRISA               @ 0xF92;
1729:          #ifndef _LIB_BUILD
1730:          asm("TRISA equ 0F92h");
1731:          #endif
1732:          // aliases
1733:          extern volatile unsigned char           DDRA                @ 0xF92;
1734:          #ifndef _LIB_BUILD
1735:          asm("DDRA equ 0F92h");
1736:          #endif
1737:          // bitfield definitions
1738:          typedef union {
1739:              struct {
1740:                  unsigned TRISA0                 :1;
1741:                  unsigned TRISA1                 :1;
1742:                  unsigned TRISA2                 :1;
1743:                  unsigned TRISA3                 :1;
1744:                  unsigned TRISA4                 :1;
1745:                  unsigned TRISA5                 :1;
1746:                  unsigned TRISA6                 :1;
1747:                  unsigned TRISA7                 :1;
1748:              };
1749:              struct {
1750:                  unsigned RA0                    :1;
1751:                  unsigned RA1                    :1;
1752:                  unsigned RA2                    :1;
1753:                  unsigned RA3                    :1;
1754:                  unsigned RA4                    :1;
1755:                  unsigned RA5                    :1;
1756:                  unsigned RA6                    :1;
1757:                  unsigned RA7                    :1;
1758:              };
1759:          } TRISAbits_t;
1760:          extern volatile TRISAbits_t TRISAbits @ 0xF92;
1761:          // bitfield macros
1762:          #define _TRISA_TRISA0_POSN                                  0x0
1763:          #define _TRISA_TRISA0_POSITION                              0x0
1764:          #define _TRISA_TRISA0_SIZE                                  0x1
1765:          #define _TRISA_TRISA0_LENGTH                                0x1
1766:          #define _TRISA_TRISA0_MASK                                  0x1
1767:          #define _TRISA_TRISA1_POSN                                  0x1
1768:          #define _TRISA_TRISA1_POSITION                              0x1
1769:          #define _TRISA_TRISA1_SIZE                                  0x1
1770:          #define _TRISA_TRISA1_LENGTH                                0x1
1771:          #define _TRISA_TRISA1_MASK                                  0x2
1772:          #define _TRISA_TRISA2_POSN                                  0x2
1773:          #define _TRISA_TRISA2_POSITION                              0x2
1774:          #define _TRISA_TRISA2_SIZE                                  0x1
1775:          #define _TRISA_TRISA2_LENGTH                                0x1
1776:          #define _TRISA_TRISA2_MASK                                  0x4
1777:          #define _TRISA_TRISA3_POSN                                  0x3
1778:          #define _TRISA_TRISA3_POSITION                              0x3
1779:          #define _TRISA_TRISA3_SIZE                                  0x1
1780:          #define _TRISA_TRISA3_LENGTH                                0x1
1781:          #define _TRISA_TRISA3_MASK                                  0x8
1782:          #define _TRISA_TRISA4_POSN                                  0x4
1783:          #define _TRISA_TRISA4_POSITION                              0x4
1784:          #define _TRISA_TRISA4_SIZE                                  0x1
1785:          #define _TRISA_TRISA4_LENGTH                                0x1
1786:          #define _TRISA_TRISA4_MASK                                  0x10
1787:          #define _TRISA_TRISA5_POSN                                  0x5
1788:          #define _TRISA_TRISA5_POSITION                              0x5
1789:          #define _TRISA_TRISA5_SIZE                                  0x1
1790:          #define _TRISA_TRISA5_LENGTH                                0x1
1791:          #define _TRISA_TRISA5_MASK                                  0x20
1792:          #define _TRISA_TRISA6_POSN                                  0x6
1793:          #define _TRISA_TRISA6_POSITION                              0x6
1794:          #define _TRISA_TRISA6_SIZE                                  0x1
1795:          #define _TRISA_TRISA6_LENGTH                                0x1
1796:          #define _TRISA_TRISA6_MASK                                  0x40
1797:          #define _TRISA_TRISA7_POSN                                  0x7
1798:          #define _TRISA_TRISA7_POSITION                              0x7
1799:          #define _TRISA_TRISA7_SIZE                                  0x1
1800:          #define _TRISA_TRISA7_LENGTH                                0x1
1801:          #define _TRISA_TRISA7_MASK                                  0x80
1802:          #define _TRISA_RA0_POSN                                     0x0
1803:          #define _TRISA_RA0_POSITION                                 0x0
1804:          #define _TRISA_RA0_SIZE                                     0x1
1805:          #define _TRISA_RA0_LENGTH                                   0x1
1806:          #define _TRISA_RA0_MASK                                     0x1
1807:          #define _TRISA_RA1_POSN                                     0x1
1808:          #define _TRISA_RA1_POSITION                                 0x1
1809:          #define _TRISA_RA1_SIZE                                     0x1
1810:          #define _TRISA_RA1_LENGTH                                   0x1
1811:          #define _TRISA_RA1_MASK                                     0x2
1812:          #define _TRISA_RA2_POSN                                     0x2
1813:          #define _TRISA_RA2_POSITION                                 0x2
1814:          #define _TRISA_RA2_SIZE                                     0x1
1815:          #define _TRISA_RA2_LENGTH                                   0x1
1816:          #define _TRISA_RA2_MASK                                     0x4
1817:          #define _TRISA_RA3_POSN                                     0x3
1818:          #define _TRISA_RA3_POSITION                                 0x3
1819:          #define _TRISA_RA3_SIZE                                     0x1
1820:          #define _TRISA_RA3_LENGTH                                   0x1
1821:          #define _TRISA_RA3_MASK                                     0x8
1822:          #define _TRISA_RA4_POSN                                     0x4
1823:          #define _TRISA_RA4_POSITION                                 0x4
1824:          #define _TRISA_RA4_SIZE                                     0x1
1825:          #define _TRISA_RA4_LENGTH                                   0x1
1826:          #define _TRISA_RA4_MASK                                     0x10
1827:          #define _TRISA_RA5_POSN                                     0x5
1828:          #define _TRISA_RA5_POSITION                                 0x5
1829:          #define _TRISA_RA5_SIZE                                     0x1
1830:          #define _TRISA_RA5_LENGTH                                   0x1
1831:          #define _TRISA_RA5_MASK                                     0x20
1832:          #define _TRISA_RA6_POSN                                     0x6
1833:          #define _TRISA_RA6_POSITION                                 0x6
1834:          #define _TRISA_RA6_SIZE                                     0x1
1835:          #define _TRISA_RA6_LENGTH                                   0x1
1836:          #define _TRISA_RA6_MASK                                     0x40
1837:          #define _TRISA_RA7_POSN                                     0x7
1838:          #define _TRISA_RA7_POSITION                                 0x7
1839:          #define _TRISA_RA7_SIZE                                     0x1
1840:          #define _TRISA_RA7_LENGTH                                   0x1
1841:          #define _TRISA_RA7_MASK                                     0x80
1842:          // alias bitfield definitions
1843:          typedef union {
1844:              struct {
1845:                  unsigned TRISA0                 :1;
1846:                  unsigned TRISA1                 :1;
1847:                  unsigned TRISA2                 :1;
1848:                  unsigned TRISA3                 :1;
1849:                  unsigned TRISA4                 :1;
1850:                  unsigned TRISA5                 :1;
1851:                  unsigned TRISA6                 :1;
1852:                  unsigned TRISA7                 :1;
1853:              };
1854:              struct {
1855:                  unsigned RA0                    :1;
1856:                  unsigned RA1                    :1;
1857:                  unsigned RA2                    :1;
1858:                  unsigned RA3                    :1;
1859:                  unsigned RA4                    :1;
1860:                  unsigned RA5                    :1;
1861:                  unsigned RA6                    :1;
1862:                  unsigned RA7                    :1;
1863:              };
1864:          } DDRAbits_t;
1865:          extern volatile DDRAbits_t DDRAbits @ 0xF92;
1866:          // bitfield macros
1867:          #define _DDRA_TRISA0_POSN                                   0x0
1868:          #define _DDRA_TRISA0_POSITION                               0x0
1869:          #define _DDRA_TRISA0_SIZE                                   0x1
1870:          #define _DDRA_TRISA0_LENGTH                                 0x1
1871:          #define _DDRA_TRISA0_MASK                                   0x1
1872:          #define _DDRA_TRISA1_POSN                                   0x1
1873:          #define _DDRA_TRISA1_POSITION                               0x1
1874:          #define _DDRA_TRISA1_SIZE                                   0x1
1875:          #define _DDRA_TRISA1_LENGTH                                 0x1
1876:          #define _DDRA_TRISA1_MASK                                   0x2
1877:          #define _DDRA_TRISA2_POSN                                   0x2
1878:          #define _DDRA_TRISA2_POSITION                               0x2
1879:          #define _DDRA_TRISA2_SIZE                                   0x1
1880:          #define _DDRA_TRISA2_LENGTH                                 0x1
1881:          #define _DDRA_TRISA2_MASK                                   0x4
1882:          #define _DDRA_TRISA3_POSN                                   0x3
1883:          #define _DDRA_TRISA3_POSITION                               0x3
1884:          #define _DDRA_TRISA3_SIZE                                   0x1
1885:          #define _DDRA_TRISA3_LENGTH                                 0x1
1886:          #define _DDRA_TRISA3_MASK                                   0x8
1887:          #define _DDRA_TRISA4_POSN                                   0x4
1888:          #define _DDRA_TRISA4_POSITION                               0x4
1889:          #define _DDRA_TRISA4_SIZE                                   0x1
1890:          #define _DDRA_TRISA4_LENGTH                                 0x1
1891:          #define _DDRA_TRISA4_MASK                                   0x10
1892:          #define _DDRA_TRISA5_POSN                                   0x5
1893:          #define _DDRA_TRISA5_POSITION                               0x5
1894:          #define _DDRA_TRISA5_SIZE                                   0x1
1895:          #define _DDRA_TRISA5_LENGTH                                 0x1
1896:          #define _DDRA_TRISA5_MASK                                   0x20
1897:          #define _DDRA_TRISA6_POSN                                   0x6
1898:          #define _DDRA_TRISA6_POSITION                               0x6
1899:          #define _DDRA_TRISA6_SIZE                                   0x1
1900:          #define _DDRA_TRISA6_LENGTH                                 0x1
1901:          #define _DDRA_TRISA6_MASK                                   0x40
1902:          #define _DDRA_TRISA7_POSN                                   0x7
1903:          #define _DDRA_TRISA7_POSITION                               0x7
1904:          #define _DDRA_TRISA7_SIZE                                   0x1
1905:          #define _DDRA_TRISA7_LENGTH                                 0x1
1906:          #define _DDRA_TRISA7_MASK                                   0x80
1907:          #define _DDRA_RA0_POSN                                      0x0
1908:          #define _DDRA_RA0_POSITION                                  0x0
1909:          #define _DDRA_RA0_SIZE                                      0x1
1910:          #define _DDRA_RA0_LENGTH                                    0x1
1911:          #define _DDRA_RA0_MASK                                      0x1
1912:          #define _DDRA_RA1_POSN                                      0x1
1913:          #define _DDRA_RA1_POSITION                                  0x1
1914:          #define _DDRA_RA1_SIZE                                      0x1
1915:          #define _DDRA_RA1_LENGTH                                    0x1
1916:          #define _DDRA_RA1_MASK                                      0x2
1917:          #define _DDRA_RA2_POSN                                      0x2
1918:          #define _DDRA_RA2_POSITION                                  0x2
1919:          #define _DDRA_RA2_SIZE                                      0x1
1920:          #define _DDRA_RA2_LENGTH                                    0x1
1921:          #define _DDRA_RA2_MASK                                      0x4
1922:          #define _DDRA_RA3_POSN                                      0x3
1923:          #define _DDRA_RA3_POSITION                                  0x3
1924:          #define _DDRA_RA3_SIZE                                      0x1
1925:          #define _DDRA_RA3_LENGTH                                    0x1
1926:          #define _DDRA_RA3_MASK                                      0x8
1927:          #define _DDRA_RA4_POSN                                      0x4
1928:          #define _DDRA_RA4_POSITION                                  0x4
1929:          #define _DDRA_RA4_SIZE                                      0x1
1930:          #define _DDRA_RA4_LENGTH                                    0x1
1931:          #define _DDRA_RA4_MASK                                      0x10
1932:          #define _DDRA_RA5_POSN                                      0x5
1933:          #define _DDRA_RA5_POSITION                                  0x5
1934:          #define _DDRA_RA5_SIZE                                      0x1
1935:          #define _DDRA_RA5_LENGTH                                    0x1
1936:          #define _DDRA_RA5_MASK                                      0x20
1937:          #define _DDRA_RA6_POSN                                      0x6
1938:          #define _DDRA_RA6_POSITION                                  0x6
1939:          #define _DDRA_RA6_SIZE                                      0x1
1940:          #define _DDRA_RA6_LENGTH                                    0x1
1941:          #define _DDRA_RA6_MASK                                      0x40
1942:          #define _DDRA_RA7_POSN                                      0x7
1943:          #define _DDRA_RA7_POSITION                                  0x7
1944:          #define _DDRA_RA7_SIZE                                      0x1
1945:          #define _DDRA_RA7_LENGTH                                    0x1
1946:          #define _DDRA_RA7_MASK                                      0x80
1947:          
1948:          // Register: TRISB
1949:          extern volatile unsigned char           TRISB               @ 0xF93;
1950:          #ifndef _LIB_BUILD
1951:          asm("TRISB equ 0F93h");
1952:          #endif
1953:          // aliases
1954:          extern volatile unsigned char           DDRB                @ 0xF93;
1955:          #ifndef _LIB_BUILD
1956:          asm("DDRB equ 0F93h");
1957:          #endif
1958:          // bitfield definitions
1959:          typedef union {
1960:              struct {
1961:                  unsigned TRISB0                 :1;
1962:                  unsigned TRISB1                 :1;
1963:                  unsigned TRISB2                 :1;
1964:                  unsigned TRISB3                 :1;
1965:                  unsigned TRISB4                 :1;
1966:                  unsigned TRISB5                 :1;
1967:                  unsigned TRISB6                 :1;
1968:                  unsigned TRISB7                 :1;
1969:              };
1970:              struct {
1971:                  unsigned RB0                    :1;
1972:                  unsigned RB1                    :1;
1973:                  unsigned RB2                    :1;
1974:                  unsigned RB3                    :1;
1975:                  unsigned RB4                    :1;
1976:                  unsigned RB5                    :1;
1977:                  unsigned RB6                    :1;
1978:                  unsigned RB7                    :1;
1979:              };
1980:          } TRISBbits_t;
1981:          extern volatile TRISBbits_t TRISBbits @ 0xF93;
1982:          // bitfield macros
1983:          #define _TRISB_TRISB0_POSN                                  0x0
1984:          #define _TRISB_TRISB0_POSITION                              0x0
1985:          #define _TRISB_TRISB0_SIZE                                  0x1
1986:          #define _TRISB_TRISB0_LENGTH                                0x1
1987:          #define _TRISB_TRISB0_MASK                                  0x1
1988:          #define _TRISB_TRISB1_POSN                                  0x1
1989:          #define _TRISB_TRISB1_POSITION                              0x1
1990:          #define _TRISB_TRISB1_SIZE                                  0x1
1991:          #define _TRISB_TRISB1_LENGTH                                0x1
1992:          #define _TRISB_TRISB1_MASK                                  0x2
1993:          #define _TRISB_TRISB2_POSN                                  0x2
1994:          #define _TRISB_TRISB2_POSITION                              0x2
1995:          #define _TRISB_TRISB2_SIZE                                  0x1
1996:          #define _TRISB_TRISB2_LENGTH                                0x1
1997:          #define _TRISB_TRISB2_MASK                                  0x4
1998:          #define _TRISB_TRISB3_POSN                                  0x3
1999:          #define _TRISB_TRISB3_POSITION                              0x3
2000:          #define _TRISB_TRISB3_SIZE                                  0x1
2001:          #define _TRISB_TRISB3_LENGTH                                0x1
2002:          #define _TRISB_TRISB3_MASK                                  0x8
2003:          #define _TRISB_TRISB4_POSN                                  0x4
2004:          #define _TRISB_TRISB4_POSITION                              0x4
2005:          #define _TRISB_TRISB4_SIZE                                  0x1
2006:          #define _TRISB_TRISB4_LENGTH                                0x1
2007:          #define _TRISB_TRISB4_MASK                                  0x10
2008:          #define _TRISB_TRISB5_POSN                                  0x5
2009:          #define _TRISB_TRISB5_POSITION                              0x5
2010:          #define _TRISB_TRISB5_SIZE                                  0x1
2011:          #define _TRISB_TRISB5_LENGTH                                0x1
2012:          #define _TRISB_TRISB5_MASK                                  0x20
2013:          #define _TRISB_TRISB6_POSN                                  0x6
2014:          #define _TRISB_TRISB6_POSITION                              0x6
2015:          #define _TRISB_TRISB6_SIZE                                  0x1
2016:          #define _TRISB_TRISB6_LENGTH                                0x1
2017:          #define _TRISB_TRISB6_MASK                                  0x40
2018:          #define _TRISB_TRISB7_POSN                                  0x7
2019:          #define _TRISB_TRISB7_POSITION                              0x7
2020:          #define _TRISB_TRISB7_SIZE                                  0x1
2021:          #define _TRISB_TRISB7_LENGTH                                0x1
2022:          #define _TRISB_TRISB7_MASK                                  0x80
2023:          #define _TRISB_RB0_POSN                                     0x0
2024:          #define _TRISB_RB0_POSITION                                 0x0
2025:          #define _TRISB_RB0_SIZE                                     0x1
2026:          #define _TRISB_RB0_LENGTH                                   0x1
2027:          #define _TRISB_RB0_MASK                                     0x1
2028:          #define _TRISB_RB1_POSN                                     0x1
2029:          #define _TRISB_RB1_POSITION                                 0x1
2030:          #define _TRISB_RB1_SIZE                                     0x1
2031:          #define _TRISB_RB1_LENGTH                                   0x1
2032:          #define _TRISB_RB1_MASK                                     0x2
2033:          #define _TRISB_RB2_POSN                                     0x2
2034:          #define _TRISB_RB2_POSITION                                 0x2
2035:          #define _TRISB_RB2_SIZE                                     0x1
2036:          #define _TRISB_RB2_LENGTH                                   0x1
2037:          #define _TRISB_RB2_MASK                                     0x4
2038:          #define _TRISB_RB3_POSN                                     0x3
2039:          #define _TRISB_RB3_POSITION                                 0x3
2040:          #define _TRISB_RB3_SIZE                                     0x1
2041:          #define _TRISB_RB3_LENGTH                                   0x1
2042:          #define _TRISB_RB3_MASK                                     0x8
2043:          #define _TRISB_RB4_POSN                                     0x4
2044:          #define _TRISB_RB4_POSITION                                 0x4
2045:          #define _TRISB_RB4_SIZE                                     0x1
2046:          #define _TRISB_RB4_LENGTH                                   0x1
2047:          #define _TRISB_RB4_MASK                                     0x10
2048:          #define _TRISB_RB5_POSN                                     0x5
2049:          #define _TRISB_RB5_POSITION                                 0x5
2050:          #define _TRISB_RB5_SIZE                                     0x1
2051:          #define _TRISB_RB5_LENGTH                                   0x1
2052:          #define _TRISB_RB5_MASK                                     0x20
2053:          #define _TRISB_RB6_POSN                                     0x6
2054:          #define _TRISB_RB6_POSITION                                 0x6
2055:          #define _TRISB_RB6_SIZE                                     0x1
2056:          #define _TRISB_RB6_LENGTH                                   0x1
2057:          #define _TRISB_RB6_MASK                                     0x40
2058:          #define _TRISB_RB7_POSN                                     0x7
2059:          #define _TRISB_RB7_POSITION                                 0x7
2060:          #define _TRISB_RB7_SIZE                                     0x1
2061:          #define _TRISB_RB7_LENGTH                                   0x1
2062:          #define _TRISB_RB7_MASK                                     0x80
2063:          // alias bitfield definitions
2064:          typedef union {
2065:              struct {
2066:                  unsigned TRISB0                 :1;
2067:                  unsigned TRISB1                 :1;
2068:                  unsigned TRISB2                 :1;
2069:                  unsigned TRISB3                 :1;
2070:                  unsigned TRISB4                 :1;
2071:                  unsigned TRISB5                 :1;
2072:                  unsigned TRISB6                 :1;
2073:                  unsigned TRISB7                 :1;
2074:              };
2075:              struct {
2076:                  unsigned RB0                    :1;
2077:                  unsigned RB1                    :1;
2078:                  unsigned RB2                    :1;
2079:                  unsigned RB3                    :1;
2080:                  unsigned RB4                    :1;
2081:                  unsigned RB5                    :1;
2082:                  unsigned RB6                    :1;
2083:                  unsigned RB7                    :1;
2084:              };
2085:          } DDRBbits_t;
2086:          extern volatile DDRBbits_t DDRBbits @ 0xF93;
2087:          // bitfield macros
2088:          #define _DDRB_TRISB0_POSN                                   0x0
2089:          #define _DDRB_TRISB0_POSITION                               0x0
2090:          #define _DDRB_TRISB0_SIZE                                   0x1
2091:          #define _DDRB_TRISB0_LENGTH                                 0x1
2092:          #define _DDRB_TRISB0_MASK                                   0x1
2093:          #define _DDRB_TRISB1_POSN                                   0x1
2094:          #define _DDRB_TRISB1_POSITION                               0x1
2095:          #define _DDRB_TRISB1_SIZE                                   0x1
2096:          #define _DDRB_TRISB1_LENGTH                                 0x1
2097:          #define _DDRB_TRISB1_MASK                                   0x2
2098:          #define _DDRB_TRISB2_POSN                                   0x2
2099:          #define _DDRB_TRISB2_POSITION                               0x2
2100:          #define _DDRB_TRISB2_SIZE                                   0x1
2101:          #define _DDRB_TRISB2_LENGTH                                 0x1
2102:          #define _DDRB_TRISB2_MASK                                   0x4
2103:          #define _DDRB_TRISB3_POSN                                   0x3
2104:          #define _DDRB_TRISB3_POSITION                               0x3
2105:          #define _DDRB_TRISB3_SIZE                                   0x1
2106:          #define _DDRB_TRISB3_LENGTH                                 0x1
2107:          #define _DDRB_TRISB3_MASK                                   0x8
2108:          #define _DDRB_TRISB4_POSN                                   0x4
2109:          #define _DDRB_TRISB4_POSITION                               0x4
2110:          #define _DDRB_TRISB4_SIZE                                   0x1
2111:          #define _DDRB_TRISB4_LENGTH                                 0x1
2112:          #define _DDRB_TRISB4_MASK                                   0x10
2113:          #define _DDRB_TRISB5_POSN                                   0x5
2114:          #define _DDRB_TRISB5_POSITION                               0x5
2115:          #define _DDRB_TRISB5_SIZE                                   0x1
2116:          #define _DDRB_TRISB5_LENGTH                                 0x1
2117:          #define _DDRB_TRISB5_MASK                                   0x20
2118:          #define _DDRB_TRISB6_POSN                                   0x6
2119:          #define _DDRB_TRISB6_POSITION                               0x6
2120:          #define _DDRB_TRISB6_SIZE                                   0x1
2121:          #define _DDRB_TRISB6_LENGTH                                 0x1
2122:          #define _DDRB_TRISB6_MASK                                   0x40
2123:          #define _DDRB_TRISB7_POSN                                   0x7
2124:          #define _DDRB_TRISB7_POSITION                               0x7
2125:          #define _DDRB_TRISB7_SIZE                                   0x1
2126:          #define _DDRB_TRISB7_LENGTH                                 0x1
2127:          #define _DDRB_TRISB7_MASK                                   0x80
2128:          #define _DDRB_RB0_POSN                                      0x0
2129:          #define _DDRB_RB0_POSITION                                  0x0
2130:          #define _DDRB_RB0_SIZE                                      0x1
2131:          #define _DDRB_RB0_LENGTH                                    0x1
2132:          #define _DDRB_RB0_MASK                                      0x1
2133:          #define _DDRB_RB1_POSN                                      0x1
2134:          #define _DDRB_RB1_POSITION                                  0x1
2135:          #define _DDRB_RB1_SIZE                                      0x1
2136:          #define _DDRB_RB1_LENGTH                                    0x1
2137:          #define _DDRB_RB1_MASK                                      0x2
2138:          #define _DDRB_RB2_POSN                                      0x2
2139:          #define _DDRB_RB2_POSITION                                  0x2
2140:          #define _DDRB_RB2_SIZE                                      0x1
2141:          #define _DDRB_RB2_LENGTH                                    0x1
2142:          #define _DDRB_RB2_MASK                                      0x4
2143:          #define _DDRB_RB3_POSN                                      0x3
2144:          #define _DDRB_RB3_POSITION                                  0x3
2145:          #define _DDRB_RB3_SIZE                                      0x1
2146:          #define _DDRB_RB3_LENGTH                                    0x1
2147:          #define _DDRB_RB3_MASK                                      0x8
2148:          #define _DDRB_RB4_POSN                                      0x4
2149:          #define _DDRB_RB4_POSITION                                  0x4
2150:          #define _DDRB_RB4_SIZE                                      0x1
2151:          #define _DDRB_RB4_LENGTH                                    0x1
2152:          #define _DDRB_RB4_MASK                                      0x10
2153:          #define _DDRB_RB5_POSN                                      0x5
2154:          #define _DDRB_RB5_POSITION                                  0x5
2155:          #define _DDRB_RB5_SIZE                                      0x1
2156:          #define _DDRB_RB5_LENGTH                                    0x1
2157:          #define _DDRB_RB5_MASK                                      0x20
2158:          #define _DDRB_RB6_POSN                                      0x6
2159:          #define _DDRB_RB6_POSITION                                  0x6
2160:          #define _DDRB_RB6_SIZE                                      0x1
2161:          #define _DDRB_RB6_LENGTH                                    0x1
2162:          #define _DDRB_RB6_MASK                                      0x40
2163:          #define _DDRB_RB7_POSN                                      0x7
2164:          #define _DDRB_RB7_POSITION                                  0x7
2165:          #define _DDRB_RB7_SIZE                                      0x1
2166:          #define _DDRB_RB7_LENGTH                                    0x1
2167:          #define _DDRB_RB7_MASK                                      0x80
2168:          
2169:          // Register: TRISC
2170:          extern volatile unsigned char           TRISC               @ 0xF94;
2171:          #ifndef _LIB_BUILD
2172:          asm("TRISC equ 0F94h");
2173:          #endif
2174:          // aliases
2175:          extern volatile unsigned char           DDRC                @ 0xF94;
2176:          #ifndef _LIB_BUILD
2177:          asm("DDRC equ 0F94h");
2178:          #endif
2179:          // bitfield definitions
2180:          typedef union {
2181:              struct {
2182:                  unsigned TRISC0                 :1;
2183:                  unsigned TRISC1                 :1;
2184:                  unsigned TRISC2                 :1;
2185:                  unsigned TRISC3                 :1;
2186:                  unsigned TRISC4                 :1;
2187:                  unsigned TRISC5                 :1;
2188:                  unsigned TRISC6                 :1;
2189:                  unsigned TRISC7                 :1;
2190:              };
2191:              struct {
2192:                  unsigned RC0                    :1;
2193:                  unsigned RC1                    :1;
2194:                  unsigned RC2                    :1;
2195:                  unsigned RC3                    :1;
2196:                  unsigned RC4                    :1;
2197:                  unsigned RC5                    :1;
2198:                  unsigned RC6                    :1;
2199:                  unsigned RC7                    :1;
2200:              };
2201:          } TRISCbits_t;
2202:          extern volatile TRISCbits_t TRISCbits @ 0xF94;
2203:          // bitfield macros
2204:          #define _TRISC_TRISC0_POSN                                  0x0
2205:          #define _TRISC_TRISC0_POSITION                              0x0
2206:          #define _TRISC_TRISC0_SIZE                                  0x1
2207:          #define _TRISC_TRISC0_LENGTH                                0x1
2208:          #define _TRISC_TRISC0_MASK                                  0x1
2209:          #define _TRISC_TRISC1_POSN                                  0x1
2210:          #define _TRISC_TRISC1_POSITION                              0x1
2211:          #define _TRISC_TRISC1_SIZE                                  0x1
2212:          #define _TRISC_TRISC1_LENGTH                                0x1
2213:          #define _TRISC_TRISC1_MASK                                  0x2
2214:          #define _TRISC_TRISC2_POSN                                  0x2
2215:          #define _TRISC_TRISC2_POSITION                              0x2
2216:          #define _TRISC_TRISC2_SIZE                                  0x1
2217:          #define _TRISC_TRISC2_LENGTH                                0x1
2218:          #define _TRISC_TRISC2_MASK                                  0x4
2219:          #define _TRISC_TRISC3_POSN                                  0x3
2220:          #define _TRISC_TRISC3_POSITION                              0x3
2221:          #define _TRISC_TRISC3_SIZE                                  0x1
2222:          #define _TRISC_TRISC3_LENGTH                                0x1
2223:          #define _TRISC_TRISC3_MASK                                  0x8
2224:          #define _TRISC_TRISC4_POSN                                  0x4
2225:          #define _TRISC_TRISC4_POSITION                              0x4
2226:          #define _TRISC_TRISC4_SIZE                                  0x1
2227:          #define _TRISC_TRISC4_LENGTH                                0x1
2228:          #define _TRISC_TRISC4_MASK                                  0x10
2229:          #define _TRISC_TRISC5_POSN                                  0x5
2230:          #define _TRISC_TRISC5_POSITION                              0x5
2231:          #define _TRISC_TRISC5_SIZE                                  0x1
2232:          #define _TRISC_TRISC5_LENGTH                                0x1
2233:          #define _TRISC_TRISC5_MASK                                  0x20
2234:          #define _TRISC_TRISC6_POSN                                  0x6
2235:          #define _TRISC_TRISC6_POSITION                              0x6
2236:          #define _TRISC_TRISC6_SIZE                                  0x1
2237:          #define _TRISC_TRISC6_LENGTH                                0x1
2238:          #define _TRISC_TRISC6_MASK                                  0x40
2239:          #define _TRISC_TRISC7_POSN                                  0x7
2240:          #define _TRISC_TRISC7_POSITION                              0x7
2241:          #define _TRISC_TRISC7_SIZE                                  0x1
2242:          #define _TRISC_TRISC7_LENGTH                                0x1
2243:          #define _TRISC_TRISC7_MASK                                  0x80
2244:          #define _TRISC_RC0_POSN                                     0x0
2245:          #define _TRISC_RC0_POSITION                                 0x0
2246:          #define _TRISC_RC0_SIZE                                     0x1
2247:          #define _TRISC_RC0_LENGTH                                   0x1
2248:          #define _TRISC_RC0_MASK                                     0x1
2249:          #define _TRISC_RC1_POSN                                     0x1
2250:          #define _TRISC_RC1_POSITION                                 0x1
2251:          #define _TRISC_RC1_SIZE                                     0x1
2252:          #define _TRISC_RC1_LENGTH                                   0x1
2253:          #define _TRISC_RC1_MASK                                     0x2
2254:          #define _TRISC_RC2_POSN                                     0x2
2255:          #define _TRISC_RC2_POSITION                                 0x2
2256:          #define _TRISC_RC2_SIZE                                     0x1
2257:          #define _TRISC_RC2_LENGTH                                   0x1
2258:          #define _TRISC_RC2_MASK                                     0x4
2259:          #define _TRISC_RC3_POSN                                     0x3
2260:          #define _TRISC_RC3_POSITION                                 0x3
2261:          #define _TRISC_RC3_SIZE                                     0x1
2262:          #define _TRISC_RC3_LENGTH                                   0x1
2263:          #define _TRISC_RC3_MASK                                     0x8
2264:          #define _TRISC_RC4_POSN                                     0x4
2265:          #define _TRISC_RC4_POSITION                                 0x4
2266:          #define _TRISC_RC4_SIZE                                     0x1
2267:          #define _TRISC_RC4_LENGTH                                   0x1
2268:          #define _TRISC_RC4_MASK                                     0x10
2269:          #define _TRISC_RC5_POSN                                     0x5
2270:          #define _TRISC_RC5_POSITION                                 0x5
2271:          #define _TRISC_RC5_SIZE                                     0x1
2272:          #define _TRISC_RC5_LENGTH                                   0x1
2273:          #define _TRISC_RC5_MASK                                     0x20
2274:          #define _TRISC_RC6_POSN                                     0x6
2275:          #define _TRISC_RC6_POSITION                                 0x6
2276:          #define _TRISC_RC6_SIZE                                     0x1
2277:          #define _TRISC_RC6_LENGTH                                   0x1
2278:          #define _TRISC_RC6_MASK                                     0x40
2279:          #define _TRISC_RC7_POSN                                     0x7
2280:          #define _TRISC_RC7_POSITION                                 0x7
2281:          #define _TRISC_RC7_SIZE                                     0x1
2282:          #define _TRISC_RC7_LENGTH                                   0x1
2283:          #define _TRISC_RC7_MASK                                     0x80
2284:          // alias bitfield definitions
2285:          typedef union {
2286:              struct {
2287:                  unsigned TRISC0                 :1;
2288:                  unsigned TRISC1                 :1;
2289:                  unsigned TRISC2                 :1;
2290:                  unsigned TRISC3                 :1;
2291:                  unsigned TRISC4                 :1;
2292:                  unsigned TRISC5                 :1;
2293:                  unsigned TRISC6                 :1;
2294:                  unsigned TRISC7                 :1;
2295:              };
2296:              struct {
2297:                  unsigned RC0                    :1;
2298:                  unsigned RC1                    :1;
2299:                  unsigned RC2                    :1;
2300:                  unsigned RC3                    :1;
2301:                  unsigned RC4                    :1;
2302:                  unsigned RC5                    :1;
2303:                  unsigned RC6                    :1;
2304:                  unsigned RC7                    :1;
2305:              };
2306:          } DDRCbits_t;
2307:          extern volatile DDRCbits_t DDRCbits @ 0xF94;
2308:          // bitfield macros
2309:          #define _DDRC_TRISC0_POSN                                   0x0
2310:          #define _DDRC_TRISC0_POSITION                               0x0
2311:          #define _DDRC_TRISC0_SIZE                                   0x1
2312:          #define _DDRC_TRISC0_LENGTH                                 0x1
2313:          #define _DDRC_TRISC0_MASK                                   0x1
2314:          #define _DDRC_TRISC1_POSN                                   0x1
2315:          #define _DDRC_TRISC1_POSITION                               0x1
2316:          #define _DDRC_TRISC1_SIZE                                   0x1
2317:          #define _DDRC_TRISC1_LENGTH                                 0x1
2318:          #define _DDRC_TRISC1_MASK                                   0x2
2319:          #define _DDRC_TRISC2_POSN                                   0x2
2320:          #define _DDRC_TRISC2_POSITION                               0x2
2321:          #define _DDRC_TRISC2_SIZE                                   0x1
2322:          #define _DDRC_TRISC2_LENGTH                                 0x1
2323:          #define _DDRC_TRISC2_MASK                                   0x4
2324:          #define _DDRC_TRISC3_POSN                                   0x3
2325:          #define _DDRC_TRISC3_POSITION                               0x3
2326:          #define _DDRC_TRISC3_SIZE                                   0x1
2327:          #define _DDRC_TRISC3_LENGTH                                 0x1
2328:          #define _DDRC_TRISC3_MASK                                   0x8
2329:          #define _DDRC_TRISC4_POSN                                   0x4
2330:          #define _DDRC_TRISC4_POSITION                               0x4
2331:          #define _DDRC_TRISC4_SIZE                                   0x1
2332:          #define _DDRC_TRISC4_LENGTH                                 0x1
2333:          #define _DDRC_TRISC4_MASK                                   0x10
2334:          #define _DDRC_TRISC5_POSN                                   0x5
2335:          #define _DDRC_TRISC5_POSITION                               0x5
2336:          #define _DDRC_TRISC5_SIZE                                   0x1
2337:          #define _DDRC_TRISC5_LENGTH                                 0x1
2338:          #define _DDRC_TRISC5_MASK                                   0x20
2339:          #define _DDRC_TRISC6_POSN                                   0x6
2340:          #define _DDRC_TRISC6_POSITION                               0x6
2341:          #define _DDRC_TRISC6_SIZE                                   0x1
2342:          #define _DDRC_TRISC6_LENGTH                                 0x1
2343:          #define _DDRC_TRISC6_MASK                                   0x40
2344:          #define _DDRC_TRISC7_POSN                                   0x7
2345:          #define _DDRC_TRISC7_POSITION                               0x7
2346:          #define _DDRC_TRISC7_SIZE                                   0x1
2347:          #define _DDRC_TRISC7_LENGTH                                 0x1
2348:          #define _DDRC_TRISC7_MASK                                   0x80
2349:          #define _DDRC_RC0_POSN                                      0x0
2350:          #define _DDRC_RC0_POSITION                                  0x0
2351:          #define _DDRC_RC0_SIZE                                      0x1
2352:          #define _DDRC_RC0_LENGTH                                    0x1
2353:          #define _DDRC_RC0_MASK                                      0x1
2354:          #define _DDRC_RC1_POSN                                      0x1
2355:          #define _DDRC_RC1_POSITION                                  0x1
2356:          #define _DDRC_RC1_SIZE                                      0x1
2357:          #define _DDRC_RC1_LENGTH                                    0x1
2358:          #define _DDRC_RC1_MASK                                      0x2
2359:          #define _DDRC_RC2_POSN                                      0x2
2360:          #define _DDRC_RC2_POSITION                                  0x2
2361:          #define _DDRC_RC2_SIZE                                      0x1
2362:          #define _DDRC_RC2_LENGTH                                    0x1
2363:          #define _DDRC_RC2_MASK                                      0x4
2364:          #define _DDRC_RC3_POSN                                      0x3
2365:          #define _DDRC_RC3_POSITION                                  0x3
2366:          #define _DDRC_RC3_SIZE                                      0x1
2367:          #define _DDRC_RC3_LENGTH                                    0x1
2368:          #define _DDRC_RC3_MASK                                      0x8
2369:          #define _DDRC_RC4_POSN                                      0x4
2370:          #define _DDRC_RC4_POSITION                                  0x4
2371:          #define _DDRC_RC4_SIZE                                      0x1
2372:          #define _DDRC_RC4_LENGTH                                    0x1
2373:          #define _DDRC_RC4_MASK                                      0x10
2374:          #define _DDRC_RC5_POSN                                      0x5
2375:          #define _DDRC_RC5_POSITION                                  0x5
2376:          #define _DDRC_RC5_SIZE                                      0x1
2377:          #define _DDRC_RC5_LENGTH                                    0x1
2378:          #define _DDRC_RC5_MASK                                      0x20
2379:          #define _DDRC_RC6_POSN                                      0x6
2380:          #define _DDRC_RC6_POSITION                                  0x6
2381:          #define _DDRC_RC6_SIZE                                      0x1
2382:          #define _DDRC_RC6_LENGTH                                    0x1
2383:          #define _DDRC_RC6_MASK                                      0x40
2384:          #define _DDRC_RC7_POSN                                      0x7
2385:          #define _DDRC_RC7_POSITION                                  0x7
2386:          #define _DDRC_RC7_SIZE                                      0x1
2387:          #define _DDRC_RC7_LENGTH                                    0x1
2388:          #define _DDRC_RC7_MASK                                      0x80
2389:          
2390:          // Register: TRISD
2391:          extern volatile unsigned char           TRISD               @ 0xF95;
2392:          #ifndef _LIB_BUILD
2393:          asm("TRISD equ 0F95h");
2394:          #endif
2395:          // aliases
2396:          extern volatile unsigned char           DDRD                @ 0xF95;
2397:          #ifndef _LIB_BUILD
2398:          asm("DDRD equ 0F95h");
2399:          #endif
2400:          // bitfield definitions
2401:          typedef union {
2402:              struct {
2403:                  unsigned TRISD0                 :1;
2404:                  unsigned TRISD1                 :1;
2405:                  unsigned TRISD2                 :1;
2406:                  unsigned TRISD3                 :1;
2407:                  unsigned TRISD4                 :1;
2408:                  unsigned TRISD5                 :1;
2409:                  unsigned TRISD6                 :1;
2410:                  unsigned TRISD7                 :1;
2411:              };
2412:              struct {
2413:                  unsigned RD0                    :1;
2414:                  unsigned RD1                    :1;
2415:                  unsigned RD2                    :1;
2416:                  unsigned RD3                    :1;
2417:                  unsigned RD4                    :1;
2418:                  unsigned RD5                    :1;
2419:                  unsigned RD6                    :1;
2420:                  unsigned RD7                    :1;
2421:              };
2422:          } TRISDbits_t;
2423:          extern volatile TRISDbits_t TRISDbits @ 0xF95;
2424:          // bitfield macros
2425:          #define _TRISD_TRISD0_POSN                                  0x0
2426:          #define _TRISD_TRISD0_POSITION                              0x0
2427:          #define _TRISD_TRISD0_SIZE                                  0x1
2428:          #define _TRISD_TRISD0_LENGTH                                0x1
2429:          #define _TRISD_TRISD0_MASK                                  0x1
2430:          #define _TRISD_TRISD1_POSN                                  0x1
2431:          #define _TRISD_TRISD1_POSITION                              0x1
2432:          #define _TRISD_TRISD1_SIZE                                  0x1
2433:          #define _TRISD_TRISD1_LENGTH                                0x1
2434:          #define _TRISD_TRISD1_MASK                                  0x2
2435:          #define _TRISD_TRISD2_POSN                                  0x2
2436:          #define _TRISD_TRISD2_POSITION                              0x2
2437:          #define _TRISD_TRISD2_SIZE                                  0x1
2438:          #define _TRISD_TRISD2_LENGTH                                0x1
2439:          #define _TRISD_TRISD2_MASK                                  0x4
2440:          #define _TRISD_TRISD3_POSN                                  0x3
2441:          #define _TRISD_TRISD3_POSITION                              0x3
2442:          #define _TRISD_TRISD3_SIZE                                  0x1
2443:          #define _TRISD_TRISD3_LENGTH                                0x1
2444:          #define _TRISD_TRISD3_MASK                                  0x8
2445:          #define _TRISD_TRISD4_POSN                                  0x4
2446:          #define _TRISD_TRISD4_POSITION                              0x4
2447:          #define _TRISD_TRISD4_SIZE                                  0x1
2448:          #define _TRISD_TRISD4_LENGTH                                0x1
2449:          #define _TRISD_TRISD4_MASK                                  0x10
2450:          #define _TRISD_TRISD5_POSN                                  0x5
2451:          #define _TRISD_TRISD5_POSITION                              0x5
2452:          #define _TRISD_TRISD5_SIZE                                  0x1
2453:          #define _TRISD_TRISD5_LENGTH                                0x1
2454:          #define _TRISD_TRISD5_MASK                                  0x20
2455:          #define _TRISD_TRISD6_POSN                                  0x6
2456:          #define _TRISD_TRISD6_POSITION                              0x6
2457:          #define _TRISD_TRISD6_SIZE                                  0x1
2458:          #define _TRISD_TRISD6_LENGTH                                0x1
2459:          #define _TRISD_TRISD6_MASK                                  0x40
2460:          #define _TRISD_TRISD7_POSN                                  0x7
2461:          #define _TRISD_TRISD7_POSITION                              0x7
2462:          #define _TRISD_TRISD7_SIZE                                  0x1
2463:          #define _TRISD_TRISD7_LENGTH                                0x1
2464:          #define _TRISD_TRISD7_MASK                                  0x80
2465:          #define _TRISD_RD0_POSN                                     0x0
2466:          #define _TRISD_RD0_POSITION                                 0x0
2467:          #define _TRISD_RD0_SIZE                                     0x1
2468:          #define _TRISD_RD0_LENGTH                                   0x1
2469:          #define _TRISD_RD0_MASK                                     0x1
2470:          #define _TRISD_RD1_POSN                                     0x1
2471:          #define _TRISD_RD1_POSITION                                 0x1
2472:          #define _TRISD_RD1_SIZE                                     0x1
2473:          #define _TRISD_RD1_LENGTH                                   0x1
2474:          #define _TRISD_RD1_MASK                                     0x2
2475:          #define _TRISD_RD2_POSN                                     0x2
2476:          #define _TRISD_RD2_POSITION                                 0x2
2477:          #define _TRISD_RD2_SIZE                                     0x1
2478:          #define _TRISD_RD2_LENGTH                                   0x1
2479:          #define _TRISD_RD2_MASK                                     0x4
2480:          #define _TRISD_RD3_POSN                                     0x3
2481:          #define _TRISD_RD3_POSITION                                 0x3
2482:          #define _TRISD_RD3_SIZE                                     0x1
2483:          #define _TRISD_RD3_LENGTH                                   0x1
2484:          #define _TRISD_RD3_MASK                                     0x8
2485:          #define _TRISD_RD4_POSN                                     0x4
2486:          #define _TRISD_RD4_POSITION                                 0x4
2487:          #define _TRISD_RD4_SIZE                                     0x1
2488:          #define _TRISD_RD4_LENGTH                                   0x1
2489:          #define _TRISD_RD4_MASK                                     0x10
2490:          #define _TRISD_RD5_POSN                                     0x5
2491:          #define _TRISD_RD5_POSITION                                 0x5
2492:          #define _TRISD_RD5_SIZE                                     0x1
2493:          #define _TRISD_RD5_LENGTH                                   0x1
2494:          #define _TRISD_RD5_MASK                                     0x20
2495:          #define _TRISD_RD6_POSN                                     0x6
2496:          #define _TRISD_RD6_POSITION                                 0x6
2497:          #define _TRISD_RD6_SIZE                                     0x1
2498:          #define _TRISD_RD6_LENGTH                                   0x1
2499:          #define _TRISD_RD6_MASK                                     0x40
2500:          #define _TRISD_RD7_POSN                                     0x7
2501:          #define _TRISD_RD7_POSITION                                 0x7
2502:          #define _TRISD_RD7_SIZE                                     0x1
2503:          #define _TRISD_RD7_LENGTH                                   0x1
2504:          #define _TRISD_RD7_MASK                                     0x80
2505:          // alias bitfield definitions
2506:          typedef union {
2507:              struct {
2508:                  unsigned TRISD0                 :1;
2509:                  unsigned TRISD1                 :1;
2510:                  unsigned TRISD2                 :1;
2511:                  unsigned TRISD3                 :1;
2512:                  unsigned TRISD4                 :1;
2513:                  unsigned TRISD5                 :1;
2514:                  unsigned TRISD6                 :1;
2515:                  unsigned TRISD7                 :1;
2516:              };
2517:              struct {
2518:                  unsigned RD0                    :1;
2519:                  unsigned RD1                    :1;
2520:                  unsigned RD2                    :1;
2521:                  unsigned RD3                    :1;
2522:                  unsigned RD4                    :1;
2523:                  unsigned RD5                    :1;
2524:                  unsigned RD6                    :1;
2525:                  unsigned RD7                    :1;
2526:              };
2527:          } DDRDbits_t;
2528:          extern volatile DDRDbits_t DDRDbits @ 0xF95;
2529:          // bitfield macros
2530:          #define _DDRD_TRISD0_POSN                                   0x0
2531:          #define _DDRD_TRISD0_POSITION                               0x0
2532:          #define _DDRD_TRISD0_SIZE                                   0x1
2533:          #define _DDRD_TRISD0_LENGTH                                 0x1
2534:          #define _DDRD_TRISD0_MASK                                   0x1
2535:          #define _DDRD_TRISD1_POSN                                   0x1
2536:          #define _DDRD_TRISD1_POSITION                               0x1
2537:          #define _DDRD_TRISD1_SIZE                                   0x1
2538:          #define _DDRD_TRISD1_LENGTH                                 0x1
2539:          #define _DDRD_TRISD1_MASK                                   0x2
2540:          #define _DDRD_TRISD2_POSN                                   0x2
2541:          #define _DDRD_TRISD2_POSITION                               0x2
2542:          #define _DDRD_TRISD2_SIZE                                   0x1
2543:          #define _DDRD_TRISD2_LENGTH                                 0x1
2544:          #define _DDRD_TRISD2_MASK                                   0x4
2545:          #define _DDRD_TRISD3_POSN                                   0x3
2546:          #define _DDRD_TRISD3_POSITION                               0x3
2547:          #define _DDRD_TRISD3_SIZE                                   0x1
2548:          #define _DDRD_TRISD3_LENGTH                                 0x1
2549:          #define _DDRD_TRISD3_MASK                                   0x8
2550:          #define _DDRD_TRISD4_POSN                                   0x4
2551:          #define _DDRD_TRISD4_POSITION                               0x4
2552:          #define _DDRD_TRISD4_SIZE                                   0x1
2553:          #define _DDRD_TRISD4_LENGTH                                 0x1
2554:          #define _DDRD_TRISD4_MASK                                   0x10
2555:          #define _DDRD_TRISD5_POSN                                   0x5
2556:          #define _DDRD_TRISD5_POSITION                               0x5
2557:          #define _DDRD_TRISD5_SIZE                                   0x1
2558:          #define _DDRD_TRISD5_LENGTH                                 0x1
2559:          #define _DDRD_TRISD5_MASK                                   0x20
2560:          #define _DDRD_TRISD6_POSN                                   0x6
2561:          #define _DDRD_TRISD6_POSITION                               0x6
2562:          #define _DDRD_TRISD6_SIZE                                   0x1
2563:          #define _DDRD_TRISD6_LENGTH                                 0x1
2564:          #define _DDRD_TRISD6_MASK                                   0x40
2565:          #define _DDRD_TRISD7_POSN                                   0x7
2566:          #define _DDRD_TRISD7_POSITION                               0x7
2567:          #define _DDRD_TRISD7_SIZE                                   0x1
2568:          #define _DDRD_TRISD7_LENGTH                                 0x1
2569:          #define _DDRD_TRISD7_MASK                                   0x80
2570:          #define _DDRD_RD0_POSN                                      0x0
2571:          #define _DDRD_RD0_POSITION                                  0x0
2572:          #define _DDRD_RD0_SIZE                                      0x1
2573:          #define _DDRD_RD0_LENGTH                                    0x1
2574:          #define _DDRD_RD0_MASK                                      0x1
2575:          #define _DDRD_RD1_POSN                                      0x1
2576:          #define _DDRD_RD1_POSITION                                  0x1
2577:          #define _DDRD_RD1_SIZE                                      0x1
2578:          #define _DDRD_RD1_LENGTH                                    0x1
2579:          #define _DDRD_RD1_MASK                                      0x2
2580:          #define _DDRD_RD2_POSN                                      0x2
2581:          #define _DDRD_RD2_POSITION                                  0x2
2582:          #define _DDRD_RD2_SIZE                                      0x1
2583:          #define _DDRD_RD2_LENGTH                                    0x1
2584:          #define _DDRD_RD2_MASK                                      0x4
2585:          #define _DDRD_RD3_POSN                                      0x3
2586:          #define _DDRD_RD3_POSITION                                  0x3
2587:          #define _DDRD_RD3_SIZE                                      0x1
2588:          #define _DDRD_RD3_LENGTH                                    0x1
2589:          #define _DDRD_RD3_MASK                                      0x8
2590:          #define _DDRD_RD4_POSN                                      0x4
2591:          #define _DDRD_RD4_POSITION                                  0x4
2592:          #define _DDRD_RD4_SIZE                                      0x1
2593:          #define _DDRD_RD4_LENGTH                                    0x1
2594:          #define _DDRD_RD4_MASK                                      0x10
2595:          #define _DDRD_RD5_POSN                                      0x5
2596:          #define _DDRD_RD5_POSITION                                  0x5
2597:          #define _DDRD_RD5_SIZE                                      0x1
2598:          #define _DDRD_RD5_LENGTH                                    0x1
2599:          #define _DDRD_RD5_MASK                                      0x20
2600:          #define _DDRD_RD6_POSN                                      0x6
2601:          #define _DDRD_RD6_POSITION                                  0x6
2602:          #define _DDRD_RD6_SIZE                                      0x1
2603:          #define _DDRD_RD6_LENGTH                                    0x1
2604:          #define _DDRD_RD6_MASK                                      0x40
2605:          #define _DDRD_RD7_POSN                                      0x7
2606:          #define _DDRD_RD7_POSITION                                  0x7
2607:          #define _DDRD_RD7_SIZE                                      0x1
2608:          #define _DDRD_RD7_LENGTH                                    0x1
2609:          #define _DDRD_RD7_MASK                                      0x80
2610:          
2611:          // Register: TRISE
2612:          extern volatile unsigned char           TRISE               @ 0xF96;
2613:          #ifndef _LIB_BUILD
2614:          asm("TRISE equ 0F96h");
2615:          #endif
2616:          // aliases
2617:          extern volatile unsigned char           DDRE                @ 0xF96;
2618:          #ifndef _LIB_BUILD
2619:          asm("DDRE equ 0F96h");
2620:          #endif
2621:          // bitfield definitions
2622:          typedef union {
2623:              struct {
2624:                  unsigned TRISE0                 :1;
2625:                  unsigned TRISE1                 :1;
2626:                  unsigned TRISE2                 :1;
2627:                  unsigned                        :1;
2628:                  unsigned PSPMODE                :1;
2629:                  unsigned IBOV                   :1;
2630:                  unsigned OBF                    :1;
2631:                  unsigned IBF                    :1;
2632:              };
2633:              struct {
2634:                  unsigned RE0                    :1;
2635:                  unsigned RE1                    :1;
2636:                  unsigned RE2                    :1;
2637:                  unsigned RE3                    :1;
2638:              };
2639:          } TRISEbits_t;
2640:          extern volatile TRISEbits_t TRISEbits @ 0xF96;
2641:          // bitfield macros
2642:          #define _TRISE_TRISE0_POSN                                  0x0
2643:          #define _TRISE_TRISE0_POSITION                              0x0
2644:          #define _TRISE_TRISE0_SIZE                                  0x1
2645:          #define _TRISE_TRISE0_LENGTH                                0x1
2646:          #define _TRISE_TRISE0_MASK                                  0x1
2647:          #define _TRISE_TRISE1_POSN                                  0x1
2648:          #define _TRISE_TRISE1_POSITION                              0x1
2649:          #define _TRISE_TRISE1_SIZE                                  0x1
2650:          #define _TRISE_TRISE1_LENGTH                                0x1
2651:          #define _TRISE_TRISE1_MASK                                  0x2
2652:          #define _TRISE_TRISE2_POSN                                  0x2
2653:          #define _TRISE_TRISE2_POSITION                              0x2
2654:          #define _TRISE_TRISE2_SIZE                                  0x1
2655:          #define _TRISE_TRISE2_LENGTH                                0x1
2656:          #define _TRISE_TRISE2_MASK                                  0x4
2657:          #define _TRISE_PSPMODE_POSN                                 0x4
2658:          #define _TRISE_PSPMODE_POSITION                             0x4
2659:          #define _TRISE_PSPMODE_SIZE                                 0x1
2660:          #define _TRISE_PSPMODE_LENGTH                               0x1
2661:          #define _TRISE_PSPMODE_MASK                                 0x10
2662:          #define _TRISE_IBOV_POSN                                    0x5
2663:          #define _TRISE_IBOV_POSITION                                0x5
2664:          #define _TRISE_IBOV_SIZE                                    0x1
2665:          #define _TRISE_IBOV_LENGTH                                  0x1
2666:          #define _TRISE_IBOV_MASK                                    0x20
2667:          #define _TRISE_OBF_POSN                                     0x6
2668:          #define _TRISE_OBF_POSITION                                 0x6
2669:          #define _TRISE_OBF_SIZE                                     0x1
2670:          #define _TRISE_OBF_LENGTH                                   0x1
2671:          #define _TRISE_OBF_MASK                                     0x40
2672:          #define _TRISE_IBF_POSN                                     0x7
2673:          #define _TRISE_IBF_POSITION                                 0x7
2674:          #define _TRISE_IBF_SIZE                                     0x1
2675:          #define _TRISE_IBF_LENGTH                                   0x1
2676:          #define _TRISE_IBF_MASK                                     0x80
2677:          #define _TRISE_RE0_POSN                                     0x0
2678:          #define _TRISE_RE0_POSITION                                 0x0
2679:          #define _TRISE_RE0_SIZE                                     0x1
2680:          #define _TRISE_RE0_LENGTH                                   0x1
2681:          #define _TRISE_RE0_MASK                                     0x1
2682:          #define _TRISE_RE1_POSN                                     0x1
2683:          #define _TRISE_RE1_POSITION                                 0x1
2684:          #define _TRISE_RE1_SIZE                                     0x1
2685:          #define _TRISE_RE1_LENGTH                                   0x1
2686:          #define _TRISE_RE1_MASK                                     0x2
2687:          #define _TRISE_RE2_POSN                                     0x2
2688:          #define _TRISE_RE2_POSITION                                 0x2
2689:          #define _TRISE_RE2_SIZE                                     0x1
2690:          #define _TRISE_RE2_LENGTH                                   0x1
2691:          #define _TRISE_RE2_MASK                                     0x4
2692:          #define _TRISE_RE3_POSN                                     0x3
2693:          #define _TRISE_RE3_POSITION                                 0x3
2694:          #define _TRISE_RE3_SIZE                                     0x1
2695:          #define _TRISE_RE3_LENGTH                                   0x1
2696:          #define _TRISE_RE3_MASK                                     0x8
2697:          // alias bitfield definitions
2698:          typedef union {
2699:              struct {
2700:                  unsigned TRISE0                 :1;
2701:                  unsigned TRISE1                 :1;
2702:                  unsigned TRISE2                 :1;
2703:                  unsigned                        :1;
2704:                  unsigned PSPMODE                :1;
2705:                  unsigned IBOV                   :1;
2706:                  unsigned OBF                    :1;
2707:                  unsigned IBF                    :1;
2708:              };
2709:              struct {
2710:                  unsigned RE0                    :1;
2711:                  unsigned RE1                    :1;
2712:                  unsigned RE2                    :1;
2713:                  unsigned RE3                    :1;
2714:              };
2715:          } DDREbits_t;
2716:          extern volatile DDREbits_t DDREbits @ 0xF96;
2717:          // bitfield macros
2718:          #define _DDRE_TRISE0_POSN                                   0x0
2719:          #define _DDRE_TRISE0_POSITION                               0x0
2720:          #define _DDRE_TRISE0_SIZE                                   0x1
2721:          #define _DDRE_TRISE0_LENGTH                                 0x1
2722:          #define _DDRE_TRISE0_MASK                                   0x1
2723:          #define _DDRE_TRISE1_POSN                                   0x1
2724:          #define _DDRE_TRISE1_POSITION                               0x1
2725:          #define _DDRE_TRISE1_SIZE                                   0x1
2726:          #define _DDRE_TRISE1_LENGTH                                 0x1
2727:          #define _DDRE_TRISE1_MASK                                   0x2
2728:          #define _DDRE_TRISE2_POSN                                   0x2
2729:          #define _DDRE_TRISE2_POSITION                               0x2
2730:          #define _DDRE_TRISE2_SIZE                                   0x1
2731:          #define _DDRE_TRISE2_LENGTH                                 0x1
2732:          #define _DDRE_TRISE2_MASK                                   0x4
2733:          #define _DDRE_PSPMODE_POSN                                  0x4
2734:          #define _DDRE_PSPMODE_POSITION                              0x4
2735:          #define _DDRE_PSPMODE_SIZE                                  0x1
2736:          #define _DDRE_PSPMODE_LENGTH                                0x1
2737:          #define _DDRE_PSPMODE_MASK                                  0x10
2738:          #define _DDRE_IBOV_POSN                                     0x5
2739:          #define _DDRE_IBOV_POSITION                                 0x5
2740:          #define _DDRE_IBOV_SIZE                                     0x1
2741:          #define _DDRE_IBOV_LENGTH                                   0x1
2742:          #define _DDRE_IBOV_MASK                                     0x20
2743:          #define _DDRE_OBF_POSN                                      0x6
2744:          #define _DDRE_OBF_POSITION                                  0x6
2745:          #define _DDRE_OBF_SIZE                                      0x1
2746:          #define _DDRE_OBF_LENGTH                                    0x1
2747:          #define _DDRE_OBF_MASK                                      0x40
2748:          #define _DDRE_IBF_POSN                                      0x7
2749:          #define _DDRE_IBF_POSITION                                  0x7
2750:          #define _DDRE_IBF_SIZE                                      0x1
2751:          #define _DDRE_IBF_LENGTH                                    0x1
2752:          #define _DDRE_IBF_MASK                                      0x80
2753:          #define _DDRE_RE0_POSN                                      0x0
2754:          #define _DDRE_RE0_POSITION                                  0x0
2755:          #define _DDRE_RE0_SIZE                                      0x1
2756:          #define _DDRE_RE0_LENGTH                                    0x1
2757:          #define _DDRE_RE0_MASK                                      0x1
2758:          #define _DDRE_RE1_POSN                                      0x1
2759:          #define _DDRE_RE1_POSITION                                  0x1
2760:          #define _DDRE_RE1_SIZE                                      0x1
2761:          #define _DDRE_RE1_LENGTH                                    0x1
2762:          #define _DDRE_RE1_MASK                                      0x2
2763:          #define _DDRE_RE2_POSN                                      0x2
2764:          #define _DDRE_RE2_POSITION                                  0x2
2765:          #define _DDRE_RE2_SIZE                                      0x1
2766:          #define _DDRE_RE2_LENGTH                                    0x1
2767:          #define _DDRE_RE2_MASK                                      0x4
2768:          #define _DDRE_RE3_POSN                                      0x3
2769:          #define _DDRE_RE3_POSITION                                  0x3
2770:          #define _DDRE_RE3_SIZE                                      0x1
2771:          #define _DDRE_RE3_LENGTH                                    0x1
2772:          #define _DDRE_RE3_MASK                                      0x8
2773:          
2774:          // Register: OSCTUNE
2775:          extern volatile unsigned char           OSCTUNE             @ 0xF9B;
2776:          #ifndef _LIB_BUILD
2777:          asm("OSCTUNE equ 0F9Bh");
2778:          #endif
2779:          // bitfield definitions
2780:          typedef union {
2781:              struct {
2782:                  unsigned TUN                    :5;
2783:                  unsigned                        :1;
2784:                  unsigned PLLEN                  :1;
2785:                  unsigned INTSRC                 :1;
2786:              };
2787:              struct {
2788:                  unsigned TUN0                   :1;
2789:                  unsigned TUN1                   :1;
2790:                  unsigned TUN2                   :1;
2791:                  unsigned TUN3                   :1;
2792:                  unsigned TUN4                   :1;
2793:              };
2794:          } OSCTUNEbits_t;
2795:          extern volatile OSCTUNEbits_t OSCTUNEbits @ 0xF9B;
2796:          // bitfield macros
2797:          #define _OSCTUNE_TUN_POSN                                   0x0
2798:          #define _OSCTUNE_TUN_POSITION                               0x0
2799:          #define _OSCTUNE_TUN_SIZE                                   0x5
2800:          #define _OSCTUNE_TUN_LENGTH                                 0x5
2801:          #define _OSCTUNE_TUN_MASK                                   0x1F
2802:          #define _OSCTUNE_PLLEN_POSN                                 0x6
2803:          #define _OSCTUNE_PLLEN_POSITION                             0x6
2804:          #define _OSCTUNE_PLLEN_SIZE                                 0x1
2805:          #define _OSCTUNE_PLLEN_LENGTH                               0x1
2806:          #define _OSCTUNE_PLLEN_MASK                                 0x40
2807:          #define _OSCTUNE_INTSRC_POSN                                0x7
2808:          #define _OSCTUNE_INTSRC_POSITION                            0x7
2809:          #define _OSCTUNE_INTSRC_SIZE                                0x1
2810:          #define _OSCTUNE_INTSRC_LENGTH                              0x1
2811:          #define _OSCTUNE_INTSRC_MASK                                0x80
2812:          #define _OSCTUNE_TUN0_POSN                                  0x0
2813:          #define _OSCTUNE_TUN0_POSITION                              0x0
2814:          #define _OSCTUNE_TUN0_SIZE                                  0x1
2815:          #define _OSCTUNE_TUN0_LENGTH                                0x1
2816:          #define _OSCTUNE_TUN0_MASK                                  0x1
2817:          #define _OSCTUNE_TUN1_POSN                                  0x1
2818:          #define _OSCTUNE_TUN1_POSITION                              0x1
2819:          #define _OSCTUNE_TUN1_SIZE                                  0x1
2820:          #define _OSCTUNE_TUN1_LENGTH                                0x1
2821:          #define _OSCTUNE_TUN1_MASK                                  0x2
2822:          #define _OSCTUNE_TUN2_POSN                                  0x2
2823:          #define _OSCTUNE_TUN2_POSITION                              0x2
2824:          #define _OSCTUNE_TUN2_SIZE                                  0x1
2825:          #define _OSCTUNE_TUN2_LENGTH                                0x1
2826:          #define _OSCTUNE_TUN2_MASK                                  0x4
2827:          #define _OSCTUNE_TUN3_POSN                                  0x3
2828:          #define _OSCTUNE_TUN3_POSITION                              0x3
2829:          #define _OSCTUNE_TUN3_SIZE                                  0x1
2830:          #define _OSCTUNE_TUN3_LENGTH                                0x1
2831:          #define _OSCTUNE_TUN3_MASK                                  0x8
2832:          #define _OSCTUNE_TUN4_POSN                                  0x4
2833:          #define _OSCTUNE_TUN4_POSITION                              0x4
2834:          #define _OSCTUNE_TUN4_SIZE                                  0x1
2835:          #define _OSCTUNE_TUN4_LENGTH                                0x1
2836:          #define _OSCTUNE_TUN4_MASK                                  0x10
2837:          
2838:          // Register: PIE1
2839:          extern volatile unsigned char           PIE1                @ 0xF9D;
2840:          #ifndef _LIB_BUILD
2841:          asm("PIE1 equ 0F9Dh");
2842:          #endif
2843:          // bitfield definitions
2844:          typedef union {
2845:              struct {
2846:                  unsigned TMR1IE                 :1;
2847:                  unsigned TMR2IE                 :1;
2848:                  unsigned CCP1IE                 :1;
2849:                  unsigned SSPIE                  :1;
2850:                  unsigned TXIE                   :1;
2851:                  unsigned RCIE                   :1;
2852:                  unsigned ADIE                   :1;
2853:                  unsigned PSPIE                  :1;
2854:              };
2855:              struct {
2856:                  unsigned                        :5;
2857:                  unsigned RC1IE                  :1;
2858:              };
2859:              struct {
2860:                  unsigned                        :4;
2861:                  unsigned TX1IE                  :1;
2862:              };
2863:          } PIE1bits_t;
2864:          extern volatile PIE1bits_t PIE1bits @ 0xF9D;
2865:          // bitfield macros
2866:          #define _PIE1_TMR1IE_POSN                                   0x0
2867:          #define _PIE1_TMR1IE_POSITION                               0x0
2868:          #define _PIE1_TMR1IE_SIZE                                   0x1
2869:          #define _PIE1_TMR1IE_LENGTH                                 0x1
2870:          #define _PIE1_TMR1IE_MASK                                   0x1
2871:          #define _PIE1_TMR2IE_POSN                                   0x1
2872:          #define _PIE1_TMR2IE_POSITION                               0x1
2873:          #define _PIE1_TMR2IE_SIZE                                   0x1
2874:          #define _PIE1_TMR2IE_LENGTH                                 0x1
2875:          #define _PIE1_TMR2IE_MASK                                   0x2
2876:          #define _PIE1_CCP1IE_POSN                                   0x2
2877:          #define _PIE1_CCP1IE_POSITION                               0x2
2878:          #define _PIE1_CCP1IE_SIZE                                   0x1
2879:          #define _PIE1_CCP1IE_LENGTH                                 0x1
2880:          #define _PIE1_CCP1IE_MASK                                   0x4
2881:          #define _PIE1_SSPIE_POSN                                    0x3
2882:          #define _PIE1_SSPIE_POSITION                                0x3
2883:          #define _PIE1_SSPIE_SIZE                                    0x1
2884:          #define _PIE1_SSPIE_LENGTH                                  0x1
2885:          #define _PIE1_SSPIE_MASK                                    0x8
2886:          #define _PIE1_TXIE_POSN                                     0x4
2887:          #define _PIE1_TXIE_POSITION                                 0x4
2888:          #define _PIE1_TXIE_SIZE                                     0x1
2889:          #define _PIE1_TXIE_LENGTH                                   0x1
2890:          #define _PIE1_TXIE_MASK                                     0x10
2891:          #define _PIE1_RCIE_POSN                                     0x5
2892:          #define _PIE1_RCIE_POSITION                                 0x5
2893:          #define _PIE1_RCIE_SIZE                                     0x1
2894:          #define _PIE1_RCIE_LENGTH                                   0x1
2895:          #define _PIE1_RCIE_MASK                                     0x20
2896:          #define _PIE1_ADIE_POSN                                     0x6
2897:          #define _PIE1_ADIE_POSITION                                 0x6
2898:          #define _PIE1_ADIE_SIZE                                     0x1
2899:          #define _PIE1_ADIE_LENGTH                                   0x1
2900:          #define _PIE1_ADIE_MASK                                     0x40
2901:          #define _PIE1_PSPIE_POSN                                    0x7
2902:          #define _PIE1_PSPIE_POSITION                                0x7
2903:          #define _PIE1_PSPIE_SIZE                                    0x1
2904:          #define _PIE1_PSPIE_LENGTH                                  0x1
2905:          #define _PIE1_PSPIE_MASK                                    0x80
2906:          #define _PIE1_RC1IE_POSN                                    0x5
2907:          #define _PIE1_RC1IE_POSITION                                0x5
2908:          #define _PIE1_RC1IE_SIZE                                    0x1
2909:          #define _PIE1_RC1IE_LENGTH                                  0x1
2910:          #define _PIE1_RC1IE_MASK                                    0x20
2911:          #define _PIE1_TX1IE_POSN                                    0x4
2912:          #define _PIE1_TX1IE_POSITION                                0x4
2913:          #define _PIE1_TX1IE_SIZE                                    0x1
2914:          #define _PIE1_TX1IE_LENGTH                                  0x1
2915:          #define _PIE1_TX1IE_MASK                                    0x10
2916:          
2917:          // Register: PIR1
2918:          extern volatile unsigned char           PIR1                @ 0xF9E;
2919:          #ifndef _LIB_BUILD
2920:          asm("PIR1 equ 0F9Eh");
2921:          #endif
2922:          // bitfield definitions
2923:          typedef union {
2924:              struct {
2925:                  unsigned TMR1IF                 :1;
2926:                  unsigned TMR2IF                 :1;
2927:                  unsigned CCP1IF                 :1;
2928:                  unsigned SSPIF                  :1;
2929:                  unsigned TXIF                   :1;
2930:                  unsigned RCIF                   :1;
2931:                  unsigned ADIF                   :1;
2932:                  unsigned PSPIF                  :1;
2933:              };
2934:              struct {
2935:                  unsigned                        :5;
2936:                  unsigned RC1IF                  :1;
2937:              };
2938:              struct {
2939:                  unsigned                        :4;
2940:                  unsigned TX1IF                  :1;
2941:              };
2942:          } PIR1bits_t;
2943:          extern volatile PIR1bits_t PIR1bits @ 0xF9E;
2944:          // bitfield macros
2945:          #define _PIR1_TMR1IF_POSN                                   0x0
2946:          #define _PIR1_TMR1IF_POSITION                               0x0
2947:          #define _PIR1_TMR1IF_SIZE                                   0x1
2948:          #define _PIR1_TMR1IF_LENGTH                                 0x1
2949:          #define _PIR1_TMR1IF_MASK                                   0x1
2950:          #define _PIR1_TMR2IF_POSN                                   0x1
2951:          #define _PIR1_TMR2IF_POSITION                               0x1
2952:          #define _PIR1_TMR2IF_SIZE                                   0x1
2953:          #define _PIR1_TMR2IF_LENGTH                                 0x1
2954:          #define _PIR1_TMR2IF_MASK                                   0x2
2955:          #define _PIR1_CCP1IF_POSN                                   0x2
2956:          #define _PIR1_CCP1IF_POSITION                               0x2
2957:          #define _PIR1_CCP1IF_SIZE                                   0x1
2958:          #define _PIR1_CCP1IF_LENGTH                                 0x1
2959:          #define _PIR1_CCP1IF_MASK                                   0x4
2960:          #define _PIR1_SSPIF_POSN                                    0x3
2961:          #define _PIR1_SSPIF_POSITION                                0x3
2962:          #define _PIR1_SSPIF_SIZE                                    0x1
2963:          #define _PIR1_SSPIF_LENGTH                                  0x1
2964:          #define _PIR1_SSPIF_MASK                                    0x8
2965:          #define _PIR1_TXIF_POSN                                     0x4
2966:          #define _PIR1_TXIF_POSITION                                 0x4
2967:          #define _PIR1_TXIF_SIZE                                     0x1
2968:          #define _PIR1_TXIF_LENGTH                                   0x1
2969:          #define _PIR1_TXIF_MASK                                     0x10
2970:          #define _PIR1_RCIF_POSN                                     0x5
2971:          #define _PIR1_RCIF_POSITION                                 0x5
2972:          #define _PIR1_RCIF_SIZE                                     0x1
2973:          #define _PIR1_RCIF_LENGTH                                   0x1
2974:          #define _PIR1_RCIF_MASK                                     0x20
2975:          #define _PIR1_ADIF_POSN                                     0x6
2976:          #define _PIR1_ADIF_POSITION                                 0x6
2977:          #define _PIR1_ADIF_SIZE                                     0x1
2978:          #define _PIR1_ADIF_LENGTH                                   0x1
2979:          #define _PIR1_ADIF_MASK                                     0x40
2980:          #define _PIR1_PSPIF_POSN                                    0x7
2981:          #define _PIR1_PSPIF_POSITION                                0x7
2982:          #define _PIR1_PSPIF_SIZE                                    0x1
2983:          #define _PIR1_PSPIF_LENGTH                                  0x1
2984:          #define _PIR1_PSPIF_MASK                                    0x80
2985:          #define _PIR1_RC1IF_POSN                                    0x5
2986:          #define _PIR1_RC1IF_POSITION                                0x5
2987:          #define _PIR1_RC1IF_SIZE                                    0x1
2988:          #define _PIR1_RC1IF_LENGTH                                  0x1
2989:          #define _PIR1_RC1IF_MASK                                    0x20
2990:          #define _PIR1_TX1IF_POSN                                    0x4
2991:          #define _PIR1_TX1IF_POSITION                                0x4
2992:          #define _PIR1_TX1IF_SIZE                                    0x1
2993:          #define _PIR1_TX1IF_LENGTH                                  0x1
2994:          #define _PIR1_TX1IF_MASK                                    0x10
2995:          
2996:          // Register: IPR1
2997:          extern volatile unsigned char           IPR1                @ 0xF9F;
2998:          #ifndef _LIB_BUILD
2999:          asm("IPR1 equ 0F9Fh");
3000:          #endif
3001:          // bitfield definitions
3002:          typedef union {
3003:              struct {
3004:                  unsigned TMR1IP                 :1;
3005:                  unsigned TMR2IP                 :1;
3006:                  unsigned CCP1IP                 :1;
3007:                  unsigned SSPIP                  :1;
3008:                  unsigned TXIP                   :1;
3009:                  unsigned RCIP                   :1;
3010:                  unsigned ADIP                   :1;
3011:                  unsigned PSPIP                  :1;
3012:              };
3013:              struct {
3014:                  unsigned                        :5;
3015:                  unsigned RC1IP                  :1;
3016:              };
3017:              struct {
3018:                  unsigned                        :4;
3019:                  unsigned TX1IP                  :1;
3020:              };
3021:          } IPR1bits_t;
3022:          extern volatile IPR1bits_t IPR1bits @ 0xF9F;
3023:          // bitfield macros
3024:          #define _IPR1_TMR1IP_POSN                                   0x0
3025:          #define _IPR1_TMR1IP_POSITION                               0x0
3026:          #define _IPR1_TMR1IP_SIZE                                   0x1
3027:          #define _IPR1_TMR1IP_LENGTH                                 0x1
3028:          #define _IPR1_TMR1IP_MASK                                   0x1
3029:          #define _IPR1_TMR2IP_POSN                                   0x1
3030:          #define _IPR1_TMR2IP_POSITION                               0x1
3031:          #define _IPR1_TMR2IP_SIZE                                   0x1
3032:          #define _IPR1_TMR2IP_LENGTH                                 0x1
3033:          #define _IPR1_TMR2IP_MASK                                   0x2
3034:          #define _IPR1_CCP1IP_POSN                                   0x2
3035:          #define _IPR1_CCP1IP_POSITION                               0x2
3036:          #define _IPR1_CCP1IP_SIZE                                   0x1
3037:          #define _IPR1_CCP1IP_LENGTH                                 0x1
3038:          #define _IPR1_CCP1IP_MASK                                   0x4
3039:          #define _IPR1_SSPIP_POSN                                    0x3
3040:          #define _IPR1_SSPIP_POSITION                                0x3
3041:          #define _IPR1_SSPIP_SIZE                                    0x1
3042:          #define _IPR1_SSPIP_LENGTH                                  0x1
3043:          #define _IPR1_SSPIP_MASK                                    0x8
3044:          #define _IPR1_TXIP_POSN                                     0x4
3045:          #define _IPR1_TXIP_POSITION                                 0x4
3046:          #define _IPR1_TXIP_SIZE                                     0x1
3047:          #define _IPR1_TXIP_LENGTH                                   0x1
3048:          #define _IPR1_TXIP_MASK                                     0x10
3049:          #define _IPR1_RCIP_POSN                                     0x5
3050:          #define _IPR1_RCIP_POSITION                                 0x5
3051:          #define _IPR1_RCIP_SIZE                                     0x1
3052:          #define _IPR1_RCIP_LENGTH                                   0x1
3053:          #define _IPR1_RCIP_MASK                                     0x20
3054:          #define _IPR1_ADIP_POSN                                     0x6
3055:          #define _IPR1_ADIP_POSITION                                 0x6
3056:          #define _IPR1_ADIP_SIZE                                     0x1
3057:          #define _IPR1_ADIP_LENGTH                                   0x1
3058:          #define _IPR1_ADIP_MASK                                     0x40
3059:          #define _IPR1_PSPIP_POSN                                    0x7
3060:          #define _IPR1_PSPIP_POSITION                                0x7
3061:          #define _IPR1_PSPIP_SIZE                                    0x1
3062:          #define _IPR1_PSPIP_LENGTH                                  0x1
3063:          #define _IPR1_PSPIP_MASK                                    0x80
3064:          #define _IPR1_RC1IP_POSN                                    0x5
3065:          #define _IPR1_RC1IP_POSITION                                0x5
3066:          #define _IPR1_RC1IP_SIZE                                    0x1
3067:          #define _IPR1_RC1IP_LENGTH                                  0x1
3068:          #define _IPR1_RC1IP_MASK                                    0x20
3069:          #define _IPR1_TX1IP_POSN                                    0x4
3070:          #define _IPR1_TX1IP_POSITION                                0x4
3071:          #define _IPR1_TX1IP_SIZE                                    0x1
3072:          #define _IPR1_TX1IP_LENGTH                                  0x1
3073:          #define _IPR1_TX1IP_MASK                                    0x10
3074:          
3075:          // Register: PIE2
3076:          extern volatile unsigned char           PIE2                @ 0xFA0;
3077:          #ifndef _LIB_BUILD
3078:          asm("PIE2 equ 0FA0h");
3079:          #endif
3080:          // bitfield definitions
3081:          typedef union {
3082:              struct {
3083:                  unsigned CCP2IE                 :1;
3084:                  unsigned TMR3IE                 :1;
3085:                  unsigned HLVDIE                 :1;
3086:                  unsigned BCLIE                  :1;
3087:                  unsigned EEIE                   :1;
3088:                  unsigned                        :1;
3089:                  unsigned CMIE                   :1;
3090:                  unsigned OSCFIE                 :1;
3091:              };
3092:              struct {
3093:                  unsigned                        :2;
3094:                  unsigned LVDIE                  :1;
3095:              };
3096:          } PIE2bits_t;
3097:          extern volatile PIE2bits_t PIE2bits @ 0xFA0;
3098:          // bitfield macros
3099:          #define _PIE2_CCP2IE_POSN                                   0x0
3100:          #define _PIE2_CCP2IE_POSITION                               0x0
3101:          #define _PIE2_CCP2IE_SIZE                                   0x1
3102:          #define _PIE2_CCP2IE_LENGTH                                 0x1
3103:          #define _PIE2_CCP2IE_MASK                                   0x1
3104:          #define _PIE2_TMR3IE_POSN                                   0x1
3105:          #define _PIE2_TMR3IE_POSITION                               0x1
3106:          #define _PIE2_TMR3IE_SIZE                                   0x1
3107:          #define _PIE2_TMR3IE_LENGTH                                 0x1
3108:          #define _PIE2_TMR3IE_MASK                                   0x2
3109:          #define _PIE2_HLVDIE_POSN                                   0x2
3110:          #define _PIE2_HLVDIE_POSITION                               0x2
3111:          #define _PIE2_HLVDIE_SIZE                                   0x1
3112:          #define _PIE2_HLVDIE_LENGTH                                 0x1
3113:          #define _PIE2_HLVDIE_MASK                                   0x4
3114:          #define _PIE2_BCLIE_POSN                                    0x3
3115:          #define _PIE2_BCLIE_POSITION                                0x3
3116:          #define _PIE2_BCLIE_SIZE                                    0x1
3117:          #define _PIE2_BCLIE_LENGTH                                  0x1
3118:          #define _PIE2_BCLIE_MASK                                    0x8
3119:          #define _PIE2_EEIE_POSN                                     0x4
3120:          #define _PIE2_EEIE_POSITION                                 0x4
3121:          #define _PIE2_EEIE_SIZE                                     0x1
3122:          #define _PIE2_EEIE_LENGTH                                   0x1
3123:          #define _PIE2_EEIE_MASK                                     0x10
3124:          #define _PIE2_CMIE_POSN                                     0x6
3125:          #define _PIE2_CMIE_POSITION                                 0x6
3126:          #define _PIE2_CMIE_SIZE                                     0x1
3127:          #define _PIE2_CMIE_LENGTH                                   0x1
3128:          #define _PIE2_CMIE_MASK                                     0x40
3129:          #define _PIE2_OSCFIE_POSN                                   0x7
3130:          #define _PIE2_OSCFIE_POSITION                               0x7
3131:          #define _PIE2_OSCFIE_SIZE                                   0x1
3132:          #define _PIE2_OSCFIE_LENGTH                                 0x1
3133:          #define _PIE2_OSCFIE_MASK                                   0x80
3134:          #define _PIE2_LVDIE_POSN                                    0x2
3135:          #define _PIE2_LVDIE_POSITION                                0x2
3136:          #define _PIE2_LVDIE_SIZE                                    0x1
3137:          #define _PIE2_LVDIE_LENGTH                                  0x1
3138:          #define _PIE2_LVDIE_MASK                                    0x4
3139:          
3140:          // Register: PIR2
3141:          extern volatile unsigned char           PIR2                @ 0xFA1;
3142:          #ifndef _LIB_BUILD
3143:          asm("PIR2 equ 0FA1h");
3144:          #endif
3145:          // bitfield definitions
3146:          typedef union {
3147:              struct {
3148:                  unsigned CCP2IF                 :1;
3149:                  unsigned TMR3IF                 :1;
3150:                  unsigned HLVDIF                 :1;
3151:                  unsigned BCLIF                  :1;
3152:                  unsigned EEIF                   :1;
3153:                  unsigned                        :1;
3154:                  unsigned CMIF                   :1;
3155:                  unsigned OSCFIF                 :1;
3156:              };
3157:              struct {
3158:                  unsigned                        :2;
3159:                  unsigned LVDIF                  :1;
3160:              };
3161:          } PIR2bits_t;
3162:          extern volatile PIR2bits_t PIR2bits @ 0xFA1;
3163:          // bitfield macros
3164:          #define _PIR2_CCP2IF_POSN                                   0x0
3165:          #define _PIR2_CCP2IF_POSITION                               0x0
3166:          #define _PIR2_CCP2IF_SIZE                                   0x1
3167:          #define _PIR2_CCP2IF_LENGTH                                 0x1
3168:          #define _PIR2_CCP2IF_MASK                                   0x1
3169:          #define _PIR2_TMR3IF_POSN                                   0x1
3170:          #define _PIR2_TMR3IF_POSITION                               0x1
3171:          #define _PIR2_TMR3IF_SIZE                                   0x1
3172:          #define _PIR2_TMR3IF_LENGTH                                 0x1
3173:          #define _PIR2_TMR3IF_MASK                                   0x2
3174:          #define _PIR2_HLVDIF_POSN                                   0x2
3175:          #define _PIR2_HLVDIF_POSITION                               0x2
3176:          #define _PIR2_HLVDIF_SIZE                                   0x1
3177:          #define _PIR2_HLVDIF_LENGTH                                 0x1
3178:          #define _PIR2_HLVDIF_MASK                                   0x4
3179:          #define _PIR2_BCLIF_POSN                                    0x3
3180:          #define _PIR2_BCLIF_POSITION                                0x3
3181:          #define _PIR2_BCLIF_SIZE                                    0x1
3182:          #define _PIR2_BCLIF_LENGTH                                  0x1
3183:          #define _PIR2_BCLIF_MASK                                    0x8
3184:          #define _PIR2_EEIF_POSN                                     0x4
3185:          #define _PIR2_EEIF_POSITION                                 0x4
3186:          #define _PIR2_EEIF_SIZE                                     0x1
3187:          #define _PIR2_EEIF_LENGTH                                   0x1
3188:          #define _PIR2_EEIF_MASK                                     0x10
3189:          #define _PIR2_CMIF_POSN                                     0x6
3190:          #define _PIR2_CMIF_POSITION                                 0x6
3191:          #define _PIR2_CMIF_SIZE                                     0x1
3192:          #define _PIR2_CMIF_LENGTH                                   0x1
3193:          #define _PIR2_CMIF_MASK                                     0x40
3194:          #define _PIR2_OSCFIF_POSN                                   0x7
3195:          #define _PIR2_OSCFIF_POSITION                               0x7
3196:          #define _PIR2_OSCFIF_SIZE                                   0x1
3197:          #define _PIR2_OSCFIF_LENGTH                                 0x1
3198:          #define _PIR2_OSCFIF_MASK                                   0x80
3199:          #define _PIR2_LVDIF_POSN                                    0x2
3200:          #define _PIR2_LVDIF_POSITION                                0x2
3201:          #define _PIR2_LVDIF_SIZE                                    0x1
3202:          #define _PIR2_LVDIF_LENGTH                                  0x1
3203:          #define _PIR2_LVDIF_MASK                                    0x4
3204:          
3205:          // Register: IPR2
3206:          extern volatile unsigned char           IPR2                @ 0xFA2;
3207:          #ifndef _LIB_BUILD
3208:          asm("IPR2 equ 0FA2h");
3209:          #endif
3210:          // bitfield definitions
3211:          typedef union {
3212:              struct {
3213:                  unsigned CCP2IP                 :1;
3214:                  unsigned TMR3IP                 :1;
3215:                  unsigned HLVDIP                 :1;
3216:                  unsigned BCLIP                  :1;
3217:                  unsigned EEIP                   :1;
3218:                  unsigned                        :1;
3219:                  unsigned CMIP                   :1;
3220:                  unsigned OSCFIP                 :1;
3221:              };
3222:              struct {
3223:                  unsigned                        :2;
3224:                  unsigned LVDIP                  :1;
3225:              };
3226:          } IPR2bits_t;
3227:          extern volatile IPR2bits_t IPR2bits @ 0xFA2;
3228:          // bitfield macros
3229:          #define _IPR2_CCP2IP_POSN                                   0x0
3230:          #define _IPR2_CCP2IP_POSITION                               0x0
3231:          #define _IPR2_CCP2IP_SIZE                                   0x1
3232:          #define _IPR2_CCP2IP_LENGTH                                 0x1
3233:          #define _IPR2_CCP2IP_MASK                                   0x1
3234:          #define _IPR2_TMR3IP_POSN                                   0x1
3235:          #define _IPR2_TMR3IP_POSITION                               0x1
3236:          #define _IPR2_TMR3IP_SIZE                                   0x1
3237:          #define _IPR2_TMR3IP_LENGTH                                 0x1
3238:          #define _IPR2_TMR3IP_MASK                                   0x2
3239:          #define _IPR2_HLVDIP_POSN                                   0x2
3240:          #define _IPR2_HLVDIP_POSITION                               0x2
3241:          #define _IPR2_HLVDIP_SIZE                                   0x1
3242:          #define _IPR2_HLVDIP_LENGTH                                 0x1
3243:          #define _IPR2_HLVDIP_MASK                                   0x4
3244:          #define _IPR2_BCLIP_POSN                                    0x3
3245:          #define _IPR2_BCLIP_POSITION                                0x3
3246:          #define _IPR2_BCLIP_SIZE                                    0x1
3247:          #define _IPR2_BCLIP_LENGTH                                  0x1
3248:          #define _IPR2_BCLIP_MASK                                    0x8
3249:          #define _IPR2_EEIP_POSN                                     0x4
3250:          #define _IPR2_EEIP_POSITION                                 0x4
3251:          #define _IPR2_EEIP_SIZE                                     0x1
3252:          #define _IPR2_EEIP_LENGTH                                   0x1
3253:          #define _IPR2_EEIP_MASK                                     0x10
3254:          #define _IPR2_CMIP_POSN                                     0x6
3255:          #define _IPR2_CMIP_POSITION                                 0x6
3256:          #define _IPR2_CMIP_SIZE                                     0x1
3257:          #define _IPR2_CMIP_LENGTH                                   0x1
3258:          #define _IPR2_CMIP_MASK                                     0x40
3259:          #define _IPR2_OSCFIP_POSN                                   0x7
3260:          #define _IPR2_OSCFIP_POSITION                               0x7
3261:          #define _IPR2_OSCFIP_SIZE                                   0x1
3262:          #define _IPR2_OSCFIP_LENGTH                                 0x1
3263:          #define _IPR2_OSCFIP_MASK                                   0x80
3264:          #define _IPR2_LVDIP_POSN                                    0x2
3265:          #define _IPR2_LVDIP_POSITION                                0x2
3266:          #define _IPR2_LVDIP_SIZE                                    0x1
3267:          #define _IPR2_LVDIP_LENGTH                                  0x1
3268:          #define _IPR2_LVDIP_MASK                                    0x4
3269:          
3270:          // Register: EECON1
3271:          extern volatile unsigned char           EECON1              @ 0xFA6;
3272:          #ifndef _LIB_BUILD
3273:          asm("EECON1 equ 0FA6h");
3274:          #endif
3275:          // bitfield definitions
3276:          typedef union {
3277:              struct {
3278:                  unsigned RD                     :1;
3279:                  unsigned WR                     :1;
3280:                  unsigned WREN                   :1;
3281:                  unsigned WRERR                  :1;
3282:                  unsigned FREE                   :1;
3283:                  unsigned                        :1;
3284:                  unsigned CFGS                   :1;
3285:                  unsigned EEPGD                  :1;
3286:              };
3287:              struct {
3288:                  unsigned                        :6;
3289:                  unsigned EEFS                   :1;
3290:              };
3291:          } EECON1bits_t;
3292:          extern volatile EECON1bits_t EECON1bits @ 0xFA6;
3293:          // bitfield macros
3294:          #define _EECON1_RD_POSN                                     0x0
3295:          #define _EECON1_RD_POSITION                                 0x0
3296:          #define _EECON1_RD_SIZE                                     0x1
3297:          #define _EECON1_RD_LENGTH                                   0x1
3298:          #define _EECON1_RD_MASK                                     0x1
3299:          #define _EECON1_WR_POSN                                     0x1
3300:          #define _EECON1_WR_POSITION                                 0x1
3301:          #define _EECON1_WR_SIZE                                     0x1
3302:          #define _EECON1_WR_LENGTH                                   0x1
3303:          #define _EECON1_WR_MASK                                     0x2
3304:          #define _EECON1_WREN_POSN                                   0x2
3305:          #define _EECON1_WREN_POSITION                               0x2
3306:          #define _EECON1_WREN_SIZE                                   0x1
3307:          #define _EECON1_WREN_LENGTH                                 0x1
3308:          #define _EECON1_WREN_MASK                                   0x4
3309:          #define _EECON1_WRERR_POSN                                  0x3
3310:          #define _EECON1_WRERR_POSITION                              0x3
3311:          #define _EECON1_WRERR_SIZE                                  0x1
3312:          #define _EECON1_WRERR_LENGTH                                0x1
3313:          #define _EECON1_WRERR_MASK                                  0x8
3314:          #define _EECON1_FREE_POSN                                   0x4
3315:          #define _EECON1_FREE_POSITION                               0x4
3316:          #define _EECON1_FREE_SIZE                                   0x1
3317:          #define _EECON1_FREE_LENGTH                                 0x1
3318:          #define _EECON1_FREE_MASK                                   0x10
3319:          #define _EECON1_CFGS_POSN                                   0x6
3320:          #define _EECON1_CFGS_POSITION                               0x6
3321:          #define _EECON1_CFGS_SIZE                                   0x1
3322:          #define _EECON1_CFGS_LENGTH                                 0x1
3323:          #define _EECON1_CFGS_MASK                                   0x40
3324:          #define _EECON1_EEPGD_POSN                                  0x7
3325:          #define _EECON1_EEPGD_POSITION                              0x7
3326:          #define _EECON1_EEPGD_SIZE                                  0x1
3327:          #define _EECON1_EEPGD_LENGTH                                0x1
3328:          #define _EECON1_EEPGD_MASK                                  0x80
3329:          #define _EECON1_EEFS_POSN                                   0x6
3330:          #define _EECON1_EEFS_POSITION                               0x6
3331:          #define _EECON1_EEFS_SIZE                                   0x1
3332:          #define _EECON1_EEFS_LENGTH                                 0x1
3333:          #define _EECON1_EEFS_MASK                                   0x40
3334:          
3335:          // Register: EECON2
3336:          extern volatile unsigned char           EECON2              @ 0xFA7;
3337:          #ifndef _LIB_BUILD
3338:          asm("EECON2 equ 0FA7h");
3339:          #endif
3340:          
3341:          // Register: EEDATA
3342:          extern volatile unsigned char           EEDATA              @ 0xFA8;
3343:          #ifndef _LIB_BUILD
3344:          asm("EEDATA equ 0FA8h");
3345:          #endif
3346:          
3347:          // Register: EEADR
3348:          extern volatile unsigned char           EEADR               @ 0xFA9;
3349:          #ifndef _LIB_BUILD
3350:          asm("EEADR equ 0FA9h");
3351:          #endif
3352:          
3353:          // Register: RCSTA
3354:          extern volatile unsigned char           RCSTA               @ 0xFAB;
3355:          #ifndef _LIB_BUILD
3356:          asm("RCSTA equ 0FABh");
3357:          #endif
3358:          // aliases
3359:          extern volatile unsigned char           RCSTA1              @ 0xFAB;
3360:          #ifndef _LIB_BUILD
3361:          asm("RCSTA1 equ 0FABh");
3362:          #endif
3363:          // bitfield definitions
3364:          typedef union {
3365:              struct {
3366:                  unsigned RX9D                   :1;
3367:                  unsigned OERR                   :1;
3368:                  unsigned FERR                   :1;
3369:                  unsigned ADDEN                  :1;
3370:                  unsigned CREN                   :1;
3371:                  unsigned SREN                   :1;
3372:                  unsigned RX9                    :1;
3373:                  unsigned SPEN                   :1;
3374:              };
3375:              struct {
3376:                  unsigned                        :3;
3377:                  unsigned ADEN                   :1;
3378:              };
3379:              struct {
3380:                  unsigned                        :5;
3381:                  unsigned SRENA                  :1;
3382:              };
3383:              struct {
3384:                  unsigned                        :6;
3385:                  unsigned RC8_9                  :1;
3386:              };
3387:              struct {
3388:                  unsigned                        :6;
3389:                  unsigned RC9                    :1;
3390:              };
3391:              struct {
3392:                  unsigned RCD8                   :1;
3393:              };
3394:          } RCSTAbits_t;
3395:          extern volatile RCSTAbits_t RCSTAbits @ 0xFAB;
3396:          // bitfield macros
3397:          #define _RCSTA_RX9D_POSN                                    0x0
3398:          #define _RCSTA_RX9D_POSITION                                0x0
3399:          #define _RCSTA_RX9D_SIZE                                    0x1
3400:          #define _RCSTA_RX9D_LENGTH                                  0x1
3401:          #define _RCSTA_RX9D_MASK                                    0x1
3402:          #define _RCSTA_OERR_POSN                                    0x1
3403:          #define _RCSTA_OERR_POSITION                                0x1
3404:          #define _RCSTA_OERR_SIZE                                    0x1
3405:          #define _RCSTA_OERR_LENGTH                                  0x1
3406:          #define _RCSTA_OERR_MASK                                    0x2
3407:          #define _RCSTA_FERR_POSN                                    0x2
3408:          #define _RCSTA_FERR_POSITION                                0x2
3409:          #define _RCSTA_FERR_SIZE                                    0x1
3410:          #define _RCSTA_FERR_LENGTH                                  0x1
3411:          #define _RCSTA_FERR_MASK                                    0x4
3412:          #define _RCSTA_ADDEN_POSN                                   0x3
3413:          #define _RCSTA_ADDEN_POSITION                               0x3
3414:          #define _RCSTA_ADDEN_SIZE                                   0x1
3415:          #define _RCSTA_ADDEN_LENGTH                                 0x1
3416:          #define _RCSTA_ADDEN_MASK                                   0x8
3417:          #define _RCSTA_CREN_POSN                                    0x4
3418:          #define _RCSTA_CREN_POSITION                                0x4
3419:          #define _RCSTA_CREN_SIZE                                    0x1
3420:          #define _RCSTA_CREN_LENGTH                                  0x1
3421:          #define _RCSTA_CREN_MASK                                    0x10
3422:          #define _RCSTA_SREN_POSN                                    0x5
3423:          #define _RCSTA_SREN_POSITION                                0x5
3424:          #define _RCSTA_SREN_SIZE                                    0x1
3425:          #define _RCSTA_SREN_LENGTH                                  0x1
3426:          #define _RCSTA_SREN_MASK                                    0x20
3427:          #define _RCSTA_RX9_POSN                                     0x6
3428:          #define _RCSTA_RX9_POSITION                                 0x6
3429:          #define _RCSTA_RX9_SIZE                                     0x1
3430:          #define _RCSTA_RX9_LENGTH                                   0x1
3431:          #define _RCSTA_RX9_MASK                                     0x40
3432:          #define _RCSTA_SPEN_POSN                                    0x7
3433:          #define _RCSTA_SPEN_POSITION                                0x7
3434:          #define _RCSTA_SPEN_SIZE                                    0x1
3435:          #define _RCSTA_SPEN_LENGTH                                  0x1
3436:          #define _RCSTA_SPEN_MASK                                    0x80
3437:          #define _RCSTA_ADEN_POSN                                    0x3
3438:          #define _RCSTA_ADEN_POSITION                                0x3
3439:          #define _RCSTA_ADEN_SIZE                                    0x1
3440:          #define _RCSTA_ADEN_LENGTH                                  0x1
3441:          #define _RCSTA_ADEN_MASK                                    0x8
3442:          #define _RCSTA_SRENA_POSN                                   0x5
3443:          #define _RCSTA_SRENA_POSITION                               0x5
3444:          #define _RCSTA_SRENA_SIZE                                   0x1
3445:          #define _RCSTA_SRENA_LENGTH                                 0x1
3446:          #define _RCSTA_SRENA_MASK                                   0x20
3447:          #define _RCSTA_RC8_9_POSN                                   0x6
3448:          #define _RCSTA_RC8_9_POSITION                               0x6
3449:          #define _RCSTA_RC8_9_SIZE                                   0x1
3450:          #define _RCSTA_RC8_9_LENGTH                                 0x1
3451:          #define _RCSTA_RC8_9_MASK                                   0x40
3452:          #define _RCSTA_RC9_POSN                                     0x6
3453:          #define _RCSTA_RC9_POSITION                                 0x6
3454:          #define _RCSTA_RC9_SIZE                                     0x1
3455:          #define _RCSTA_RC9_LENGTH                                   0x1
3456:          #define _RCSTA_RC9_MASK                                     0x40
3457:          #define _RCSTA_RCD8_POSN                                    0x0
3458:          #define _RCSTA_RCD8_POSITION                                0x0
3459:          #define _RCSTA_RCD8_SIZE                                    0x1
3460:          #define _RCSTA_RCD8_LENGTH                                  0x1
3461:          #define _RCSTA_RCD8_MASK                                    0x1
3462:          // alias bitfield definitions
3463:          typedef union {
3464:              struct {
3465:                  unsigned RX9D                   :1;
3466:                  unsigned OERR                   :1;
3467:                  unsigned FERR                   :1;
3468:                  unsigned ADDEN                  :1;
3469:                  unsigned CREN                   :1;
3470:                  unsigned SREN                   :1;
3471:                  unsigned RX9                    :1;
3472:                  unsigned SPEN                   :1;
3473:              };
3474:              struct {
3475:                  unsigned                        :3;
3476:                  unsigned ADEN                   :1;
3477:              };
3478:              struct {
3479:                  unsigned                        :5;
3480:                  unsigned SRENA                  :1;
3481:              };
3482:              struct {
3483:                  unsigned                        :6;
3484:                  unsigned RC8_9                  :1;
3485:              };
3486:              struct {
3487:                  unsigned                        :6;
3488:                  unsigned RC9                    :1;
3489:              };
3490:              struct {
3491:                  unsigned RCD8                   :1;
3492:              };
3493:          } RCSTA1bits_t;
3494:          extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAB;
3495:          // bitfield macros
3496:          #define _RCSTA1_RX9D_POSN                                   0x0
3497:          #define _RCSTA1_RX9D_POSITION                               0x0
3498:          #define _RCSTA1_RX9D_SIZE                                   0x1
3499:          #define _RCSTA1_RX9D_LENGTH                                 0x1
3500:          #define _RCSTA1_RX9D_MASK                                   0x1
3501:          #define _RCSTA1_OERR_POSN                                   0x1
3502:          #define _RCSTA1_OERR_POSITION                               0x1
3503:          #define _RCSTA1_OERR_SIZE                                   0x1
3504:          #define _RCSTA1_OERR_LENGTH                                 0x1
3505:          #define _RCSTA1_OERR_MASK                                   0x2
3506:          #define _RCSTA1_FERR_POSN                                   0x2
3507:          #define _RCSTA1_FERR_POSITION                               0x2
3508:          #define _RCSTA1_FERR_SIZE                                   0x1
3509:          #define _RCSTA1_FERR_LENGTH                                 0x1
3510:          #define _RCSTA1_FERR_MASK                                   0x4
3511:          #define _RCSTA1_ADDEN_POSN                                  0x3
3512:          #define _RCSTA1_ADDEN_POSITION                              0x3
3513:          #define _RCSTA1_ADDEN_SIZE                                  0x1
3514:          #define _RCSTA1_ADDEN_LENGTH                                0x1
3515:          #define _RCSTA1_ADDEN_MASK                                  0x8
3516:          #define _RCSTA1_CREN_POSN                                   0x4
3517:          #define _RCSTA1_CREN_POSITION                               0x4
3518:          #define _RCSTA1_CREN_SIZE                                   0x1
3519:          #define _RCSTA1_CREN_LENGTH                                 0x1
3520:          #define _RCSTA1_CREN_MASK                                   0x10
3521:          #define _RCSTA1_SREN_POSN                                   0x5
3522:          #define _RCSTA1_SREN_POSITION                               0x5
3523:          #define _RCSTA1_SREN_SIZE                                   0x1
3524:          #define _RCSTA1_SREN_LENGTH                                 0x1
3525:          #define _RCSTA1_SREN_MASK                                   0x20
3526:          #define _RCSTA1_RX9_POSN                                    0x6
3527:          #define _RCSTA1_RX9_POSITION                                0x6
3528:          #define _RCSTA1_RX9_SIZE                                    0x1
3529:          #define _RCSTA1_RX9_LENGTH                                  0x1
3530:          #define _RCSTA1_RX9_MASK                                    0x40
3531:          #define _RCSTA1_SPEN_POSN                                   0x7
3532:          #define _RCSTA1_SPEN_POSITION                               0x7
3533:          #define _RCSTA1_SPEN_SIZE                                   0x1
3534:          #define _RCSTA1_SPEN_LENGTH                                 0x1
3535:          #define _RCSTA1_SPEN_MASK                                   0x80
3536:          #define _RCSTA1_ADEN_POSN                                   0x3
3537:          #define _RCSTA1_ADEN_POSITION                               0x3
3538:          #define _RCSTA1_ADEN_SIZE                                   0x1
3539:          #define _RCSTA1_ADEN_LENGTH                                 0x1
3540:          #define _RCSTA1_ADEN_MASK                                   0x8
3541:          #define _RCSTA1_SRENA_POSN                                  0x5
3542:          #define _RCSTA1_SRENA_POSITION                              0x5
3543:          #define _RCSTA1_SRENA_SIZE                                  0x1
3544:          #define _RCSTA1_SRENA_LENGTH                                0x1
3545:          #define _RCSTA1_SRENA_MASK                                  0x20
3546:          #define _RCSTA1_RC8_9_POSN                                  0x6
3547:          #define _RCSTA1_RC8_9_POSITION                              0x6
3548:          #define _RCSTA1_RC8_9_SIZE                                  0x1
3549:          #define _RCSTA1_RC8_9_LENGTH                                0x1
3550:          #define _RCSTA1_RC8_9_MASK                                  0x40
3551:          #define _RCSTA1_RC9_POSN                                    0x6
3552:          #define _RCSTA1_RC9_POSITION                                0x6
3553:          #define _RCSTA1_RC9_SIZE                                    0x1
3554:          #define _RCSTA1_RC9_LENGTH                                  0x1
3555:          #define _RCSTA1_RC9_MASK                                    0x40
3556:          #define _RCSTA1_RCD8_POSN                                   0x0
3557:          #define _RCSTA1_RCD8_POSITION                               0x0
3558:          #define _RCSTA1_RCD8_SIZE                                   0x1
3559:          #define _RCSTA1_RCD8_LENGTH                                 0x1
3560:          #define _RCSTA1_RCD8_MASK                                   0x1
3561:          
3562:          // Register: TXSTA
3563:          extern volatile unsigned char           TXSTA               @ 0xFAC;
3564:          #ifndef _LIB_BUILD
3565:          asm("TXSTA equ 0FACh");
3566:          #endif
3567:          // aliases
3568:          extern volatile unsigned char           TXSTA1              @ 0xFAC;
3569:          #ifndef _LIB_BUILD
3570:          asm("TXSTA1 equ 0FACh");
3571:          #endif
3572:          // bitfield definitions
3573:          typedef union {
3574:              struct {
3575:                  unsigned TX9D                   :1;
3576:                  unsigned TRMT                   :1;
3577:                  unsigned BRGH                   :1;
3578:                  unsigned SENDB                  :1;
3579:                  unsigned SYNC                   :1;
3580:                  unsigned TXEN                   :1;
3581:                  unsigned TX9                    :1;
3582:                  unsigned CSRC                   :1;
3583:              };
3584:              struct {
3585:                  unsigned                        :2;
3586:                  unsigned BRGH1                  :1;
3587:              };
3588:              struct {
3589:                  unsigned                        :7;
3590:                  unsigned CSRC1                  :1;
3591:              };
3592:              struct {
3593:                  unsigned                        :3;
3594:                  unsigned SENDB1                 :1;
3595:              };
3596:              struct {
3597:                  unsigned                        :4;
3598:                  unsigned SYNC1                  :1;
3599:              };
3600:              struct {
3601:                  unsigned                        :1;
3602:                  unsigned TRMT1                  :1;
3603:              };
3604:              struct {
3605:                  unsigned                        :6;
3606:                  unsigned TX91                   :1;
3607:              };
3608:              struct {
3609:                  unsigned TX9D1                  :1;
3610:              };
3611:              struct {
3612:                  unsigned                        :5;
3613:                  unsigned TXEN1                  :1;
3614:              };
3615:              struct {
3616:                  unsigned                        :6;
3617:                  unsigned TX8_9                  :1;
3618:              };
3619:              struct {
3620:                  unsigned TXD8                   :1;
3621:              };
3622:          } TXSTAbits_t;
3623:          extern volatile TXSTAbits_t TXSTAbits @ 0xFAC;
3624:          // bitfield macros
3625:          #define _TXSTA_TX9D_POSN                                    0x0
3626:          #define _TXSTA_TX9D_POSITION                                0x0
3627:          #define _TXSTA_TX9D_SIZE                                    0x1
3628:          #define _TXSTA_TX9D_LENGTH                                  0x1
3629:          #define _TXSTA_TX9D_MASK                                    0x1
3630:          #define _TXSTA_TRMT_POSN                                    0x1
3631:          #define _TXSTA_TRMT_POSITION                                0x1
3632:          #define _TXSTA_TRMT_SIZE                                    0x1
3633:          #define _TXSTA_TRMT_LENGTH                                  0x1
3634:          #define _TXSTA_TRMT_MASK                                    0x2
3635:          #define _TXSTA_BRGH_POSN                                    0x2
3636:          #define _TXSTA_BRGH_POSITION                                0x2
3637:          #define _TXSTA_BRGH_SIZE                                    0x1
3638:          #define _TXSTA_BRGH_LENGTH                                  0x1
3639:          #define _TXSTA_BRGH_MASK                                    0x4
3640:          #define _TXSTA_SENDB_POSN                                   0x3
3641:          #define _TXSTA_SENDB_POSITION                               0x3
3642:          #define _TXSTA_SENDB_SIZE                                   0x1
3643:          #define _TXSTA_SENDB_LENGTH                                 0x1
3644:          #define _TXSTA_SENDB_MASK                                   0x8
3645:          #define _TXSTA_SYNC_POSN                                    0x4
3646:          #define _TXSTA_SYNC_POSITION                                0x4
3647:          #define _TXSTA_SYNC_SIZE                                    0x1
3648:          #define _TXSTA_SYNC_LENGTH                                  0x1
3649:          #define _TXSTA_SYNC_MASK                                    0x10
3650:          #define _TXSTA_TXEN_POSN                                    0x5
3651:          #define _TXSTA_TXEN_POSITION                                0x5
3652:          #define _TXSTA_TXEN_SIZE                                    0x1
3653:          #define _TXSTA_TXEN_LENGTH                                  0x1
3654:          #define _TXSTA_TXEN_MASK                                    0x20
3655:          #define _TXSTA_TX9_POSN                                     0x6
3656:          #define _TXSTA_TX9_POSITION                                 0x6
3657:          #define _TXSTA_TX9_SIZE                                     0x1
3658:          #define _TXSTA_TX9_LENGTH                                   0x1
3659:          #define _TXSTA_TX9_MASK                                     0x40
3660:          #define _TXSTA_CSRC_POSN                                    0x7
3661:          #define _TXSTA_CSRC_POSITION                                0x7
3662:          #define _TXSTA_CSRC_SIZE                                    0x1
3663:          #define _TXSTA_CSRC_LENGTH                                  0x1
3664:          #define _TXSTA_CSRC_MASK                                    0x80
3665:          #define _TXSTA_BRGH1_POSN                                   0x2
3666:          #define _TXSTA_BRGH1_POSITION                               0x2
3667:          #define _TXSTA_BRGH1_SIZE                                   0x1
3668:          #define _TXSTA_BRGH1_LENGTH                                 0x1
3669:          #define _TXSTA_BRGH1_MASK                                   0x4
3670:          #define _TXSTA_CSRC1_POSN                                   0x7
3671:          #define _TXSTA_CSRC1_POSITION                               0x7
3672:          #define _TXSTA_CSRC1_SIZE                                   0x1
3673:          #define _TXSTA_CSRC1_LENGTH                                 0x1
3674:          #define _TXSTA_CSRC1_MASK                                   0x80
3675:          #define _TXSTA_SENDB1_POSN                                  0x3
3676:          #define _TXSTA_SENDB1_POSITION                              0x3
3677:          #define _TXSTA_SENDB1_SIZE                                  0x1
3678:          #define _TXSTA_SENDB1_LENGTH                                0x1
3679:          #define _TXSTA_SENDB1_MASK                                  0x8
3680:          #define _TXSTA_SYNC1_POSN                                   0x4
3681:          #define _TXSTA_SYNC1_POSITION                               0x4
3682:          #define _TXSTA_SYNC1_SIZE                                   0x1
3683:          #define _TXSTA_SYNC1_LENGTH                                 0x1
3684:          #define _TXSTA_SYNC1_MASK                                   0x10
3685:          #define _TXSTA_TRMT1_POSN                                   0x1
3686:          #define _TXSTA_TRMT1_POSITION                               0x1
3687:          #define _TXSTA_TRMT1_SIZE                                   0x1
3688:          #define _TXSTA_TRMT1_LENGTH                                 0x1
3689:          #define _TXSTA_TRMT1_MASK                                   0x2
3690:          #define _TXSTA_TX91_POSN                                    0x6
3691:          #define _TXSTA_TX91_POSITION                                0x6
3692:          #define _TXSTA_TX91_SIZE                                    0x1
3693:          #define _TXSTA_TX91_LENGTH                                  0x1
3694:          #define _TXSTA_TX91_MASK                                    0x40
3695:          #define _TXSTA_TX9D1_POSN                                   0x0
3696:          #define _TXSTA_TX9D1_POSITION                               0x0
3697:          #define _TXSTA_TX9D1_SIZE                                   0x1
3698:          #define _TXSTA_TX9D1_LENGTH                                 0x1
3699:          #define _TXSTA_TX9D1_MASK                                   0x1
3700:          #define _TXSTA_TXEN1_POSN                                   0x5
3701:          #define _TXSTA_TXEN1_POSITION                               0x5
3702:          #define _TXSTA_TXEN1_SIZE                                   0x1
3703:          #define _TXSTA_TXEN1_LENGTH                                 0x1
3704:          #define _TXSTA_TXEN1_MASK                                   0x20
3705:          #define _TXSTA_TX8_9_POSN                                   0x6
3706:          #define _TXSTA_TX8_9_POSITION                               0x6
3707:          #define _TXSTA_TX8_9_SIZE                                   0x1
3708:          #define _TXSTA_TX8_9_LENGTH                                 0x1
3709:          #define _TXSTA_TX8_9_MASK                                   0x40
3710:          #define _TXSTA_TXD8_POSN                                    0x0
3711:          #define _TXSTA_TXD8_POSITION                                0x0
3712:          #define _TXSTA_TXD8_SIZE                                    0x1
3713:          #define _TXSTA_TXD8_LENGTH                                  0x1
3714:          #define _TXSTA_TXD8_MASK                                    0x1
3715:          // alias bitfield definitions
3716:          typedef union {
3717:              struct {
3718:                  unsigned TX9D                   :1;
3719:                  unsigned TRMT                   :1;
3720:                  unsigned BRGH                   :1;
3721:                  unsigned SENDB                  :1;
3722:                  unsigned SYNC                   :1;
3723:                  unsigned TXEN                   :1;
3724:                  unsigned TX9                    :1;
3725:                  unsigned CSRC                   :1;
3726:              };
3727:              struct {
3728:                  unsigned                        :2;
3729:                  unsigned BRGH1                  :1;
3730:              };
3731:              struct {
3732:                  unsigned                        :7;
3733:                  unsigned CSRC1                  :1;
3734:              };
3735:              struct {
3736:                  unsigned                        :3;
3737:                  unsigned SENDB1                 :1;
3738:              };
3739:              struct {
3740:                  unsigned                        :4;
3741:                  unsigned SYNC1                  :1;
3742:              };
3743:              struct {
3744:                  unsigned                        :1;
3745:                  unsigned TRMT1                  :1;
3746:              };
3747:              struct {
3748:                  unsigned                        :6;
3749:                  unsigned TX91                   :1;
3750:              };
3751:              struct {
3752:                  unsigned TX9D1                  :1;
3753:              };
3754:              struct {
3755:                  unsigned                        :5;
3756:                  unsigned TXEN1                  :1;
3757:              };
3758:              struct {
3759:                  unsigned                        :6;
3760:                  unsigned TX8_9                  :1;
3761:              };
3762:              struct {
3763:                  unsigned TXD8                   :1;
3764:              };
3765:          } TXSTA1bits_t;
3766:          extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAC;
3767:          // bitfield macros
3768:          #define _TXSTA1_TX9D_POSN                                   0x0
3769:          #define _TXSTA1_TX9D_POSITION                               0x0
3770:          #define _TXSTA1_TX9D_SIZE                                   0x1
3771:          #define _TXSTA1_TX9D_LENGTH                                 0x1
3772:          #define _TXSTA1_TX9D_MASK                                   0x1
3773:          #define _TXSTA1_TRMT_POSN                                   0x1
3774:          #define _TXSTA1_TRMT_POSITION                               0x1
3775:          #define _TXSTA1_TRMT_SIZE                                   0x1
3776:          #define _TXSTA1_TRMT_LENGTH                                 0x1
3777:          #define _TXSTA1_TRMT_MASK                                   0x2
3778:          #define _TXSTA1_BRGH_POSN                                   0x2
3779:          #define _TXSTA1_BRGH_POSITION                               0x2
3780:          #define _TXSTA1_BRGH_SIZE                                   0x1
3781:          #define _TXSTA1_BRGH_LENGTH                                 0x1
3782:          #define _TXSTA1_BRGH_MASK                                   0x4
3783:          #define _TXSTA1_SENDB_POSN                                  0x3
3784:          #define _TXSTA1_SENDB_POSITION                              0x3
3785:          #define _TXSTA1_SENDB_SIZE                                  0x1
3786:          #define _TXSTA1_SENDB_LENGTH                                0x1
3787:          #define _TXSTA1_SENDB_MASK                                  0x8
3788:          #define _TXSTA1_SYNC_POSN                                   0x4
3789:          #define _TXSTA1_SYNC_POSITION                               0x4
3790:          #define _TXSTA1_SYNC_SIZE                                   0x1
3791:          #define _TXSTA1_SYNC_LENGTH                                 0x1
3792:          #define _TXSTA1_SYNC_MASK                                   0x10
3793:          #define _TXSTA1_TXEN_POSN                                   0x5
3794:          #define _TXSTA1_TXEN_POSITION                               0x5
3795:          #define _TXSTA1_TXEN_SIZE                                   0x1
3796:          #define _TXSTA1_TXEN_LENGTH                                 0x1
3797:          #define _TXSTA1_TXEN_MASK                                   0x20
3798:          #define _TXSTA1_TX9_POSN                                    0x6
3799:          #define _TXSTA1_TX9_POSITION                                0x6
3800:          #define _TXSTA1_TX9_SIZE                                    0x1
3801:          #define _TXSTA1_TX9_LENGTH                                  0x1
3802:          #define _TXSTA1_TX9_MASK                                    0x40
3803:          #define _TXSTA1_CSRC_POSN                                   0x7
3804:          #define _TXSTA1_CSRC_POSITION                               0x7
3805:          #define _TXSTA1_CSRC_SIZE                                   0x1
3806:          #define _TXSTA1_CSRC_LENGTH                                 0x1
3807:          #define _TXSTA1_CSRC_MASK                                   0x80
3808:          #define _TXSTA1_BRGH1_POSN                                  0x2
3809:          #define _TXSTA1_BRGH1_POSITION                              0x2
3810:          #define _TXSTA1_BRGH1_SIZE                                  0x1
3811:          #define _TXSTA1_BRGH1_LENGTH                                0x1
3812:          #define _TXSTA1_BRGH1_MASK                                  0x4
3813:          #define _TXSTA1_CSRC1_POSN                                  0x7
3814:          #define _TXSTA1_CSRC1_POSITION                              0x7
3815:          #define _TXSTA1_CSRC1_SIZE                                  0x1
3816:          #define _TXSTA1_CSRC1_LENGTH                                0x1
3817:          #define _TXSTA1_CSRC1_MASK                                  0x80
3818:          #define _TXSTA1_SENDB1_POSN                                 0x3
3819:          #define _TXSTA1_SENDB1_POSITION                             0x3
3820:          #define _TXSTA1_SENDB1_SIZE                                 0x1
3821:          #define _TXSTA1_SENDB1_LENGTH                               0x1
3822:          #define _TXSTA1_SENDB1_MASK                                 0x8
3823:          #define _TXSTA1_SYNC1_POSN                                  0x4
3824:          #define _TXSTA1_SYNC1_POSITION                              0x4
3825:          #define _TXSTA1_SYNC1_SIZE                                  0x1
3826:          #define _TXSTA1_SYNC1_LENGTH                                0x1
3827:          #define _TXSTA1_SYNC1_MASK                                  0x10
3828:          #define _TXSTA1_TRMT1_POSN                                  0x1
3829:          #define _TXSTA1_TRMT1_POSITION                              0x1
3830:          #define _TXSTA1_TRMT1_SIZE                                  0x1
3831:          #define _TXSTA1_TRMT1_LENGTH                                0x1
3832:          #define _TXSTA1_TRMT1_MASK                                  0x2
3833:          #define _TXSTA1_TX91_POSN                                   0x6
3834:          #define _TXSTA1_TX91_POSITION                               0x6
3835:          #define _TXSTA1_TX91_SIZE                                   0x1
3836:          #define _TXSTA1_TX91_LENGTH                                 0x1
3837:          #define _TXSTA1_TX91_MASK                                   0x40
3838:          #define _TXSTA1_TX9D1_POSN                                  0x0
3839:          #define _TXSTA1_TX9D1_POSITION                              0x0
3840:          #define _TXSTA1_TX9D1_SIZE                                  0x1
3841:          #define _TXSTA1_TX9D1_LENGTH                                0x1
3842:          #define _TXSTA1_TX9D1_MASK                                  0x1
3843:          #define _TXSTA1_TXEN1_POSN                                  0x5
3844:          #define _TXSTA1_TXEN1_POSITION                              0x5
3845:          #define _TXSTA1_TXEN1_SIZE                                  0x1
3846:          #define _TXSTA1_TXEN1_LENGTH                                0x1
3847:          #define _TXSTA1_TXEN1_MASK                                  0x20
3848:          #define _TXSTA1_TX8_9_POSN                                  0x6
3849:          #define _TXSTA1_TX8_9_POSITION                              0x6
3850:          #define _TXSTA1_TX8_9_SIZE                                  0x1
3851:          #define _TXSTA1_TX8_9_LENGTH                                0x1
3852:          #define _TXSTA1_TX8_9_MASK                                  0x40
3853:          #define _TXSTA1_TXD8_POSN                                   0x0
3854:          #define _TXSTA1_TXD8_POSITION                               0x0
3855:          #define _TXSTA1_TXD8_SIZE                                   0x1
3856:          #define _TXSTA1_TXD8_LENGTH                                 0x1
3857:          #define _TXSTA1_TXD8_MASK                                   0x1
3858:          
3859:          // Register: TXREG
3860:          extern volatile unsigned char           TXREG               @ 0xFAD;
3861:          #ifndef _LIB_BUILD
3862:          asm("TXREG equ 0FADh");
3863:          #endif
3864:          // aliases
3865:          extern volatile unsigned char           TXREG1              @ 0xFAD;
3866:          #ifndef _LIB_BUILD
3867:          asm("TXREG1 equ 0FADh");
3868:          #endif
3869:          
3870:          // Register: RCREG
3871:          extern volatile unsigned char           RCREG               @ 0xFAE;
3872:          #ifndef _LIB_BUILD
3873:          asm("RCREG equ 0FAEh");
3874:          #endif
3875:          // aliases
3876:          extern volatile unsigned char           RCREG1              @ 0xFAE;
3877:          #ifndef _LIB_BUILD
3878:          asm("RCREG1 equ 0FAEh");
3879:          #endif
3880:          
3881:          // Register: SPBRG
3882:          extern volatile unsigned char           SPBRG               @ 0xFAF;
3883:          #ifndef _LIB_BUILD
3884:          asm("SPBRG equ 0FAFh");
3885:          #endif
3886:          // aliases
3887:          extern volatile unsigned char           SPBRG1              @ 0xFAF;
3888:          #ifndef _LIB_BUILD
3889:          asm("SPBRG1 equ 0FAFh");
3890:          #endif
3891:          
3892:          // Register: SPBRGH
3893:          extern volatile unsigned char           SPBRGH              @ 0xFB0;
3894:          #ifndef _LIB_BUILD
3895:          asm("SPBRGH equ 0FB0h");
3896:          #endif
3897:          
3898:          // Register: T3CON
3899:          extern volatile unsigned char           T3CON               @ 0xFB1;
3900:          #ifndef _LIB_BUILD
3901:          asm("T3CON equ 0FB1h");
3902:          #endif
3903:          // bitfield definitions
3904:          typedef union {
3905:              struct {
3906:                  unsigned                        :2;
3907:                  unsigned NOT_T3SYNC             :1;
3908:              };
3909:              struct {
3910:                  unsigned TMR3ON                 :1;
3911:                  unsigned TMR3CS                 :1;
3912:                  unsigned nT3SYNC                :1;
3913:                  unsigned T3CCP1                 :1;
3914:                  unsigned T3CKPS                 :2;
3915:                  unsigned T3CCP2                 :1;
3916:                  unsigned RD16                   :1;
3917:              };
3918:              struct {
3919:                  unsigned                        :2;
3920:                  unsigned T3SYNC                 :1;
3921:                  unsigned                        :1;
3922:                  unsigned T3CKPS0                :1;
3923:                  unsigned T3CKPS1                :1;
3924:              };
3925:              struct {
3926:                  unsigned                        :7;
3927:                  unsigned RD163                  :1;
3928:              };
3929:              struct {
3930:                  unsigned                        :3;
3931:                  unsigned SOSCEN3                :1;
3932:              };
3933:              struct {
3934:                  unsigned                        :7;
3935:                  unsigned T3RD16                 :1;
3936:              };
3937:          } T3CONbits_t;
3938:          extern volatile T3CONbits_t T3CONbits @ 0xFB1;
3939:          // bitfield macros
3940:          #define _T3CON_NOT_T3SYNC_POSN                              0x2
3941:          #define _T3CON_NOT_T3SYNC_POSITION                          0x2
3942:          #define _T3CON_NOT_T3SYNC_SIZE                              0x1
3943:          #define _T3CON_NOT_T3SYNC_LENGTH                            0x1
3944:          #define _T3CON_NOT_T3SYNC_MASK                              0x4
3945:          #define _T3CON_TMR3ON_POSN                                  0x0
3946:          #define _T3CON_TMR3ON_POSITION                              0x0
3947:          #define _T3CON_TMR3ON_SIZE                                  0x1
3948:          #define _T3CON_TMR3ON_LENGTH                                0x1
3949:          #define _T3CON_TMR3ON_MASK                                  0x1
3950:          #define _T3CON_TMR3CS_POSN                                  0x1
3951:          #define _T3CON_TMR3CS_POSITION                              0x1
3952:          #define _T3CON_TMR3CS_SIZE                                  0x1
3953:          #define _T3CON_TMR3CS_LENGTH                                0x1
3954:          #define _T3CON_TMR3CS_MASK                                  0x2
3955:          #define _T3CON_nT3SYNC_POSN                                 0x2
3956:          #define _T3CON_nT3SYNC_POSITION                             0x2
3957:          #define _T3CON_nT3SYNC_SIZE                                 0x1
3958:          #define _T3CON_nT3SYNC_LENGTH                               0x1
3959:          #define _T3CON_nT3SYNC_MASK                                 0x4
3960:          #define _T3CON_T3CCP1_POSN                                  0x3
3961:          #define _T3CON_T3CCP1_POSITION                              0x3
3962:          #define _T3CON_T3CCP1_SIZE                                  0x1
3963:          #define _T3CON_T3CCP1_LENGTH                                0x1
3964:          #define _T3CON_T3CCP1_MASK                                  0x8
3965:          #define _T3CON_T3CKPS_POSN                                  0x4
3966:          #define _T3CON_T3CKPS_POSITION                              0x4
3967:          #define _T3CON_T3CKPS_SIZE                                  0x2
3968:          #define _T3CON_T3CKPS_LENGTH                                0x2
3969:          #define _T3CON_T3CKPS_MASK                                  0x30
3970:          #define _T3CON_T3CCP2_POSN                                  0x6
3971:          #define _T3CON_T3CCP2_POSITION                              0x6
3972:          #define _T3CON_T3CCP2_SIZE                                  0x1
3973:          #define _T3CON_T3CCP2_LENGTH                                0x1
3974:          #define _T3CON_T3CCP2_MASK                                  0x40
3975:          #define _T3CON_RD16_POSN                                    0x7
3976:          #define _T3CON_RD16_POSITION                                0x7
3977:          #define _T3CON_RD16_SIZE                                    0x1
3978:          #define _T3CON_RD16_LENGTH                                  0x1
3979:          #define _T3CON_RD16_MASK                                    0x80
3980:          #define _T3CON_T3SYNC_POSN                                  0x2
3981:          #define _T3CON_T3SYNC_POSITION                              0x2
3982:          #define _T3CON_T3SYNC_SIZE                                  0x1
3983:          #define _T3CON_T3SYNC_LENGTH                                0x1
3984:          #define _T3CON_T3SYNC_MASK                                  0x4
3985:          #define _T3CON_T3CKPS0_POSN                                 0x4
3986:          #define _T3CON_T3CKPS0_POSITION                             0x4
3987:          #define _T3CON_T3CKPS0_SIZE                                 0x1
3988:          #define _T3CON_T3CKPS0_LENGTH                               0x1
3989:          #define _T3CON_T3CKPS0_MASK                                 0x10
3990:          #define _T3CON_T3CKPS1_POSN                                 0x5
3991:          #define _T3CON_T3CKPS1_POSITION                             0x5
3992:          #define _T3CON_T3CKPS1_SIZE                                 0x1
3993:          #define _T3CON_T3CKPS1_LENGTH                               0x1
3994:          #define _T3CON_T3CKPS1_MASK                                 0x20
3995:          #define _T3CON_RD163_POSN                                   0x7
3996:          #define _T3CON_RD163_POSITION                               0x7
3997:          #define _T3CON_RD163_SIZE                                   0x1
3998:          #define _T3CON_RD163_LENGTH                                 0x1
3999:          #define _T3CON_RD163_MASK                                   0x80
4000:          #define _T3CON_SOSCEN3_POSN                                 0x3
4001:          #define _T3CON_SOSCEN3_POSITION                             0x3
4002:          #define _T3CON_SOSCEN3_SIZE                                 0x1
4003:          #define _T3CON_SOSCEN3_LENGTH                               0x1
4004:          #define _T3CON_SOSCEN3_MASK                                 0x8
4005:          #define _T3CON_T3RD16_POSN                                  0x7
4006:          #define _T3CON_T3RD16_POSITION                              0x7
4007:          #define _T3CON_T3RD16_SIZE                                  0x1
4008:          #define _T3CON_T3RD16_LENGTH                                0x1
4009:          #define _T3CON_T3RD16_MASK                                  0x80
4010:          
4011:          // Register: TMR3
4012:          extern volatile unsigned short          TMR3                @ 0xFB2;
4013:          #ifndef _LIB_BUILD
4014:          asm("TMR3 equ 0FB2h");
4015:          #endif
4016:          
4017:          // Register: TMR3L
4018:          extern volatile unsigned char           TMR3L               @ 0xFB2;
4019:          #ifndef _LIB_BUILD
4020:          asm("TMR3L equ 0FB2h");
4021:          #endif
4022:          
4023:          // Register: TMR3H
4024:          extern volatile unsigned char           TMR3H               @ 0xFB3;
4025:          #ifndef _LIB_BUILD
4026:          asm("TMR3H equ 0FB3h");
4027:          #endif
4028:          
4029:          // Register: CMCON
4030:          extern volatile unsigned char           CMCON               @ 0xFB4;
4031:          #ifndef _LIB_BUILD
4032:          asm("CMCON equ 0FB4h");
4033:          #endif
4034:          // bitfield definitions
4035:          typedef union {
4036:              struct {
4037:                  unsigned CM                     :3;
4038:                  unsigned CIS                    :1;
4039:                  unsigned C1INV                  :1;
4040:                  unsigned C2INV                  :1;
4041:                  unsigned C1OUT                  :1;
4042:                  unsigned C2OUT                  :1;
4043:              };
4044:              struct {
4045:                  unsigned CM0                    :1;
4046:                  unsigned CM1                    :1;
4047:                  unsigned CM2                    :1;
4048:              };
4049:              struct {
4050:                  unsigned CMEN0                  :1;
4051:              };
4052:              struct {
4053:                  unsigned                        :1;
4054:                  unsigned CMEN1                  :1;
4055:              };
4056:              struct {
4057:                  unsigned                        :2;
4058:                  unsigned CMEN2                  :1;
4059:              };
4060:          } CMCONbits_t;
4061:          extern volatile CMCONbits_t CMCONbits @ 0xFB4;
4062:          // bitfield macros
4063:          #define _CMCON_CM_POSN                                      0x0
4064:          #define _CMCON_CM_POSITION                                  0x0
4065:          #define _CMCON_CM_SIZE                                      0x3
4066:          #define _CMCON_CM_LENGTH                                    0x3
4067:          #define _CMCON_CM_MASK                                      0x7
4068:          #define _CMCON_CIS_POSN                                     0x3
4069:          #define _CMCON_CIS_POSITION                                 0x3
4070:          #define _CMCON_CIS_SIZE                                     0x1
4071:          #define _CMCON_CIS_LENGTH                                   0x1
4072:          #define _CMCON_CIS_MASK                                     0x8
4073:          #define _CMCON_C1INV_POSN                                   0x4
4074:          #define _CMCON_C1INV_POSITION                               0x4
4075:          #define _CMCON_C1INV_SIZE                                   0x1
4076:          #define _CMCON_C1INV_LENGTH                                 0x1
4077:          #define _CMCON_C1INV_MASK                                   0x10
4078:          #define _CMCON_C2INV_POSN                                   0x5
4079:          #define _CMCON_C2INV_POSITION                               0x5
4080:          #define _CMCON_C2INV_SIZE                                   0x1
4081:          #define _CMCON_C2INV_LENGTH                                 0x1
4082:          #define _CMCON_C2INV_MASK                                   0x20
4083:          #define _CMCON_C1OUT_POSN                                   0x6
4084:          #define _CMCON_C1OUT_POSITION                               0x6
4085:          #define _CMCON_C1OUT_SIZE                                   0x1
4086:          #define _CMCON_C1OUT_LENGTH                                 0x1
4087:          #define _CMCON_C1OUT_MASK                                   0x40
4088:          #define _CMCON_C2OUT_POSN                                   0x7
4089:          #define _CMCON_C2OUT_POSITION                               0x7
4090:          #define _CMCON_C2OUT_SIZE                                   0x1
4091:          #define _CMCON_C2OUT_LENGTH                                 0x1
4092:          #define _CMCON_C2OUT_MASK                                   0x80
4093:          #define _CMCON_CM0_POSN                                     0x0
4094:          #define _CMCON_CM0_POSITION                                 0x0
4095:          #define _CMCON_CM0_SIZE                                     0x1
4096:          #define _CMCON_CM0_LENGTH                                   0x1
4097:          #define _CMCON_CM0_MASK                                     0x1
4098:          #define _CMCON_CM1_POSN                                     0x1
4099:          #define _CMCON_CM1_POSITION                                 0x1
4100:          #define _CMCON_CM1_SIZE                                     0x1
4101:          #define _CMCON_CM1_LENGTH                                   0x1
4102:          #define _CMCON_CM1_MASK                                     0x2
4103:          #define _CMCON_CM2_POSN                                     0x2
4104:          #define _CMCON_CM2_POSITION                                 0x2
4105:          #define _CMCON_CM2_SIZE                                     0x1
4106:          #define _CMCON_CM2_LENGTH                                   0x1
4107:          #define _CMCON_CM2_MASK                                     0x4
4108:          #define _CMCON_CMEN0_POSN                                   0x0
4109:          #define _CMCON_CMEN0_POSITION                               0x0
4110:          #define _CMCON_CMEN0_SIZE                                   0x1
4111:          #define _CMCON_CMEN0_LENGTH                                 0x1
4112:          #define _CMCON_CMEN0_MASK                                   0x1
4113:          #define _CMCON_CMEN1_POSN                                   0x1
4114:          #define _CMCON_CMEN1_POSITION                               0x1
4115:          #define _CMCON_CMEN1_SIZE                                   0x1
4116:          #define _CMCON_CMEN1_LENGTH                                 0x1
4117:          #define _CMCON_CMEN1_MASK                                   0x2
4118:          #define _CMCON_CMEN2_POSN                                   0x2
4119:          #define _CMCON_CMEN2_POSITION                               0x2
4120:          #define _CMCON_CMEN2_SIZE                                   0x1
4121:          #define _CMCON_CMEN2_LENGTH                                 0x1
4122:          #define _CMCON_CMEN2_MASK                                   0x4
4123:          
4124:          // Register: CVRCON
4125:          extern volatile unsigned char           CVRCON              @ 0xFB5;
4126:          #ifndef _LIB_BUILD
4127:          asm("CVRCON equ 0FB5h");
4128:          #endif
4129:          // bitfield definitions
4130:          typedef union {
4131:              struct {
4132:                  unsigned CVR                    :4;
4133:                  unsigned CVRSS                  :1;
4134:                  unsigned CVRR                   :1;
4135:                  unsigned CVROE                  :1;
4136:                  unsigned CVREN                  :1;
4137:              };
4138:              struct {
4139:                  unsigned CVR0                   :1;
4140:                  unsigned CVR1                   :1;
4141:                  unsigned CVR2                   :1;
4142:                  unsigned CVR3                   :1;
4143:              };
4144:              struct {
4145:                  unsigned                        :6;
4146:                  unsigned CVROEN                 :1;
4147:              };
4148:          } CVRCONbits_t;
4149:          extern volatile CVRCONbits_t CVRCONbits @ 0xFB5;
4150:          // bitfield macros
4151:          #define _CVRCON_CVR_POSN                                    0x0
4152:          #define _CVRCON_CVR_POSITION                                0x0
4153:          #define _CVRCON_CVR_SIZE                                    0x4
4154:          #define _CVRCON_CVR_LENGTH                                  0x4
4155:          #define _CVRCON_CVR_MASK                                    0xF
4156:          #define _CVRCON_CVRSS_POSN                                  0x4
4157:          #define _CVRCON_CVRSS_POSITION                              0x4
4158:          #define _CVRCON_CVRSS_SIZE                                  0x1
4159:          #define _CVRCON_CVRSS_LENGTH                                0x1
4160:          #define _CVRCON_CVRSS_MASK                                  0x10
4161:          #define _CVRCON_CVRR_POSN                                   0x5
4162:          #define _CVRCON_CVRR_POSITION                               0x5
4163:          #define _CVRCON_CVRR_SIZE                                   0x1
4164:          #define _CVRCON_CVRR_LENGTH                                 0x1
4165:          #define _CVRCON_CVRR_MASK                                   0x20
4166:          #define _CVRCON_CVROE_POSN                                  0x6
4167:          #define _CVRCON_CVROE_POSITION                              0x6
4168:          #define _CVRCON_CVROE_SIZE                                  0x1
4169:          #define _CVRCON_CVROE_LENGTH                                0x1
4170:          #define _CVRCON_CVROE_MASK                                  0x40
4171:          #define _CVRCON_CVREN_POSN                                  0x7
4172:          #define _CVRCON_CVREN_POSITION                              0x7
4173:          #define _CVRCON_CVREN_SIZE                                  0x1
4174:          #define _CVRCON_CVREN_LENGTH                                0x1
4175:          #define _CVRCON_CVREN_MASK                                  0x80
4176:          #define _CVRCON_CVR0_POSN                                   0x0
4177:          #define _CVRCON_CVR0_POSITION                               0x0
4178:          #define _CVRCON_CVR0_SIZE                                   0x1
4179:          #define _CVRCON_CVR0_LENGTH                                 0x1
4180:          #define _CVRCON_CVR0_MASK                                   0x1
4181:          #define _CVRCON_CVR1_POSN                                   0x1
4182:          #define _CVRCON_CVR1_POSITION                               0x1
4183:          #define _CVRCON_CVR1_SIZE                                   0x1
4184:          #define _CVRCON_CVR1_LENGTH                                 0x1
4185:          #define _CVRCON_CVR1_MASK                                   0x2
4186:          #define _CVRCON_CVR2_POSN                                   0x2
4187:          #define _CVRCON_CVR2_POSITION                               0x2
4188:          #define _CVRCON_CVR2_SIZE                                   0x1
4189:          #define _CVRCON_CVR2_LENGTH                                 0x1
4190:          #define _CVRCON_CVR2_MASK                                   0x4
4191:          #define _CVRCON_CVR3_POSN                                   0x3
4192:          #define _CVRCON_CVR3_POSITION                               0x3
4193:          #define _CVRCON_CVR3_SIZE                                   0x1
4194:          #define _CVRCON_CVR3_LENGTH                                 0x1
4195:          #define _CVRCON_CVR3_MASK                                   0x8
4196:          #define _CVRCON_CVROEN_POSN                                 0x6
4197:          #define _CVRCON_CVROEN_POSITION                             0x6
4198:          #define _CVRCON_CVROEN_SIZE                                 0x1
4199:          #define _CVRCON_CVROEN_LENGTH                               0x1
4200:          #define _CVRCON_CVROEN_MASK                                 0x40
4201:          
4202:          // Register: ECCP1AS
4203:          extern volatile unsigned char           ECCP1AS             @ 0xFB6;
4204:          #ifndef _LIB_BUILD
4205:          asm("ECCP1AS equ 0FB6h");
4206:          #endif
4207:          // aliases
4208:          extern volatile unsigned char           ECCPAS              @ 0xFB6;
4209:          #ifndef _LIB_BUILD
4210:          asm("ECCPAS equ 0FB6h");
4211:          #endif
4212:          // bitfield definitions
4213:          typedef union {
4214:              struct {
4215:                  unsigned PSSBD                  :2;
4216:                  unsigned PSSAC                  :2;
4217:                  unsigned ECCPAS                 :3;
4218:                  unsigned ECCPASE                :1;
4219:              };
4220:              struct {
4221:                  unsigned PSSBD0                 :1;
4222:                  unsigned PSSBD1                 :1;
4223:                  unsigned PSSAC0                 :1;
4224:                  unsigned PSSAC1                 :1;
4225:                  unsigned ECCPAS0                :1;
4226:                  unsigned ECCPAS1                :1;
4227:                  unsigned ECCPAS2                :1;
4228:              };
4229:          } ECCP1ASbits_t;
4230:          extern volatile ECCP1ASbits_t ECCP1ASbits @ 0xFB6;
4231:          // bitfield macros
4232:          #define _ECCP1AS_PSSBD_POSN                                 0x0
4233:          #define _ECCP1AS_PSSBD_POSITION                             0x0
4234:          #define _ECCP1AS_PSSBD_SIZE                                 0x2
4235:          #define _ECCP1AS_PSSBD_LENGTH                               0x2
4236:          #define _ECCP1AS_PSSBD_MASK                                 0x3
4237:          #define _ECCP1AS_PSSAC_POSN                                 0x2
4238:          #define _ECCP1AS_PSSAC_POSITION                             0x2
4239:          #define _ECCP1AS_PSSAC_SIZE                                 0x2
4240:          #define _ECCP1AS_PSSAC_LENGTH                               0x2
4241:          #define _ECCP1AS_PSSAC_MASK                                 0xC
4242:          #define _ECCP1AS_ECCPAS_POSN                                0x4
4243:          #define _ECCP1AS_ECCPAS_POSITION                            0x4
4244:          #define _ECCP1AS_ECCPAS_SIZE                                0x3
4245:          #define _ECCP1AS_ECCPAS_LENGTH                              0x3
4246:          #define _ECCP1AS_ECCPAS_MASK                                0x70
4247:          #define _ECCP1AS_ECCPASE_POSN                               0x7
4248:          #define _ECCP1AS_ECCPASE_POSITION                           0x7
4249:          #define _ECCP1AS_ECCPASE_SIZE                               0x1
4250:          #define _ECCP1AS_ECCPASE_LENGTH                             0x1
4251:          #define _ECCP1AS_ECCPASE_MASK                               0x80
4252:          #define _ECCP1AS_PSSBD0_POSN                                0x0
4253:          #define _ECCP1AS_PSSBD0_POSITION                            0x0
4254:          #define _ECCP1AS_PSSBD0_SIZE                                0x1
4255:          #define _ECCP1AS_PSSBD0_LENGTH                              0x1
4256:          #define _ECCP1AS_PSSBD0_MASK                                0x1
4257:          #define _ECCP1AS_PSSBD1_POSN                                0x1
4258:          #define _ECCP1AS_PSSBD1_POSITION                            0x1
4259:          #define _ECCP1AS_PSSBD1_SIZE                                0x1
4260:          #define _ECCP1AS_PSSBD1_LENGTH                              0x1
4261:          #define _ECCP1AS_PSSBD1_MASK                                0x2
4262:          #define _ECCP1AS_PSSAC0_POSN                                0x2
4263:          #define _ECCP1AS_PSSAC0_POSITION                            0x2
4264:          #define _ECCP1AS_PSSAC0_SIZE                                0x1
4265:          #define _ECCP1AS_PSSAC0_LENGTH                              0x1
4266:          #define _ECCP1AS_PSSAC0_MASK                                0x4
4267:          #define _ECCP1AS_PSSAC1_POSN                                0x3
4268:          #define _ECCP1AS_PSSAC1_POSITION                            0x3
4269:          #define _ECCP1AS_PSSAC1_SIZE                                0x1
4270:          #define _ECCP1AS_PSSAC1_LENGTH                              0x1
4271:          #define _ECCP1AS_PSSAC1_MASK                                0x8
4272:          #define _ECCP1AS_ECCPAS0_POSN                               0x4
4273:          #define _ECCP1AS_ECCPAS0_POSITION                           0x4
4274:          #define _ECCP1AS_ECCPAS0_SIZE                               0x1
4275:          #define _ECCP1AS_ECCPAS0_LENGTH                             0x1
4276:          #define _ECCP1AS_ECCPAS0_MASK                               0x10
4277:          #define _ECCP1AS_ECCPAS1_POSN                               0x5
4278:          #define _ECCP1AS_ECCPAS1_POSITION                           0x5
4279:          #define _ECCP1AS_ECCPAS1_SIZE                               0x1
4280:          #define _ECCP1AS_ECCPAS1_LENGTH                             0x1
4281:          #define _ECCP1AS_ECCPAS1_MASK                               0x20
4282:          #define _ECCP1AS_ECCPAS2_POSN                               0x6
4283:          #define _ECCP1AS_ECCPAS2_POSITION                           0x6
4284:          #define _ECCP1AS_ECCPAS2_SIZE                               0x1
4285:          #define _ECCP1AS_ECCPAS2_LENGTH                             0x1
4286:          #define _ECCP1AS_ECCPAS2_MASK                               0x40
4287:          // alias bitfield definitions
4288:          typedef union {
4289:              struct {
4290:                  unsigned PSSBD                  :2;
4291:                  unsigned PSSAC                  :2;
4292:                  unsigned ECCPAS                 :3;
4293:                  unsigned ECCPASE                :1;
4294:              };
4295:              struct {
4296:                  unsigned PSSBD0                 :1;
4297:                  unsigned PSSBD1                 :1;
4298:                  unsigned PSSAC0                 :1;
4299:                  unsigned PSSAC1                 :1;
4300:                  unsigned ECCPAS0                :1;
4301:                  unsigned ECCPAS1                :1;
4302:                  unsigned ECCPAS2                :1;
4303:              };
4304:          } ECCPASbits_t;
4305:          extern volatile ECCPASbits_t ECCPASbits @ 0xFB6;
4306:          // bitfield macros
4307:          #define _ECCPAS_PSSBD_POSN                                  0x0
4308:          #define _ECCPAS_PSSBD_POSITION                              0x0
4309:          #define _ECCPAS_PSSBD_SIZE                                  0x2
4310:          #define _ECCPAS_PSSBD_LENGTH                                0x2
4311:          #define _ECCPAS_PSSBD_MASK                                  0x3
4312:          #define _ECCPAS_PSSAC_POSN                                  0x2
4313:          #define _ECCPAS_PSSAC_POSITION                              0x2
4314:          #define _ECCPAS_PSSAC_SIZE                                  0x2
4315:          #define _ECCPAS_PSSAC_LENGTH                                0x2
4316:          #define _ECCPAS_PSSAC_MASK                                  0xC
4317:          #define _ECCPAS_ECCPAS_POSN                                 0x4
4318:          #define _ECCPAS_ECCPAS_POSITION                             0x4
4319:          #define _ECCPAS_ECCPAS_SIZE                                 0x3
4320:          #define _ECCPAS_ECCPAS_LENGTH                               0x3
4321:          #define _ECCPAS_ECCPAS_MASK                                 0x70
4322:          #define _ECCPAS_ECCPASE_POSN                                0x7
4323:          #define _ECCPAS_ECCPASE_POSITION                            0x7
4324:          #define _ECCPAS_ECCPASE_SIZE                                0x1
4325:          #define _ECCPAS_ECCPASE_LENGTH                              0x1
4326:          #define _ECCPAS_ECCPASE_MASK                                0x80
4327:          #define _ECCPAS_PSSBD0_POSN                                 0x0
4328:          #define _ECCPAS_PSSBD0_POSITION                             0x0
4329:          #define _ECCPAS_PSSBD0_SIZE                                 0x1
4330:          #define _ECCPAS_PSSBD0_LENGTH                               0x1
4331:          #define _ECCPAS_PSSBD0_MASK                                 0x1
4332:          #define _ECCPAS_PSSBD1_POSN                                 0x1
4333:          #define _ECCPAS_PSSBD1_POSITION                             0x1
4334:          #define _ECCPAS_PSSBD1_SIZE                                 0x1
4335:          #define _ECCPAS_PSSBD1_LENGTH                               0x1
4336:          #define _ECCPAS_PSSBD1_MASK                                 0x2
4337:          #define _ECCPAS_PSSAC0_POSN                                 0x2
4338:          #define _ECCPAS_PSSAC0_POSITION                             0x2
4339:          #define _ECCPAS_PSSAC0_SIZE                                 0x1
4340:          #define _ECCPAS_PSSAC0_LENGTH                               0x1
4341:          #define _ECCPAS_PSSAC0_MASK                                 0x4
4342:          #define _ECCPAS_PSSAC1_POSN                                 0x3
4343:          #define _ECCPAS_PSSAC1_POSITION                             0x3
4344:          #define _ECCPAS_PSSAC1_SIZE                                 0x1
4345:          #define _ECCPAS_PSSAC1_LENGTH                               0x1
4346:          #define _ECCPAS_PSSAC1_MASK                                 0x8
4347:          #define _ECCPAS_ECCPAS0_POSN                                0x4
4348:          #define _ECCPAS_ECCPAS0_POSITION                            0x4
4349:          #define _ECCPAS_ECCPAS0_SIZE                                0x1
4350:          #define _ECCPAS_ECCPAS0_LENGTH                              0x1
4351:          #define _ECCPAS_ECCPAS0_MASK                                0x10
4352:          #define _ECCPAS_ECCPAS1_POSN                                0x5
4353:          #define _ECCPAS_ECCPAS1_POSITION                            0x5
4354:          #define _ECCPAS_ECCPAS1_SIZE                                0x1
4355:          #define _ECCPAS_ECCPAS1_LENGTH                              0x1
4356:          #define _ECCPAS_ECCPAS1_MASK                                0x20
4357:          #define _ECCPAS_ECCPAS2_POSN                                0x6
4358:          #define _ECCPAS_ECCPAS2_POSITION                            0x6
4359:          #define _ECCPAS_ECCPAS2_SIZE                                0x1
4360:          #define _ECCPAS_ECCPAS2_LENGTH                              0x1
4361:          #define _ECCPAS_ECCPAS2_MASK                                0x40
4362:          
4363:          // Register: PWM1CON
4364:          extern volatile unsigned char           PWM1CON             @ 0xFB7;
4365:          #ifndef _LIB_BUILD
4366:          asm("PWM1CON equ 0FB7h");
4367:          #endif
4368:          // aliases
4369:          extern volatile unsigned char           ECCP1DEL            @ 0xFB7;
4370:          #ifndef _LIB_BUILD
4371:          asm("ECCP1DEL equ 0FB7h");
4372:          #endif
4373:          // bitfield definitions
4374:          typedef union {
4375:              struct {
4376:                  unsigned PDC                    :7;
4377:                  unsigned PRSEN                  :1;
4378:              };
4379:              struct {
4380:                  unsigned PDC0                   :1;
4381:                  unsigned PDC1                   :1;
4382:                  unsigned PDC2                   :1;
4383:                  unsigned PDC3                   :1;
4384:                  unsigned PDC4                   :1;
4385:                  unsigned PDC5                   :1;
4386:                  unsigned PDC6                   :1;
4387:              };
4388:          } PWM1CONbits_t;
4389:          extern volatile PWM1CONbits_t PWM1CONbits @ 0xFB7;
4390:          // bitfield macros
4391:          #define _PWM1CON_PDC_POSN                                   0x0
4392:          #define _PWM1CON_PDC_POSITION                               0x0
4393:          #define _PWM1CON_PDC_SIZE                                   0x7
4394:          #define _PWM1CON_PDC_LENGTH                                 0x7
4395:          #define _PWM1CON_PDC_MASK                                   0x7F
4396:          #define _PWM1CON_PRSEN_POSN                                 0x7
4397:          #define _PWM1CON_PRSEN_POSITION                             0x7
4398:          #define _PWM1CON_PRSEN_SIZE                                 0x1
4399:          #define _PWM1CON_PRSEN_LENGTH                               0x1
4400:          #define _PWM1CON_PRSEN_MASK                                 0x80
4401:          #define _PWM1CON_PDC0_POSN                                  0x0
4402:          #define _PWM1CON_PDC0_POSITION                              0x0
4403:          #define _PWM1CON_PDC0_SIZE                                  0x1
4404:          #define _PWM1CON_PDC0_LENGTH                                0x1
4405:          #define _PWM1CON_PDC0_MASK                                  0x1
4406:          #define _PWM1CON_PDC1_POSN                                  0x1
4407:          #define _PWM1CON_PDC1_POSITION                              0x1
4408:          #define _PWM1CON_PDC1_SIZE                                  0x1
4409:          #define _PWM1CON_PDC1_LENGTH                                0x1
4410:          #define _PWM1CON_PDC1_MASK                                  0x2
4411:          #define _PWM1CON_PDC2_POSN                                  0x2
4412:          #define _PWM1CON_PDC2_POSITION                              0x2
4413:          #define _PWM1CON_PDC2_SIZE                                  0x1
4414:          #define _PWM1CON_PDC2_LENGTH                                0x1
4415:          #define _PWM1CON_PDC2_MASK                                  0x4
4416:          #define _PWM1CON_PDC3_POSN                                  0x3
4417:          #define _PWM1CON_PDC3_POSITION                              0x3
4418:          #define _PWM1CON_PDC3_SIZE                                  0x1
4419:          #define _PWM1CON_PDC3_LENGTH                                0x1
4420:          #define _PWM1CON_PDC3_MASK                                  0x8
4421:          #define _PWM1CON_PDC4_POSN                                  0x4
4422:          #define _PWM1CON_PDC4_POSITION                              0x4
4423:          #define _PWM1CON_PDC4_SIZE                                  0x1
4424:          #define _PWM1CON_PDC4_LENGTH                                0x1
4425:          #define _PWM1CON_PDC4_MASK                                  0x10
4426:          #define _PWM1CON_PDC5_POSN                                  0x5
4427:          #define _PWM1CON_PDC5_POSITION                              0x5
4428:          #define _PWM1CON_PDC5_SIZE                                  0x1
4429:          #define _PWM1CON_PDC5_LENGTH                                0x1
4430:          #define _PWM1CON_PDC5_MASK                                  0x20
4431:          #define _PWM1CON_PDC6_POSN                                  0x6
4432:          #define _PWM1CON_PDC6_POSITION                              0x6
4433:          #define _PWM1CON_PDC6_SIZE                                  0x1
4434:          #define _PWM1CON_PDC6_LENGTH                                0x1
4435:          #define _PWM1CON_PDC6_MASK                                  0x40
4436:          // alias bitfield definitions
4437:          typedef union {
4438:              struct {
4439:                  unsigned PDC                    :7;
4440:                  unsigned PRSEN                  :1;
4441:              };
4442:              struct {
4443:                  unsigned PDC0                   :1;
4444:                  unsigned PDC1                   :1;
4445:                  unsigned PDC2                   :1;
4446:                  unsigned PDC3                   :1;
4447:                  unsigned PDC4                   :1;
4448:                  unsigned PDC5                   :1;
4449:                  unsigned PDC6                   :1;
4450:              };
4451:          } ECCP1DELbits_t;
4452:          extern volatile ECCP1DELbits_t ECCP1DELbits @ 0xFB7;
4453:          // bitfield macros
4454:          #define _ECCP1DEL_PDC_POSN                                  0x0
4455:          #define _ECCP1DEL_PDC_POSITION                              0x0
4456:          #define _ECCP1DEL_PDC_SIZE                                  0x7
4457:          #define _ECCP1DEL_PDC_LENGTH                                0x7
4458:          #define _ECCP1DEL_PDC_MASK                                  0x7F
4459:          #define _ECCP1DEL_PRSEN_POSN                                0x7
4460:          #define _ECCP1DEL_PRSEN_POSITION                            0x7
4461:          #define _ECCP1DEL_PRSEN_SIZE                                0x1
4462:          #define _ECCP1DEL_PRSEN_LENGTH                              0x1
4463:          #define _ECCP1DEL_PRSEN_MASK                                0x80
4464:          #define _ECCP1DEL_PDC0_POSN                                 0x0
4465:          #define _ECCP1DEL_PDC0_POSITION                             0x0
4466:          #define _ECCP1DEL_PDC0_SIZE                                 0x1
4467:          #define _ECCP1DEL_PDC0_LENGTH                               0x1
4468:          #define _ECCP1DEL_PDC0_MASK                                 0x1
4469:          #define _ECCP1DEL_PDC1_POSN                                 0x1
4470:          #define _ECCP1DEL_PDC1_POSITION                             0x1
4471:          #define _ECCP1DEL_PDC1_SIZE                                 0x1
4472:          #define _ECCP1DEL_PDC1_LENGTH                               0x1
4473:          #define _ECCP1DEL_PDC1_MASK                                 0x2
4474:          #define _ECCP1DEL_PDC2_POSN                                 0x2
4475:          #define _ECCP1DEL_PDC2_POSITION                             0x2
4476:          #define _ECCP1DEL_PDC2_SIZE                                 0x1
4477:          #define _ECCP1DEL_PDC2_LENGTH                               0x1
4478:          #define _ECCP1DEL_PDC2_MASK                                 0x4
4479:          #define _ECCP1DEL_PDC3_POSN                                 0x3
4480:          #define _ECCP1DEL_PDC3_POSITION                             0x3
4481:          #define _ECCP1DEL_PDC3_SIZE                                 0x1
4482:          #define _ECCP1DEL_PDC3_LENGTH                               0x1
4483:          #define _ECCP1DEL_PDC3_MASK                                 0x8
4484:          #define _ECCP1DEL_PDC4_POSN                                 0x4
4485:          #define _ECCP1DEL_PDC4_POSITION                             0x4
4486:          #define _ECCP1DEL_PDC4_SIZE                                 0x1
4487:          #define _ECCP1DEL_PDC4_LENGTH                               0x1
4488:          #define _ECCP1DEL_PDC4_MASK                                 0x10
4489:          #define _ECCP1DEL_PDC5_POSN                                 0x5
4490:          #define _ECCP1DEL_PDC5_POSITION                             0x5
4491:          #define _ECCP1DEL_PDC5_SIZE                                 0x1
4492:          #define _ECCP1DEL_PDC5_LENGTH                               0x1
4493:          #define _ECCP1DEL_PDC5_MASK                                 0x20
4494:          #define _ECCP1DEL_PDC6_POSN                                 0x6
4495:          #define _ECCP1DEL_PDC6_POSITION                             0x6
4496:          #define _ECCP1DEL_PDC6_SIZE                                 0x1
4497:          #define _ECCP1DEL_PDC6_LENGTH                               0x1
4498:          #define _ECCP1DEL_PDC6_MASK                                 0x40
4499:          
4500:          // Register: BAUDCON
4501:          extern volatile unsigned char           BAUDCON             @ 0xFB8;
4502:          #ifndef _LIB_BUILD
4503:          asm("BAUDCON equ 0FB8h");
4504:          #endif
4505:          // aliases
4506:          extern volatile unsigned char           BAUDCTL             @ 0xFB8;
4507:          #ifndef _LIB_BUILD
4508:          asm("BAUDCTL equ 0FB8h");
4509:          #endif
4510:          // bitfield definitions
4511:          typedef union {
4512:              struct {
4513:                  unsigned ABDEN                  :1;
4514:                  unsigned WUE                    :1;
4515:                  unsigned                        :1;
4516:                  unsigned BRG16                  :1;
4517:                  unsigned TXCKP                  :1;
4518:                  unsigned RXDTP                  :1;
4519:                  unsigned RCIDL                  :1;
4520:                  unsigned ABDOVF                 :1;
4521:              };
4522:              struct {
4523:                  unsigned                        :4;
4524:                  unsigned SCKP                   :1;
4525:                  unsigned                        :1;
4526:                  unsigned RCMT                   :1;
4527:              };
4528:              struct {
4529:                  unsigned                        :5;
4530:                  unsigned RXCKP                  :1;
4531:              };
4532:              struct {
4533:                  unsigned                        :1;
4534:                  unsigned W4E                    :1;
4535:              };
4536:          } BAUDCONbits_t;
4537:          extern volatile BAUDCONbits_t BAUDCONbits @ 0xFB8;
4538:          // bitfield macros
4539:          #define _BAUDCON_ABDEN_POSN                                 0x0
4540:          #define _BAUDCON_ABDEN_POSITION                             0x0
4541:          #define _BAUDCON_ABDEN_SIZE                                 0x1
4542:          #define _BAUDCON_ABDEN_LENGTH                               0x1
4543:          #define _BAUDCON_ABDEN_MASK                                 0x1
4544:          #define _BAUDCON_WUE_POSN                                   0x1
4545:          #define _BAUDCON_WUE_POSITION                               0x1
4546:          #define _BAUDCON_WUE_SIZE                                   0x1
4547:          #define _BAUDCON_WUE_LENGTH                                 0x1
4548:          #define _BAUDCON_WUE_MASK                                   0x2
4549:          #define _BAUDCON_BRG16_POSN                                 0x3
4550:          #define _BAUDCON_BRG16_POSITION                             0x3
4551:          #define _BAUDCON_BRG16_SIZE                                 0x1
4552:          #define _BAUDCON_BRG16_LENGTH                               0x1
4553:          #define _BAUDCON_BRG16_MASK                                 0x8
4554:          #define _BAUDCON_TXCKP_POSN                                 0x4
4555:          #define _BAUDCON_TXCKP_POSITION                             0x4
4556:          #define _BAUDCON_TXCKP_SIZE                                 0x1
4557:          #define _BAUDCON_TXCKP_LENGTH                               0x1
4558:          #define _BAUDCON_TXCKP_MASK                                 0x10
4559:          #define _BAUDCON_RXDTP_POSN                                 0x5
4560:          #define _BAUDCON_RXDTP_POSITION                             0x5
4561:          #define _BAUDCON_RXDTP_SIZE                                 0x1
4562:          #define _BAUDCON_RXDTP_LENGTH                               0x1
4563:          #define _BAUDCON_RXDTP_MASK                                 0x20
4564:          #define _BAUDCON_RCIDL_POSN                                 0x6
4565:          #define _BAUDCON_RCIDL_POSITION                             0x6
4566:          #define _BAUDCON_RCIDL_SIZE                                 0x1
4567:          #define _BAUDCON_RCIDL_LENGTH                               0x1
4568:          #define _BAUDCON_RCIDL_MASK                                 0x40
4569:          #define _BAUDCON_ABDOVF_POSN                                0x7
4570:          #define _BAUDCON_ABDOVF_POSITION                            0x7
4571:          #define _BAUDCON_ABDOVF_SIZE                                0x1
4572:          #define _BAUDCON_ABDOVF_LENGTH                              0x1
4573:          #define _BAUDCON_ABDOVF_MASK                                0x80
4574:          #define _BAUDCON_SCKP_POSN                                  0x4
4575:          #define _BAUDCON_SCKP_POSITION                              0x4
4576:          #define _BAUDCON_SCKP_SIZE                                  0x1
4577:          #define _BAUDCON_SCKP_LENGTH                                0x1
4578:          #define _BAUDCON_SCKP_MASK                                  0x10
4579:          #define _BAUDCON_RCMT_POSN                                  0x6
4580:          #define _BAUDCON_RCMT_POSITION                              0x6
4581:          #define _BAUDCON_RCMT_SIZE                                  0x1
4582:          #define _BAUDCON_RCMT_LENGTH                                0x1
4583:          #define _BAUDCON_RCMT_MASK                                  0x40
4584:          #define _BAUDCON_RXCKP_POSN                                 0x5
4585:          #define _BAUDCON_RXCKP_POSITION                             0x5
4586:          #define _BAUDCON_RXCKP_SIZE                                 0x1
4587:          #define _BAUDCON_RXCKP_LENGTH                               0x1
4588:          #define _BAUDCON_RXCKP_MASK                                 0x20
4589:          #define _BAUDCON_W4E_POSN                                   0x1
4590:          #define _BAUDCON_W4E_POSITION                               0x1
4591:          #define _BAUDCON_W4E_SIZE                                   0x1
4592:          #define _BAUDCON_W4E_LENGTH                                 0x1
4593:          #define _BAUDCON_W4E_MASK                                   0x2
4594:          // alias bitfield definitions
4595:          typedef union {
4596:              struct {
4597:                  unsigned ABDEN                  :1;
4598:                  unsigned WUE                    :1;
4599:                  unsigned                        :1;
4600:                  unsigned BRG16                  :1;
4601:                  unsigned TXCKP                  :1;
4602:                  unsigned RXDTP                  :1;
4603:                  unsigned RCIDL                  :1;
4604:                  unsigned ABDOVF                 :1;
4605:              };
4606:              struct {
4607:                  unsigned                        :4;
4608:                  unsigned SCKP                   :1;
4609:                  unsigned                        :1;
4610:                  unsigned RCMT                   :1;
4611:              };
4612:              struct {
4613:                  unsigned                        :5;
4614:                  unsigned RXCKP                  :1;
4615:              };
4616:              struct {
4617:                  unsigned                        :1;
4618:                  unsigned W4E                    :1;
4619:              };
4620:          } BAUDCTLbits_t;
4621:          extern volatile BAUDCTLbits_t BAUDCTLbits @ 0xFB8;
4622:          // bitfield macros
4623:          #define _BAUDCTL_ABDEN_POSN                                 0x0
4624:          #define _BAUDCTL_ABDEN_POSITION                             0x0
4625:          #define _BAUDCTL_ABDEN_SIZE                                 0x1
4626:          #define _BAUDCTL_ABDEN_LENGTH                               0x1
4627:          #define _BAUDCTL_ABDEN_MASK                                 0x1
4628:          #define _BAUDCTL_WUE_POSN                                   0x1
4629:          #define _BAUDCTL_WUE_POSITION                               0x1
4630:          #define _BAUDCTL_WUE_SIZE                                   0x1
4631:          #define _BAUDCTL_WUE_LENGTH                                 0x1
4632:          #define _BAUDCTL_WUE_MASK                                   0x2
4633:          #define _BAUDCTL_BRG16_POSN                                 0x3
4634:          #define _BAUDCTL_BRG16_POSITION                             0x3
4635:          #define _BAUDCTL_BRG16_SIZE                                 0x1
4636:          #define _BAUDCTL_BRG16_LENGTH                               0x1
4637:          #define _BAUDCTL_BRG16_MASK                                 0x8
4638:          #define _BAUDCTL_TXCKP_POSN                                 0x4
4639:          #define _BAUDCTL_TXCKP_POSITION                             0x4
4640:          #define _BAUDCTL_TXCKP_SIZE                                 0x1
4641:          #define _BAUDCTL_TXCKP_LENGTH                               0x1
4642:          #define _BAUDCTL_TXCKP_MASK                                 0x10
4643:          #define _BAUDCTL_RXDTP_POSN                                 0x5
4644:          #define _BAUDCTL_RXDTP_POSITION                             0x5
4645:          #define _BAUDCTL_RXDTP_SIZE                                 0x1
4646:          #define _BAUDCTL_RXDTP_LENGTH                               0x1
4647:          #define _BAUDCTL_RXDTP_MASK                                 0x20
4648:          #define _BAUDCTL_RCIDL_POSN                                 0x6
4649:          #define _BAUDCTL_RCIDL_POSITION                             0x6
4650:          #define _BAUDCTL_RCIDL_SIZE                                 0x1
4651:          #define _BAUDCTL_RCIDL_LENGTH                               0x1
4652:          #define _BAUDCTL_RCIDL_MASK                                 0x40
4653:          #define _BAUDCTL_ABDOVF_POSN                                0x7
4654:          #define _BAUDCTL_ABDOVF_POSITION                            0x7
4655:          #define _BAUDCTL_ABDOVF_SIZE                                0x1
4656:          #define _BAUDCTL_ABDOVF_LENGTH                              0x1
4657:          #define _BAUDCTL_ABDOVF_MASK                                0x80
4658:          #define _BAUDCTL_SCKP_POSN                                  0x4
4659:          #define _BAUDCTL_SCKP_POSITION                              0x4
4660:          #define _BAUDCTL_SCKP_SIZE                                  0x1
4661:          #define _BAUDCTL_SCKP_LENGTH                                0x1
4662:          #define _BAUDCTL_SCKP_MASK                                  0x10
4663:          #define _BAUDCTL_RCMT_POSN                                  0x6
4664:          #define _BAUDCTL_RCMT_POSITION                              0x6
4665:          #define _BAUDCTL_RCMT_SIZE                                  0x1
4666:          #define _BAUDCTL_RCMT_LENGTH                                0x1
4667:          #define _BAUDCTL_RCMT_MASK                                  0x40
4668:          #define _BAUDCTL_RXCKP_POSN                                 0x5
4669:          #define _BAUDCTL_RXCKP_POSITION                             0x5
4670:          #define _BAUDCTL_RXCKP_SIZE                                 0x1
4671:          #define _BAUDCTL_RXCKP_LENGTH                               0x1
4672:          #define _BAUDCTL_RXCKP_MASK                                 0x20
4673:          #define _BAUDCTL_W4E_POSN                                   0x1
4674:          #define _BAUDCTL_W4E_POSITION                               0x1
4675:          #define _BAUDCTL_W4E_SIZE                                   0x1
4676:          #define _BAUDCTL_W4E_LENGTH                                 0x1
4677:          #define _BAUDCTL_W4E_MASK                                   0x2
4678:          
4679:          // Register: CCP2CON
4680:          extern volatile unsigned char           CCP2CON             @ 0xFBA;
4681:          #ifndef _LIB_BUILD
4682:          asm("CCP2CON equ 0FBAh");
4683:          #endif
4684:          // bitfield definitions
4685:          typedef union {
4686:              struct {
4687:                  unsigned CCP2M                  :4;
4688:                  unsigned DC2B                   :2;
4689:              };
4690:              struct {
4691:                  unsigned CCP2M0                 :1;
4692:                  unsigned CCP2M1                 :1;
4693:                  unsigned CCP2M2                 :1;
4694:                  unsigned CCP2M3                 :1;
4695:                  unsigned CCP2Y                  :1;
4696:                  unsigned CCP2X                  :1;
4697:              };
4698:              struct {
4699:                  unsigned                        :4;
4700:                  unsigned DC2B0                  :1;
4701:                  unsigned DC2B1                  :1;
4702:              };
4703:          } CCP2CONbits_t;
4704:          extern volatile CCP2CONbits_t CCP2CONbits @ 0xFBA;
4705:          // bitfield macros
4706:          #define _CCP2CON_CCP2M_POSN                                 0x0
4707:          #define _CCP2CON_CCP2M_POSITION                             0x0
4708:          #define _CCP2CON_CCP2M_SIZE                                 0x4
4709:          #define _CCP2CON_CCP2M_LENGTH                               0x4
4710:          #define _CCP2CON_CCP2M_MASK                                 0xF
4711:          #define _CCP2CON_DC2B_POSN                                  0x4
4712:          #define _CCP2CON_DC2B_POSITION                              0x4
4713:          #define _CCP2CON_DC2B_SIZE                                  0x2
4714:          #define _CCP2CON_DC2B_LENGTH                                0x2
4715:          #define _CCP2CON_DC2B_MASK                                  0x30
4716:          #define _CCP2CON_CCP2M0_POSN                                0x0
4717:          #define _CCP2CON_CCP2M0_POSITION                            0x0
4718:          #define _CCP2CON_CCP2M0_SIZE                                0x1
4719:          #define _CCP2CON_CCP2M0_LENGTH                              0x1
4720:          #define _CCP2CON_CCP2M0_MASK                                0x1
4721:          #define _CCP2CON_CCP2M1_POSN                                0x1
4722:          #define _CCP2CON_CCP2M1_POSITION                            0x1
4723:          #define _CCP2CON_CCP2M1_SIZE                                0x1
4724:          #define _CCP2CON_CCP2M1_LENGTH                              0x1
4725:          #define _CCP2CON_CCP2M1_MASK                                0x2
4726:          #define _CCP2CON_CCP2M2_POSN                                0x2
4727:          #define _CCP2CON_CCP2M2_POSITION                            0x2
4728:          #define _CCP2CON_CCP2M2_SIZE                                0x1
4729:          #define _CCP2CON_CCP2M2_LENGTH                              0x1
4730:          #define _CCP2CON_CCP2M2_MASK                                0x4
4731:          #define _CCP2CON_CCP2M3_POSN                                0x3
4732:          #define _CCP2CON_CCP2M3_POSITION                            0x3
4733:          #define _CCP2CON_CCP2M3_SIZE                                0x1
4734:          #define _CCP2CON_CCP2M3_LENGTH                              0x1
4735:          #define _CCP2CON_CCP2M3_MASK                                0x8
4736:          #define _CCP2CON_CCP2Y_POSN                                 0x4
4737:          #define _CCP2CON_CCP2Y_POSITION                             0x4
4738:          #define _CCP2CON_CCP2Y_SIZE                                 0x1
4739:          #define _CCP2CON_CCP2Y_LENGTH                               0x1
4740:          #define _CCP2CON_CCP2Y_MASK                                 0x10
4741:          #define _CCP2CON_CCP2X_POSN                                 0x5
4742:          #define _CCP2CON_CCP2X_POSITION                             0x5
4743:          #define _CCP2CON_CCP2X_SIZE                                 0x1
4744:          #define _CCP2CON_CCP2X_LENGTH                               0x1
4745:          #define _CCP2CON_CCP2X_MASK                                 0x20
4746:          #define _CCP2CON_DC2B0_POSN                                 0x4
4747:          #define _CCP2CON_DC2B0_POSITION                             0x4
4748:          #define _CCP2CON_DC2B0_SIZE                                 0x1
4749:          #define _CCP2CON_DC2B0_LENGTH                               0x1
4750:          #define _CCP2CON_DC2B0_MASK                                 0x10
4751:          #define _CCP2CON_DC2B1_POSN                                 0x5
4752:          #define _CCP2CON_DC2B1_POSITION                             0x5
4753:          #define _CCP2CON_DC2B1_SIZE                                 0x1
4754:          #define _CCP2CON_DC2B1_LENGTH                               0x1
4755:          #define _CCP2CON_DC2B1_MASK                                 0x20
4756:          
4757:          // Register: CCPR2
4758:          extern volatile unsigned short          CCPR2               @ 0xFBB;
4759:          #ifndef _LIB_BUILD
4760:          asm("CCPR2 equ 0FBBh");
4761:          #endif
4762:          
4763:          // Register: CCPR2L
4764:          extern volatile unsigned char           CCPR2L              @ 0xFBB;
4765:          #ifndef _LIB_BUILD
4766:          asm("CCPR2L equ 0FBBh");
4767:          #endif
4768:          
4769:          // Register: CCPR2H
4770:          extern volatile unsigned char           CCPR2H              @ 0xFBC;
4771:          #ifndef _LIB_BUILD
4772:          asm("CCPR2H equ 0FBCh");
4773:          #endif
4774:          
4775:          // Register: CCP1CON
4776:          extern volatile unsigned char           CCP1CON             @ 0xFBD;
4777:          #ifndef _LIB_BUILD
4778:          asm("CCP1CON equ 0FBDh");
4779:          #endif
4780:          // bitfield definitions
4781:          typedef union {
4782:              struct {
4783:                  unsigned CCP1M                  :4;
4784:                  unsigned DC1B                   :2;
4785:                  unsigned P1M                    :2;
4786:              };
4787:              struct {
4788:                  unsigned CCP1M0                 :1;
4789:                  unsigned CCP1M1                 :1;
4790:                  unsigned CCP1M2                 :1;
4791:                  unsigned CCP1M3                 :1;
4792:                  unsigned CCP1Y                  :1;
4793:                  unsigned CCP1X                  :1;
4794:                  unsigned P1M0                   :1;
4795:                  unsigned P1M1                   :1;
4796:              };
4797:              struct {
4798:                  unsigned                        :4;
4799:                  unsigned DC1B0                  :1;
4800:                  unsigned DC1B1                  :1;
4801:              };
4802:          } CCP1CONbits_t;
4803:          extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBD;
4804:          // bitfield macros
4805:          #define _CCP1CON_CCP1M_POSN                                 0x0
4806:          #define _CCP1CON_CCP1M_POSITION                             0x0
4807:          #define _CCP1CON_CCP1M_SIZE                                 0x4
4808:          #define _CCP1CON_CCP1M_LENGTH                               0x4
4809:          #define _CCP1CON_CCP1M_MASK                                 0xF
4810:          #define _CCP1CON_DC1B_POSN                                  0x4
4811:          #define _CCP1CON_DC1B_POSITION                              0x4
4812:          #define _CCP1CON_DC1B_SIZE                                  0x2
4813:          #define _CCP1CON_DC1B_LENGTH                                0x2
4814:          #define _CCP1CON_DC1B_MASK                                  0x30
4815:          #define _CCP1CON_P1M_POSN                                   0x6
4816:          #define _CCP1CON_P1M_POSITION                               0x6
4817:          #define _CCP1CON_P1M_SIZE                                   0x2
4818:          #define _CCP1CON_P1M_LENGTH                                 0x2
4819:          #define _CCP1CON_P1M_MASK                                   0xC0
4820:          #define _CCP1CON_CCP1M0_POSN                                0x0
4821:          #define _CCP1CON_CCP1M0_POSITION                            0x0
4822:          #define _CCP1CON_CCP1M0_SIZE                                0x1
4823:          #define _CCP1CON_CCP1M0_LENGTH                              0x1
4824:          #define _CCP1CON_CCP1M0_MASK                                0x1
4825:          #define _CCP1CON_CCP1M1_POSN                                0x1
4826:          #define _CCP1CON_CCP1M1_POSITION                            0x1
4827:          #define _CCP1CON_CCP1M1_SIZE                                0x1
4828:          #define _CCP1CON_CCP1M1_LENGTH                              0x1
4829:          #define _CCP1CON_CCP1M1_MASK                                0x2
4830:          #define _CCP1CON_CCP1M2_POSN                                0x2
4831:          #define _CCP1CON_CCP1M2_POSITION                            0x2
4832:          #define _CCP1CON_CCP1M2_SIZE                                0x1
4833:          #define _CCP1CON_CCP1M2_LENGTH                              0x1
4834:          #define _CCP1CON_CCP1M2_MASK                                0x4
4835:          #define _CCP1CON_CCP1M3_POSN                                0x3
4836:          #define _CCP1CON_CCP1M3_POSITION                            0x3
4837:          #define _CCP1CON_CCP1M3_SIZE                                0x1
4838:          #define _CCP1CON_CCP1M3_LENGTH                              0x1
4839:          #define _CCP1CON_CCP1M3_MASK                                0x8
4840:          #define _CCP1CON_CCP1Y_POSN                                 0x4
4841:          #define _CCP1CON_CCP1Y_POSITION                             0x4
4842:          #define _CCP1CON_CCP1Y_SIZE                                 0x1
4843:          #define _CCP1CON_CCP1Y_LENGTH                               0x1
4844:          #define _CCP1CON_CCP1Y_MASK                                 0x10
4845:          #define _CCP1CON_CCP1X_POSN                                 0x5
4846:          #define _CCP1CON_CCP1X_POSITION                             0x5
4847:          #define _CCP1CON_CCP1X_SIZE                                 0x1
4848:          #define _CCP1CON_CCP1X_LENGTH                               0x1
4849:          #define _CCP1CON_CCP1X_MASK                                 0x20
4850:          #define _CCP1CON_P1M0_POSN                                  0x6
4851:          #define _CCP1CON_P1M0_POSITION                              0x6
4852:          #define _CCP1CON_P1M0_SIZE                                  0x1
4853:          #define _CCP1CON_P1M0_LENGTH                                0x1
4854:          #define _CCP1CON_P1M0_MASK                                  0x40
4855:          #define _CCP1CON_P1M1_POSN                                  0x7
4856:          #define _CCP1CON_P1M1_POSITION                              0x7
4857:          #define _CCP1CON_P1M1_SIZE                                  0x1
4858:          #define _CCP1CON_P1M1_LENGTH                                0x1
4859:          #define _CCP1CON_P1M1_MASK                                  0x80
4860:          #define _CCP1CON_DC1B0_POSN                                 0x4
4861:          #define _CCP1CON_DC1B0_POSITION                             0x4
4862:          #define _CCP1CON_DC1B0_SIZE                                 0x1
4863:          #define _CCP1CON_DC1B0_LENGTH                               0x1
4864:          #define _CCP1CON_DC1B0_MASK                                 0x10
4865:          #define _CCP1CON_DC1B1_POSN                                 0x5
4866:          #define _CCP1CON_DC1B1_POSITION                             0x5
4867:          #define _CCP1CON_DC1B1_SIZE                                 0x1
4868:          #define _CCP1CON_DC1B1_LENGTH                               0x1
4869:          #define _CCP1CON_DC1B1_MASK                                 0x20
4870:          
4871:          // Register: CCPR1
4872:          extern volatile unsigned short          CCPR1               @ 0xFBE;
4873:          #ifndef _LIB_BUILD
4874:          asm("CCPR1 equ 0FBEh");
4875:          #endif
4876:          
4877:          // Register: CCPR1L
4878:          extern volatile unsigned char           CCPR1L              @ 0xFBE;
4879:          #ifndef _LIB_BUILD
4880:          asm("CCPR1L equ 0FBEh");
4881:          #endif
4882:          
4883:          // Register: CCPR1H
4884:          extern volatile unsigned char           CCPR1H              @ 0xFBF;
4885:          #ifndef _LIB_BUILD
4886:          asm("CCPR1H equ 0FBFh");
4887:          #endif
4888:          
4889:          // Register: ADCON2
4890:          extern volatile unsigned char           ADCON2              @ 0xFC0;
4891:          #ifndef _LIB_BUILD
4892:          asm("ADCON2 equ 0FC0h");
4893:          #endif
4894:          // bitfield definitions
4895:          typedef union {
4896:              struct {
4897:                  unsigned ADCS                   :3;
4898:                  unsigned ACQT                   :3;
4899:                  unsigned                        :1;
4900:                  unsigned ADFM                   :1;
4901:              };
4902:              struct {
4903:                  unsigned ADCS0                  :1;
4904:                  unsigned ADCS1                  :1;
4905:                  unsigned ADCS2                  :1;
4906:                  unsigned ACQT0                  :1;
4907:                  unsigned ACQT1                  :1;
4908:                  unsigned ACQT2                  :1;
4909:              };
4910:          } ADCON2bits_t;
4911:          extern volatile ADCON2bits_t ADCON2bits @ 0xFC0;
4912:          // bitfield macros
4913:          #define _ADCON2_ADCS_POSN                                   0x0
4914:          #define _ADCON2_ADCS_POSITION                               0x0
4915:          #define _ADCON2_ADCS_SIZE                                   0x3
4916:          #define _ADCON2_ADCS_LENGTH                                 0x3
4917:          #define _ADCON2_ADCS_MASK                                   0x7
4918:          #define _ADCON2_ACQT_POSN                                   0x3
4919:          #define _ADCON2_ACQT_POSITION                               0x3
4920:          #define _ADCON2_ACQT_SIZE                                   0x3
4921:          #define _ADCON2_ACQT_LENGTH                                 0x3
4922:          #define _ADCON2_ACQT_MASK                                   0x38
4923:          #define _ADCON2_ADFM_POSN                                   0x7
4924:          #define _ADCON2_ADFM_POSITION                               0x7
4925:          #define _ADCON2_ADFM_SIZE                                   0x1
4926:          #define _ADCON2_ADFM_LENGTH                                 0x1
4927:          #define _ADCON2_ADFM_MASK                                   0x80
4928:          #define _ADCON2_ADCS0_POSN                                  0x0
4929:          #define _ADCON2_ADCS0_POSITION                              0x0
4930:          #define _ADCON2_ADCS0_SIZE                                  0x1
4931:          #define _ADCON2_ADCS0_LENGTH                                0x1
4932:          #define _ADCON2_ADCS0_MASK                                  0x1
4933:          #define _ADCON2_ADCS1_POSN                                  0x1
4934:          #define _ADCON2_ADCS1_POSITION                              0x1
4935:          #define _ADCON2_ADCS1_SIZE                                  0x1
4936:          #define _ADCON2_ADCS1_LENGTH                                0x1
4937:          #define _ADCON2_ADCS1_MASK                                  0x2
4938:          #define _ADCON2_ADCS2_POSN                                  0x2
4939:          #define _ADCON2_ADCS2_POSITION                              0x2
4940:          #define _ADCON2_ADCS2_SIZE                                  0x1
4941:          #define _ADCON2_ADCS2_LENGTH                                0x1
4942:          #define _ADCON2_ADCS2_MASK                                  0x4
4943:          #define _ADCON2_ACQT0_POSN                                  0x3
4944:          #define _ADCON2_ACQT0_POSITION                              0x3
4945:          #define _ADCON2_ACQT0_SIZE                                  0x1
4946:          #define _ADCON2_ACQT0_LENGTH                                0x1
4947:          #define _ADCON2_ACQT0_MASK                                  0x8
4948:          #define _ADCON2_ACQT1_POSN                                  0x4
4949:          #define _ADCON2_ACQT1_POSITION                              0x4
4950:          #define _ADCON2_ACQT1_SIZE                                  0x1
4951:          #define _ADCON2_ACQT1_LENGTH                                0x1
4952:          #define _ADCON2_ACQT1_MASK                                  0x10
4953:          #define _ADCON2_ACQT2_POSN                                  0x5
4954:          #define _ADCON2_ACQT2_POSITION                              0x5
4955:          #define _ADCON2_ACQT2_SIZE                                  0x1
4956:          #define _ADCON2_ACQT2_LENGTH                                0x1
4957:          #define _ADCON2_ACQT2_MASK                                  0x20
4958:          
4959:          // Register: ADCON1
4960:          extern volatile unsigned char           ADCON1              @ 0xFC1;
4961:          #ifndef _LIB_BUILD
4962:          asm("ADCON1 equ 0FC1h");
4963:          #endif
4964:          // bitfield definitions
4965:          typedef union {
4966:              struct {
4967:                  unsigned PCFG                   :4;
4968:                  unsigned VCFG                   :2;
4969:              };
4970:              struct {
4971:                  unsigned PCFG0                  :1;
4972:                  unsigned PCFG1                  :1;
4973:                  unsigned PCFG2                  :1;
4974:                  unsigned PCFG3                  :1;
4975:                  unsigned VCFG0                  :1;
4976:                  unsigned VCFG1                  :1;
4977:              };
4978:              struct {
4979:                  unsigned                        :3;
4980:                  unsigned CHSN3                  :1;
4981:              };
4982:              struct {
4983:                  unsigned                        :4;
4984:                  unsigned VCFG01                 :1;
4985:              };
4986:              struct {
4987:                  unsigned                        :5;
4988:                  unsigned VCFG11                 :1;
4989:              };
4990:          } ADCON1bits_t;
4991:          extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;
4992:          // bitfield macros
4993:          #define _ADCON1_PCFG_POSN                                   0x0
4994:          #define _ADCON1_PCFG_POSITION                               0x0
4995:          #define _ADCON1_PCFG_SIZE                                   0x4
4996:          #define _ADCON1_PCFG_LENGTH                                 0x4
4997:          #define _ADCON1_PCFG_MASK                                   0xF
4998:          #define _ADCON1_VCFG_POSN                                   0x4
4999:          #define _ADCON1_VCFG_POSITION                               0x4
5000:          #define _ADCON1_VCFG_SIZE                                   0x2
5001:          #define _ADCON1_VCFG_LENGTH                                 0x2
5002:          #define _ADCON1_VCFG_MASK                                   0x30
5003:          #define _ADCON1_PCFG0_POSN                                  0x0
5004:          #define _ADCON1_PCFG0_POSITION                              0x0
5005:          #define _ADCON1_PCFG0_SIZE                                  0x1
5006:          #define _ADCON1_PCFG0_LENGTH                                0x1
5007:          #define _ADCON1_PCFG0_MASK                                  0x1
5008:          #define _ADCON1_PCFG1_POSN                                  0x1
5009:          #define _ADCON1_PCFG1_POSITION                              0x1
5010:          #define _ADCON1_PCFG1_SIZE                                  0x1
5011:          #define _ADCON1_PCFG1_LENGTH                                0x1
5012:          #define _ADCON1_PCFG1_MASK                                  0x2
5013:          #define _ADCON1_PCFG2_POSN                                  0x2
5014:          #define _ADCON1_PCFG2_POSITION                              0x2
5015:          #define _ADCON1_PCFG2_SIZE                                  0x1
5016:          #define _ADCON1_PCFG2_LENGTH                                0x1
5017:          #define _ADCON1_PCFG2_MASK                                  0x4
5018:          #define _ADCON1_PCFG3_POSN                                  0x3
5019:          #define _ADCON1_PCFG3_POSITION                              0x3
5020:          #define _ADCON1_PCFG3_SIZE                                  0x1
5021:          #define _ADCON1_PCFG3_LENGTH                                0x1
5022:          #define _ADCON1_PCFG3_MASK                                  0x8
5023:          #define _ADCON1_VCFG0_POSN                                  0x4
5024:          #define _ADCON1_VCFG0_POSITION                              0x4
5025:          #define _ADCON1_VCFG0_SIZE                                  0x1
5026:          #define _ADCON1_VCFG0_LENGTH                                0x1
5027:          #define _ADCON1_VCFG0_MASK                                  0x10
5028:          #define _ADCON1_VCFG1_POSN                                  0x5
5029:          #define _ADCON1_VCFG1_POSITION                              0x5
5030:          #define _ADCON1_VCFG1_SIZE                                  0x1
5031:          #define _ADCON1_VCFG1_LENGTH                                0x1
5032:          #define _ADCON1_VCFG1_MASK                                  0x20
5033:          #define _ADCON1_CHSN3_POSN                                  0x3
5034:          #define _ADCON1_CHSN3_POSITION                              0x3
5035:          #define _ADCON1_CHSN3_SIZE                                  0x1
5036:          #define _ADCON1_CHSN3_LENGTH                                0x1
5037:          #define _ADCON1_CHSN3_MASK                                  0x8
5038:          #define _ADCON1_VCFG01_POSN                                 0x4
5039:          #define _ADCON1_VCFG01_POSITION                             0x4
5040:          #define _ADCON1_VCFG01_SIZE                                 0x1
5041:          #define _ADCON1_VCFG01_LENGTH                               0x1
5042:          #define _ADCON1_VCFG01_MASK                                 0x10
5043:          #define _ADCON1_VCFG11_POSN                                 0x5
5044:          #define _ADCON1_VCFG11_POSITION                             0x5
5045:          #define _ADCON1_VCFG11_SIZE                                 0x1
5046:          #define _ADCON1_VCFG11_LENGTH                               0x1
5047:          #define _ADCON1_VCFG11_MASK                                 0x20
5048:          
5049:          // Register: ADCON0
5050:          extern volatile unsigned char           ADCON0              @ 0xFC2;
5051:          #ifndef _LIB_BUILD
5052:          asm("ADCON0 equ 0FC2h");
5053:          #endif
5054:          // bitfield definitions
5055:          typedef union {
5056:              struct {
5057:                  unsigned                        :1;
5058:                  unsigned GO_NOT_DONE            :1;
5059:              };
5060:              struct {
5061:                  unsigned ADON                   :1;
5062:                  unsigned GO_nDONE               :1;
5063:                  unsigned CHS                    :4;
5064:              };
5065:              struct {
5066:                  unsigned                        :1;
5067:                  unsigned GO_NOT_DONE            :1;
5068:              };
5069:              struct {
5070:                  unsigned                        :1;
5071:                  unsigned GO                     :1;
5072:                  unsigned CHS0                   :1;
5073:                  unsigned CHS1                   :1;
5074:                  unsigned CHS2                   :1;
5075:                  unsigned CHS3                   :1;
5076:              };
5077:              struct {
5078:                  unsigned                        :1;
5079:                  unsigned DONE                   :1;
5080:              };
5081:              struct {
5082:                  unsigned                        :1;
5083:                  unsigned NOT_DONE               :1;
5084:              };
5085:              struct {
5086:                  unsigned                        :1;
5087:                  unsigned nDONE                  :1;
5088:              };
5089:              struct {
5090:                  unsigned                        :1;
5091:                  unsigned GO_DONE                :1;
5092:              };
5093:              struct {
5094:                  unsigned                        :1;
5095:                  unsigned GODONE                 :1;
5096:              };
5097:          } ADCON0bits_t;
5098:          extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;
5099:          // bitfield macros
5100:          #define _ADCON0_GO_NOT_DONE_POSN                            0x1
5101:          #define _ADCON0_GO_NOT_DONE_POSITION                        0x1
5102:          #define _ADCON0_GO_NOT_DONE_SIZE                            0x1
5103:          #define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
5104:          #define _ADCON0_GO_NOT_DONE_MASK                            0x2
5105:          #define _ADCON0_ADON_POSN                                   0x0
5106:          #define _ADCON0_ADON_POSITION                               0x0
5107:          #define _ADCON0_ADON_SIZE                                   0x1
5108:          #define _ADCON0_ADON_LENGTH                                 0x1
5109:          #define _ADCON0_ADON_MASK                                   0x1
5110:          #define _ADCON0_GO_nDONE_POSN                               0x1
5111:          #define _ADCON0_GO_nDONE_POSITION                           0x1
5112:          #define _ADCON0_GO_nDONE_SIZE                               0x1
5113:          #define _ADCON0_GO_nDONE_LENGTH                             0x1
5114:          #define _ADCON0_GO_nDONE_MASK                               0x2
5115:          #define _ADCON0_CHS_POSN                                    0x2
5116:          #define _ADCON0_CHS_POSITION                                0x2
5117:          #define _ADCON0_CHS_SIZE                                    0x4
5118:          #define _ADCON0_CHS_LENGTH                                  0x4
5119:          #define _ADCON0_CHS_MASK                                    0x3C
5120:          #define _ADCON0_GO_POSN                                     0x1
5121:          #define _ADCON0_GO_POSITION                                 0x1
5122:          #define _ADCON0_GO_SIZE                                     0x1
5123:          #define _ADCON0_GO_LENGTH                                   0x1
5124:          #define _ADCON0_GO_MASK                                     0x2
5125:          #define _ADCON0_CHS0_POSN                                   0x2
5126:          #define _ADCON0_CHS0_POSITION                               0x2
5127:          #define _ADCON0_CHS0_SIZE                                   0x1
5128:          #define _ADCON0_CHS0_LENGTH                                 0x1
5129:          #define _ADCON0_CHS0_MASK                                   0x4
5130:          #define _ADCON0_CHS1_POSN                                   0x3
5131:          #define _ADCON0_CHS1_POSITION                               0x3
5132:          #define _ADCON0_CHS1_SIZE                                   0x1
5133:          #define _ADCON0_CHS1_LENGTH                                 0x1
5134:          #define _ADCON0_CHS1_MASK                                   0x8
5135:          #define _ADCON0_CHS2_POSN                                   0x4
5136:          #define _ADCON0_CHS2_POSITION                               0x4
5137:          #define _ADCON0_CHS2_SIZE                                   0x1
5138:          #define _ADCON0_CHS2_LENGTH                                 0x1
5139:          #define _ADCON0_CHS2_MASK                                   0x10
5140:          #define _ADCON0_CHS3_POSN                                   0x5
5141:          #define _ADCON0_CHS3_POSITION                               0x5
5142:          #define _ADCON0_CHS3_SIZE                                   0x1
5143:          #define _ADCON0_CHS3_LENGTH                                 0x1
5144:          #define _ADCON0_CHS3_MASK                                   0x20
5145:          #define _ADCON0_DONE_POSN                                   0x1
5146:          #define _ADCON0_DONE_POSITION                               0x1
5147:          #define _ADCON0_DONE_SIZE                                   0x1
5148:          #define _ADCON0_DONE_LENGTH                                 0x1
5149:          #define _ADCON0_DONE_MASK                                   0x2
5150:          #define _ADCON0_NOT_DONE_POSN                               0x1
5151:          #define _ADCON0_NOT_DONE_POSITION                           0x1
5152:          #define _ADCON0_NOT_DONE_SIZE                               0x1
5153:          #define _ADCON0_NOT_DONE_LENGTH                             0x1
5154:          #define _ADCON0_NOT_DONE_MASK                               0x2
5155:          #define _ADCON0_nDONE_POSN                                  0x1
5156:          #define _ADCON0_nDONE_POSITION                              0x1
5157:          #define _ADCON0_nDONE_SIZE                                  0x1
5158:          #define _ADCON0_nDONE_LENGTH                                0x1
5159:          #define _ADCON0_nDONE_MASK                                  0x2
5160:          #define _ADCON0_GO_DONE_POSN                                0x1
5161:          #define _ADCON0_GO_DONE_POSITION                            0x1
5162:          #define _ADCON0_GO_DONE_SIZE                                0x1
5163:          #define _ADCON0_GO_DONE_LENGTH                              0x1
5164:          #define _ADCON0_GO_DONE_MASK                                0x2
5165:          #define _ADCON0_GODONE_POSN                                 0x1
5166:          #define _ADCON0_GODONE_POSITION                             0x1
5167:          #define _ADCON0_GODONE_SIZE                                 0x1
5168:          #define _ADCON0_GODONE_LENGTH                               0x1
5169:          #define _ADCON0_GODONE_MASK                                 0x2
5170:          
5171:          // Register: ADRES
5172:          extern volatile unsigned short          ADRES               @ 0xFC3;
5173:          #ifndef _LIB_BUILD
5174:          asm("ADRES equ 0FC3h");
5175:          #endif
5176:          
5177:          // Register: ADRESL
5178:          extern volatile unsigned char           ADRESL              @ 0xFC3;
5179:          #ifndef _LIB_BUILD
5180:          asm("ADRESL equ 0FC3h");
5181:          #endif
5182:          
5183:          // Register: ADRESH
5184:          extern volatile unsigned char           ADRESH              @ 0xFC4;
5185:          #ifndef _LIB_BUILD
5186:          asm("ADRESH equ 0FC4h");
5187:          #endif
5188:          
5189:          // Register: SSPCON2
5190:          extern volatile unsigned char           SSPCON2             @ 0xFC5;
5191:          #ifndef _LIB_BUILD
5192:          asm("SSPCON2 equ 0FC5h");
5193:          #endif
5194:          // bitfield definitions
5195:          typedef union {
5196:              struct {
5197:                  unsigned SEN                    :1;
5198:                  unsigned RSEN                   :1;
5199:                  unsigned PEN                    :1;
5200:                  unsigned RCEN                   :1;
5201:                  unsigned ACKEN                  :1;
5202:                  unsigned ACKDT                  :1;
5203:                  unsigned ACKSTAT                :1;
5204:                  unsigned GCEN                   :1;
5205:              };
5206:              struct {
5207:                  unsigned                        :1;
5208:                  unsigned ADMSK1                 :1;
5209:                  unsigned ADMSK2                 :1;
5210:                  unsigned ADMSK3                 :1;
5211:                  unsigned ADMSK4                 :1;
5212:                  unsigned ADMSK5                 :1;
5213:              };
5214:          } SSPCON2bits_t;
5215:          extern volatile SSPCON2bits_t SSPCON2bits @ 0xFC5;
5216:          // bitfield macros
5217:          #define _SSPCON2_SEN_POSN                                   0x0
5218:          #define _SSPCON2_SEN_POSITION                               0x0
5219:          #define _SSPCON2_SEN_SIZE                                   0x1
5220:          #define _SSPCON2_SEN_LENGTH                                 0x1
5221:          #define _SSPCON2_SEN_MASK                                   0x1
5222:          #define _SSPCON2_RSEN_POSN                                  0x1
5223:          #define _SSPCON2_RSEN_POSITION                              0x1
5224:          #define _SSPCON2_RSEN_SIZE                                  0x1
5225:          #define _SSPCON2_RSEN_LENGTH                                0x1
5226:          #define _SSPCON2_RSEN_MASK                                  0x2
5227:          #define _SSPCON2_PEN_POSN                                   0x2
5228:          #define _SSPCON2_PEN_POSITION                               0x2
5229:          #define _SSPCON2_PEN_SIZE                                   0x1
5230:          #define _SSPCON2_PEN_LENGTH                                 0x1
5231:          #define _SSPCON2_PEN_MASK                                   0x4
5232:          #define _SSPCON2_RCEN_POSN                                  0x3
5233:          #define _SSPCON2_RCEN_POSITION                              0x3
5234:          #define _SSPCON2_RCEN_SIZE                                  0x1
5235:          #define _SSPCON2_RCEN_LENGTH                                0x1
5236:          #define _SSPCON2_RCEN_MASK                                  0x8
5237:          #define _SSPCON2_ACKEN_POSN                                 0x4
5238:          #define _SSPCON2_ACKEN_POSITION                             0x4
5239:          #define _SSPCON2_ACKEN_SIZE                                 0x1
5240:          #define _SSPCON2_ACKEN_LENGTH                               0x1
5241:          #define _SSPCON2_ACKEN_MASK                                 0x10
5242:          #define _SSPCON2_ACKDT_POSN                                 0x5
5243:          #define _SSPCON2_ACKDT_POSITION                             0x5
5244:          #define _SSPCON2_ACKDT_SIZE                                 0x1
5245:          #define _SSPCON2_ACKDT_LENGTH                               0x1
5246:          #define _SSPCON2_ACKDT_MASK                                 0x20
5247:          #define _SSPCON2_ACKSTAT_POSN                               0x6
5248:          #define _SSPCON2_ACKSTAT_POSITION                           0x6
5249:          #define _SSPCON2_ACKSTAT_SIZE                               0x1
5250:          #define _SSPCON2_ACKSTAT_LENGTH                             0x1
5251:          #define _SSPCON2_ACKSTAT_MASK                               0x40
5252:          #define _SSPCON2_GCEN_POSN                                  0x7
5253:          #define _SSPCON2_GCEN_POSITION                              0x7
5254:          #define _SSPCON2_GCEN_SIZE                                  0x1
5255:          #define _SSPCON2_GCEN_LENGTH                                0x1
5256:          #define _SSPCON2_GCEN_MASK                                  0x80
5257:          #define _SSPCON2_ADMSK1_POSN                                0x1
5258:          #define _SSPCON2_ADMSK1_POSITION                            0x1
5259:          #define _SSPCON2_ADMSK1_SIZE                                0x1
5260:          #define _SSPCON2_ADMSK1_LENGTH                              0x1
5261:          #define _SSPCON2_ADMSK1_MASK                                0x2
5262:          #define _SSPCON2_ADMSK2_POSN                                0x2
5263:          #define _SSPCON2_ADMSK2_POSITION                            0x2
5264:          #define _SSPCON2_ADMSK2_SIZE                                0x1
5265:          #define _SSPCON2_ADMSK2_LENGTH                              0x1
5266:          #define _SSPCON2_ADMSK2_MASK                                0x4
5267:          #define _SSPCON2_ADMSK3_POSN                                0x3
5268:          #define _SSPCON2_ADMSK3_POSITION                            0x3
5269:          #define _SSPCON2_ADMSK3_SIZE                                0x1
5270:          #define _SSPCON2_ADMSK3_LENGTH                              0x1
5271:          #define _SSPCON2_ADMSK3_MASK                                0x8
5272:          #define _SSPCON2_ADMSK4_POSN                                0x4
5273:          #define _SSPCON2_ADMSK4_POSITION                            0x4
5274:          #define _SSPCON2_ADMSK4_SIZE                                0x1
5275:          #define _SSPCON2_ADMSK4_LENGTH                              0x1
5276:          #define _SSPCON2_ADMSK4_MASK                                0x10
5277:          #define _SSPCON2_ADMSK5_POSN                                0x5
5278:          #define _SSPCON2_ADMSK5_POSITION                            0x5
5279:          #define _SSPCON2_ADMSK5_SIZE                                0x1
5280:          #define _SSPCON2_ADMSK5_LENGTH                              0x1
5281:          #define _SSPCON2_ADMSK5_MASK                                0x20
5282:          
5283:          // Register: SSPCON1
5284:          extern volatile unsigned char           SSPCON1             @ 0xFC6;
5285:          #ifndef _LIB_BUILD
5286:          asm("SSPCON1 equ 0FC6h");
5287:          #endif
5288:          // bitfield definitions
5289:          typedef union {
5290:              struct {
5291:                  unsigned SSPM                   :4;
5292:                  unsigned CKP                    :1;
5293:                  unsigned SSPEN                  :1;
5294:                  unsigned SSPOV                  :1;
5295:                  unsigned WCOL                   :1;
5296:              };
5297:              struct {
5298:                  unsigned SSPM0                  :1;
5299:                  unsigned SSPM1                  :1;
5300:                  unsigned SSPM2                  :1;
5301:                  unsigned SSPM3                  :1;
5302:              };
5303:          } SSPCON1bits_t;
5304:          extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;
5305:          // bitfield macros
5306:          #define _SSPCON1_SSPM_POSN                                  0x0
5307:          #define _SSPCON1_SSPM_POSITION                              0x0
5308:          #define _SSPCON1_SSPM_SIZE                                  0x4
5309:          #define _SSPCON1_SSPM_LENGTH                                0x4
5310:          #define _SSPCON1_SSPM_MASK                                  0xF
5311:          #define _SSPCON1_CKP_POSN                                   0x4
5312:          #define _SSPCON1_CKP_POSITION                               0x4
5313:          #define _SSPCON1_CKP_SIZE                                   0x1
5314:          #define _SSPCON1_CKP_LENGTH                                 0x1
5315:          #define _SSPCON1_CKP_MASK                                   0x10
5316:          #define _SSPCON1_SSPEN_POSN                                 0x5
5317:          #define _SSPCON1_SSPEN_POSITION                             0x5
5318:          #define _SSPCON1_SSPEN_SIZE                                 0x1
5319:          #define _SSPCON1_SSPEN_LENGTH                               0x1
5320:          #define _SSPCON1_SSPEN_MASK                                 0x20
5321:          #define _SSPCON1_SSPOV_POSN                                 0x6
5322:          #define _SSPCON1_SSPOV_POSITION                             0x6
5323:          #define _SSPCON1_SSPOV_SIZE                                 0x1
5324:          #define _SSPCON1_SSPOV_LENGTH                               0x1
5325:          #define _SSPCON1_SSPOV_MASK                                 0x40
5326:          #define _SSPCON1_WCOL_POSN                                  0x7
5327:          #define _SSPCON1_WCOL_POSITION                              0x7
5328:          #define _SSPCON1_WCOL_SIZE                                  0x1
5329:          #define _SSPCON1_WCOL_LENGTH                                0x1
5330:          #define _SSPCON1_WCOL_MASK                                  0x80
5331:          #define _SSPCON1_SSPM0_POSN                                 0x0
5332:          #define _SSPCON1_SSPM0_POSITION                             0x0
5333:          #define _SSPCON1_SSPM0_SIZE                                 0x1
5334:          #define _SSPCON1_SSPM0_LENGTH                               0x1
5335:          #define _SSPCON1_SSPM0_MASK                                 0x1
5336:          #define _SSPCON1_SSPM1_POSN                                 0x1
5337:          #define _SSPCON1_SSPM1_POSITION                             0x1
5338:          #define _SSPCON1_SSPM1_SIZE                                 0x1
5339:          #define _SSPCON1_SSPM1_LENGTH                               0x1
5340:          #define _SSPCON1_SSPM1_MASK                                 0x2
5341:          #define _SSPCON1_SSPM2_POSN                                 0x2
5342:          #define _SSPCON1_SSPM2_POSITION                             0x2
5343:          #define _SSPCON1_SSPM2_SIZE                                 0x1
5344:          #define _SSPCON1_SSPM2_LENGTH                               0x1
5345:          #define _SSPCON1_SSPM2_MASK                                 0x4
5346:          #define _SSPCON1_SSPM3_POSN                                 0x3
5347:          #define _SSPCON1_SSPM3_POSITION                             0x3
5348:          #define _SSPCON1_SSPM3_SIZE                                 0x1
5349:          #define _SSPCON1_SSPM3_LENGTH                               0x1
5350:          #define _SSPCON1_SSPM3_MASK                                 0x8
5351:          
5352:          // Register: SSPSTAT
5353:          extern volatile unsigned char           SSPSTAT             @ 0xFC7;
5354:          #ifndef _LIB_BUILD
5355:          asm("SSPSTAT equ 0FC7h");
5356:          #endif
5357:          // bitfield definitions
5358:          typedef union {
5359:              struct {
5360:                  unsigned                        :2;
5361:                  unsigned R_NOT_W                :1;
5362:              };
5363:              struct {
5364:                  unsigned                        :5;
5365:                  unsigned D_NOT_A                :1;
5366:              };
5367:              struct {
5368:                  unsigned BF                     :1;
5369:                  unsigned UA                     :1;
5370:                  unsigned R_nW                   :1;
5371:                  unsigned S                      :1;
5372:                  unsigned P                      :1;
5373:                  unsigned D_nA                   :1;
5374:                  unsigned CKE                    :1;
5375:                  unsigned SMP                    :1;
5376:              };
5377:              struct {
5378:                  unsigned                        :2;
5379:                  unsigned R_NOT_W                :1;
5380:              };
5381:              struct {
5382:                  unsigned                        :5;
5383:                  unsigned D_NOT_A                :1;
5384:              };
5385:              struct {
5386:                  unsigned                        :2;
5387:                  unsigned R                      :1;
5388:                  unsigned                        :2;
5389:                  unsigned D                      :1;
5390:              };
5391:              struct {
5392:                  unsigned                        :2;
5393:                  unsigned W                      :1;
5394:                  unsigned                        :2;
5395:                  unsigned A                      :1;
5396:              };
5397:              struct {
5398:                  unsigned                        :2;
5399:                  unsigned nW                     :1;
5400:                  unsigned                        :2;
5401:                  unsigned nA                     :1;
5402:              };
5403:              struct {
5404:                  unsigned                        :2;
5405:                  unsigned R_W                    :1;
5406:                  unsigned                        :2;
5407:                  unsigned D_A                    :1;
5408:              };
5409:              struct {
5410:                  unsigned                        :2;
5411:                  unsigned NOT_WRITE              :1;
5412:              };
5413:              struct {
5414:                  unsigned                        :5;
5415:                  unsigned NOT_ADDRESS            :1;
5416:              };
5417:              struct {
5418:                  unsigned                        :2;
5419:                  unsigned nWRITE                 :1;
5420:                  unsigned                        :2;
5421:                  unsigned nADDRESS               :1;
5422:              };
5423:              struct {
5424:                  unsigned                        :5;
5425:                  unsigned DA                     :1;
5426:              };
5427:              struct {
5428:                  unsigned                        :2;
5429:                  unsigned RW                     :1;
5430:              };
5431:              struct {
5432:                  unsigned                        :3;
5433:                  unsigned START                  :1;
5434:              };
5435:              struct {
5436:                  unsigned                        :4;
5437:                  unsigned STOP                   :1;
5438:              };
5439:              struct {
5440:                  unsigned                        :2;
5441:                  unsigned NOT_W                  :1;
5442:              };
5443:              struct {
5444:                  unsigned                        :5;
5445:                  unsigned NOT_A                  :1;
5446:              };
5447:          } SSPSTATbits_t;
5448:          extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;
5449:          // bitfield macros
5450:          #define _SSPSTAT_R_NOT_W_POSN                               0x2
5451:          #define _SSPSTAT_R_NOT_W_POSITION                           0x2
5452:          #define _SSPSTAT_R_NOT_W_SIZE                               0x1
5453:          #define _SSPSTAT_R_NOT_W_LENGTH                             0x1
5454:          #define _SSPSTAT_R_NOT_W_MASK                               0x4
5455:          #define _SSPSTAT_D_NOT_A_POSN                               0x5
5456:          #define _SSPSTAT_D_NOT_A_POSITION                           0x5
5457:          #define _SSPSTAT_D_NOT_A_SIZE                               0x1
5458:          #define _SSPSTAT_D_NOT_A_LENGTH                             0x1
5459:          #define _SSPSTAT_D_NOT_A_MASK                               0x20
5460:          #define _SSPSTAT_BF_POSN                                    0x0
5461:          #define _SSPSTAT_BF_POSITION                                0x0
5462:          #define _SSPSTAT_BF_SIZE                                    0x1
5463:          #define _SSPSTAT_BF_LENGTH                                  0x1
5464:          #define _SSPSTAT_BF_MASK                                    0x1
5465:          #define _SSPSTAT_UA_POSN                                    0x1
5466:          #define _SSPSTAT_UA_POSITION                                0x1
5467:          #define _SSPSTAT_UA_SIZE                                    0x1
5468:          #define _SSPSTAT_UA_LENGTH                                  0x1
5469:          #define _SSPSTAT_UA_MASK                                    0x2
5470:          #define _SSPSTAT_R_nW_POSN                                  0x2
5471:          #define _SSPSTAT_R_nW_POSITION                              0x2
5472:          #define _SSPSTAT_R_nW_SIZE                                  0x1
5473:          #define _SSPSTAT_R_nW_LENGTH                                0x1
5474:          #define _SSPSTAT_R_nW_MASK                                  0x4
5475:          #define _SSPSTAT_S_POSN                                     0x3
5476:          #define _SSPSTAT_S_POSITION                                 0x3
5477:          #define _SSPSTAT_S_SIZE                                     0x1
5478:          #define _SSPSTAT_S_LENGTH                                   0x1
5479:          #define _SSPSTAT_S_MASK                                     0x8
5480:          #define _SSPSTAT_P_POSN                                     0x4
5481:          #define _SSPSTAT_P_POSITION                                 0x4
5482:          #define _SSPSTAT_P_SIZE                                     0x1
5483:          #define _SSPSTAT_P_LENGTH                                   0x1
5484:          #define _SSPSTAT_P_MASK                                     0x10
5485:          #define _SSPSTAT_D_nA_POSN                                  0x5
5486:          #define _SSPSTAT_D_nA_POSITION                              0x5
5487:          #define _SSPSTAT_D_nA_SIZE                                  0x1
5488:          #define _SSPSTAT_D_nA_LENGTH                                0x1
5489:          #define _SSPSTAT_D_nA_MASK                                  0x20
5490:          #define _SSPSTAT_CKE_POSN                                   0x6
5491:          #define _SSPSTAT_CKE_POSITION                               0x6
5492:          #define _SSPSTAT_CKE_SIZE                                   0x1
5493:          #define _SSPSTAT_CKE_LENGTH                                 0x1
5494:          #define _SSPSTAT_CKE_MASK                                   0x40
5495:          #define _SSPSTAT_SMP_POSN                                   0x7
5496:          #define _SSPSTAT_SMP_POSITION                               0x7
5497:          #define _SSPSTAT_SMP_SIZE                                   0x1
5498:          #define _SSPSTAT_SMP_LENGTH                                 0x1
5499:          #define _SSPSTAT_SMP_MASK                                   0x80
5500:          #define _SSPSTAT_R_POSN                                     0x2
5501:          #define _SSPSTAT_R_POSITION                                 0x2
5502:          #define _SSPSTAT_R_SIZE                                     0x1
5503:          #define _SSPSTAT_R_LENGTH                                   0x1
5504:          #define _SSPSTAT_R_MASK                                     0x4
5505:          #define _SSPSTAT_D_POSN                                     0x5
5506:          #define _SSPSTAT_D_POSITION                                 0x5
5507:          #define _SSPSTAT_D_SIZE                                     0x1
5508:          #define _SSPSTAT_D_LENGTH                                   0x1
5509:          #define _SSPSTAT_D_MASK                                     0x20
5510:          #define _SSPSTAT_W_POSN                                     0x2
5511:          #define _SSPSTAT_W_POSITION                                 0x2
5512:          #define _SSPSTAT_W_SIZE                                     0x1
5513:          #define _SSPSTAT_W_LENGTH                                   0x1
5514:          #define _SSPSTAT_W_MASK                                     0x4
5515:          #define _SSPSTAT_A_POSN                                     0x5
5516:          #define _SSPSTAT_A_POSITION                                 0x5
5517:          #define _SSPSTAT_A_SIZE                                     0x1
5518:          #define _SSPSTAT_A_LENGTH                                   0x1
5519:          #define _SSPSTAT_A_MASK                                     0x20
5520:          #define _SSPSTAT_nW_POSN                                    0x2
5521:          #define _SSPSTAT_nW_POSITION                                0x2
5522:          #define _SSPSTAT_nW_SIZE                                    0x1
5523:          #define _SSPSTAT_nW_LENGTH                                  0x1
5524:          #define _SSPSTAT_nW_MASK                                    0x4
5525:          #define _SSPSTAT_nA_POSN                                    0x5
5526:          #define _SSPSTAT_nA_POSITION                                0x5
5527:          #define _SSPSTAT_nA_SIZE                                    0x1
5528:          #define _SSPSTAT_nA_LENGTH                                  0x1
5529:          #define _SSPSTAT_nA_MASK                                    0x20
5530:          #define _SSPSTAT_R_W_POSN                                   0x2
5531:          #define _SSPSTAT_R_W_POSITION                               0x2
5532:          #define _SSPSTAT_R_W_SIZE                                   0x1
5533:          #define _SSPSTAT_R_W_LENGTH                                 0x1
5534:          #define _SSPSTAT_R_W_MASK                                   0x4
5535:          #define _SSPSTAT_D_A_POSN                                   0x5
5536:          #define _SSPSTAT_D_A_POSITION                               0x5
5537:          #define _SSPSTAT_D_A_SIZE                                   0x1
5538:          #define _SSPSTAT_D_A_LENGTH                                 0x1
5539:          #define _SSPSTAT_D_A_MASK                                   0x20
5540:          #define _SSPSTAT_NOT_WRITE_POSN                             0x2
5541:          #define _SSPSTAT_NOT_WRITE_POSITION                         0x2
5542:          #define _SSPSTAT_NOT_WRITE_SIZE                             0x1
5543:          #define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
5544:          #define _SSPSTAT_NOT_WRITE_MASK                             0x4
5545:          #define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
5546:          #define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
5547:          #define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
5548:          #define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
5549:          #define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
5550:          #define _SSPSTAT_nWRITE_POSN                                0x2
5551:          #define _SSPSTAT_nWRITE_POSITION                            0x2
5552:          #define _SSPSTAT_nWRITE_SIZE                                0x1
5553:          #define _SSPSTAT_nWRITE_LENGTH                              0x1
5554:          #define _SSPSTAT_nWRITE_MASK                                0x4
5555:          #define _SSPSTAT_nADDRESS_POSN                              0x5
5556:          #define _SSPSTAT_nADDRESS_POSITION                          0x5
5557:          #define _SSPSTAT_nADDRESS_SIZE                              0x1
5558:          #define _SSPSTAT_nADDRESS_LENGTH                            0x1
5559:          #define _SSPSTAT_nADDRESS_MASK                              0x20
5560:          #define _SSPSTAT_DA_POSN                                    0x5
5561:          #define _SSPSTAT_DA_POSITION                                0x5
5562:          #define _SSPSTAT_DA_SIZE                                    0x1
5563:          #define _SSPSTAT_DA_LENGTH                                  0x1
5564:          #define _SSPSTAT_DA_MASK                                    0x20
5565:          #define _SSPSTAT_RW_POSN                                    0x2
5566:          #define _SSPSTAT_RW_POSITION                                0x2
5567:          #define _SSPSTAT_RW_SIZE                                    0x1
5568:          #define _SSPSTAT_RW_LENGTH                                  0x1
5569:          #define _SSPSTAT_RW_MASK                                    0x4
5570:          #define _SSPSTAT_START_POSN                                 0x3
5571:          #define _SSPSTAT_START_POSITION                             0x3
5572:          #define _SSPSTAT_START_SIZE                                 0x1
5573:          #define _SSPSTAT_START_LENGTH                               0x1
5574:          #define _SSPSTAT_START_MASK                                 0x8
5575:          #define _SSPSTAT_STOP_POSN                                  0x4
5576:          #define _SSPSTAT_STOP_POSITION                              0x4
5577:          #define _SSPSTAT_STOP_SIZE                                  0x1
5578:          #define _SSPSTAT_STOP_LENGTH                                0x1
5579:          #define _SSPSTAT_STOP_MASK                                  0x10
5580:          #define _SSPSTAT_NOT_W_POSN                                 0x2
5581:          #define _SSPSTAT_NOT_W_POSITION                             0x2
5582:          #define _SSPSTAT_NOT_W_SIZE                                 0x1
5583:          #define _SSPSTAT_NOT_W_LENGTH                               0x1
5584:          #define _SSPSTAT_NOT_W_MASK                                 0x4
5585:          #define _SSPSTAT_NOT_A_POSN                                 0x5
5586:          #define _SSPSTAT_NOT_A_POSITION                             0x5
5587:          #define _SSPSTAT_NOT_A_SIZE                                 0x1
5588:          #define _SSPSTAT_NOT_A_LENGTH                               0x1
5589:          #define _SSPSTAT_NOT_A_MASK                                 0x20
5590:          
5591:          // Register: SSPADD
5592:          extern volatile unsigned char           SSPADD              @ 0xFC8;
5593:          #ifndef _LIB_BUILD
5594:          asm("SSPADD equ 0FC8h");
5595:          #endif
5596:          
5597:          // Register: SSPBUF
5598:          extern volatile unsigned char           SSPBUF              @ 0xFC9;
5599:          #ifndef _LIB_BUILD
5600:          asm("SSPBUF equ 0FC9h");
5601:          #endif
5602:          
5603:          // Register: T2CON
5604:          extern volatile unsigned char           T2CON               @ 0xFCA;
5605:          #ifndef _LIB_BUILD
5606:          asm("T2CON equ 0FCAh");
5607:          #endif
5608:          // bitfield definitions
5609:          typedef union {
5610:              struct {
5611:                  unsigned T2CKPS                 :2;
5612:                  unsigned TMR2ON                 :1;
5613:                  unsigned T2OUTPS                :4;
5614:              };
5615:              struct {
5616:                  unsigned T2CKPS0                :1;
5617:                  unsigned T2CKPS1                :1;
5618:                  unsigned                        :1;
5619:                  unsigned T2OUTPS0               :1;
5620:                  unsigned T2OUTPS1               :1;
5621:                  unsigned T2OUTPS2               :1;
5622:                  unsigned T2OUTPS3               :1;
5623:              };
5624:              struct {
5625:                  unsigned                        :3;
5626:                  unsigned TOUTPS0                :1;
5627:                  unsigned TOUTPS1                :1;
5628:                  unsigned TOUTPS2                :1;
5629:                  unsigned TOUTPS3                :1;
5630:              };
5631:          } T2CONbits_t;
5632:          extern volatile T2CONbits_t T2CONbits @ 0xFCA;
5633:          // bitfield macros
5634:          #define _T2CON_T2CKPS_POSN                                  0x0
5635:          #define _T2CON_T2CKPS_POSITION                              0x0
5636:          #define _T2CON_T2CKPS_SIZE                                  0x2
5637:          #define _T2CON_T2CKPS_LENGTH                                0x2
5638:          #define _T2CON_T2CKPS_MASK                                  0x3
5639:          #define _T2CON_TMR2ON_POSN                                  0x2
5640:          #define _T2CON_TMR2ON_POSITION                              0x2
5641:          #define _T2CON_TMR2ON_SIZE                                  0x1
5642:          #define _T2CON_TMR2ON_LENGTH                                0x1
5643:          #define _T2CON_TMR2ON_MASK                                  0x4
5644:          #define _T2CON_T2OUTPS_POSN                                 0x3
5645:          #define _T2CON_T2OUTPS_POSITION                             0x3
5646:          #define _T2CON_T2OUTPS_SIZE                                 0x4
5647:          #define _T2CON_T2OUTPS_LENGTH                               0x4
5648:          #define _T2CON_T2OUTPS_MASK                                 0x78
5649:          #define _T2CON_T2CKPS0_POSN                                 0x0
5650:          #define _T2CON_T2CKPS0_POSITION                             0x0
5651:          #define _T2CON_T2CKPS0_SIZE                                 0x1
5652:          #define _T2CON_T2CKPS0_LENGTH                               0x1
5653:          #define _T2CON_T2CKPS0_MASK                                 0x1
5654:          #define _T2CON_T2CKPS1_POSN                                 0x1
5655:          #define _T2CON_T2CKPS1_POSITION                             0x1
5656:          #define _T2CON_T2CKPS1_SIZE                                 0x1
5657:          #define _T2CON_T2CKPS1_LENGTH                               0x1
5658:          #define _T2CON_T2CKPS1_MASK                                 0x2
5659:          #define _T2CON_T2OUTPS0_POSN                                0x3
5660:          #define _T2CON_T2OUTPS0_POSITION                            0x3
5661:          #define _T2CON_T2OUTPS0_SIZE                                0x1
5662:          #define _T2CON_T2OUTPS0_LENGTH                              0x1
5663:          #define _T2CON_T2OUTPS0_MASK                                0x8
5664:          #define _T2CON_T2OUTPS1_POSN                                0x4
5665:          #define _T2CON_T2OUTPS1_POSITION                            0x4
5666:          #define _T2CON_T2OUTPS1_SIZE                                0x1
5667:          #define _T2CON_T2OUTPS1_LENGTH                              0x1
5668:          #define _T2CON_T2OUTPS1_MASK                                0x10
5669:          #define _T2CON_T2OUTPS2_POSN                                0x5
5670:          #define _T2CON_T2OUTPS2_POSITION                            0x5
5671:          #define _T2CON_T2OUTPS2_SIZE                                0x1
5672:          #define _T2CON_T2OUTPS2_LENGTH                              0x1
5673:          #define _T2CON_T2OUTPS2_MASK                                0x20
5674:          #define _T2CON_T2OUTPS3_POSN                                0x6
5675:          #define _T2CON_T2OUTPS3_POSITION                            0x6
5676:          #define _T2CON_T2OUTPS3_SIZE                                0x1
5677:          #define _T2CON_T2OUTPS3_LENGTH                              0x1
5678:          #define _T2CON_T2OUTPS3_MASK                                0x40
5679:          #define _T2CON_TOUTPS0_POSN                                 0x3
5680:          #define _T2CON_TOUTPS0_POSITION                             0x3
5681:          #define _T2CON_TOUTPS0_SIZE                                 0x1
5682:          #define _T2CON_TOUTPS0_LENGTH                               0x1
5683:          #define _T2CON_TOUTPS0_MASK                                 0x8
5684:          #define _T2CON_TOUTPS1_POSN                                 0x4
5685:          #define _T2CON_TOUTPS1_POSITION                             0x4
5686:          #define _T2CON_TOUTPS1_SIZE                                 0x1
5687:          #define _T2CON_TOUTPS1_LENGTH                               0x1
5688:          #define _T2CON_TOUTPS1_MASK                                 0x10
5689:          #define _T2CON_TOUTPS2_POSN                                 0x5
5690:          #define _T2CON_TOUTPS2_POSITION                             0x5
5691:          #define _T2CON_TOUTPS2_SIZE                                 0x1
5692:          #define _T2CON_TOUTPS2_LENGTH                               0x1
5693:          #define _T2CON_TOUTPS2_MASK                                 0x20
5694:          #define _T2CON_TOUTPS3_POSN                                 0x6
5695:          #define _T2CON_TOUTPS3_POSITION                             0x6
5696:          #define _T2CON_TOUTPS3_SIZE                                 0x1
5697:          #define _T2CON_TOUTPS3_LENGTH                               0x1
5698:          #define _T2CON_TOUTPS3_MASK                                 0x40
5699:          
5700:          // Register: PR2
5701:          extern volatile unsigned char           PR2                 @ 0xFCB;
5702:          #ifndef _LIB_BUILD
5703:          asm("PR2 equ 0FCBh");
5704:          #endif
5705:          // aliases
5706:          extern volatile unsigned char           MEMCON              @ 0xFCB;
5707:          #ifndef _LIB_BUILD
5708:          asm("MEMCON equ 0FCBh");
5709:          #endif
5710:          // bitfield definitions
5711:          typedef union {
5712:              struct {
5713:                  unsigned                        :7;
5714:                  unsigned EBDIS                  :1;
5715:              };
5716:              struct {
5717:                  unsigned                        :4;
5718:                  unsigned WAIT0                  :1;
5719:              };
5720:              struct {
5721:                  unsigned                        :5;
5722:                  unsigned WAIT1                  :1;
5723:              };
5724:              struct {
5725:                  unsigned WM0                    :1;
5726:              };
5727:              struct {
5728:                  unsigned                        :1;
5729:                  unsigned WM1                    :1;
5730:              };
5731:          } PR2bits_t;
5732:          extern volatile PR2bits_t PR2bits @ 0xFCB;
5733:          // bitfield macros
5734:          #define _PR2_EBDIS_POSN                                     0x7
5735:          #define _PR2_EBDIS_POSITION                                 0x7
5736:          #define _PR2_EBDIS_SIZE                                     0x1
5737:          #define _PR2_EBDIS_LENGTH                                   0x1
5738:          #define _PR2_EBDIS_MASK                                     0x80
5739:          #define _PR2_WAIT0_POSN                                     0x4
5740:          #define _PR2_WAIT0_POSITION                                 0x4
5741:          #define _PR2_WAIT0_SIZE                                     0x1
5742:          #define _PR2_WAIT0_LENGTH                                   0x1
5743:          #define _PR2_WAIT0_MASK                                     0x10
5744:          #define _PR2_WAIT1_POSN                                     0x5
5745:          #define _PR2_WAIT1_POSITION                                 0x5
5746:          #define _PR2_WAIT1_SIZE                                     0x1
5747:          #define _PR2_WAIT1_LENGTH                                   0x1
5748:          #define _PR2_WAIT1_MASK                                     0x20
5749:          #define _PR2_WM0_POSN                                       0x0
5750:          #define _PR2_WM0_POSITION                                   0x0
5751:          #define _PR2_WM0_SIZE                                       0x1
5752:          #define _PR2_WM0_LENGTH                                     0x1
5753:          #define _PR2_WM0_MASK                                       0x1
5754:          #define _PR2_WM1_POSN                                       0x1
5755:          #define _PR2_WM1_POSITION                                   0x1
5756:          #define _PR2_WM1_SIZE                                       0x1
5757:          #define _PR2_WM1_LENGTH                                     0x1
5758:          #define _PR2_WM1_MASK                                       0x2
5759:          // alias bitfield definitions
5760:          typedef union {
5761:              struct {
5762:                  unsigned                        :7;
5763:                  unsigned EBDIS                  :1;
5764:              };
5765:              struct {
5766:                  unsigned                        :4;
5767:                  unsigned WAIT0                  :1;
5768:              };
5769:              struct {
5770:                  unsigned                        :5;
5771:                  unsigned WAIT1                  :1;
5772:              };
5773:              struct {
5774:                  unsigned WM0                    :1;
5775:              };
5776:              struct {
5777:                  unsigned                        :1;
5778:                  unsigned WM1                    :1;
5779:              };
5780:          } MEMCONbits_t;
5781:          extern volatile MEMCONbits_t MEMCONbits @ 0xFCB;
5782:          // bitfield macros
5783:          #define _MEMCON_EBDIS_POSN                                  0x7
5784:          #define _MEMCON_EBDIS_POSITION                              0x7
5785:          #define _MEMCON_EBDIS_SIZE                                  0x1
5786:          #define _MEMCON_EBDIS_LENGTH                                0x1
5787:          #define _MEMCON_EBDIS_MASK                                  0x80
5788:          #define _MEMCON_WAIT0_POSN                                  0x4
5789:          #define _MEMCON_WAIT0_POSITION                              0x4
5790:          #define _MEMCON_WAIT0_SIZE                                  0x1
5791:          #define _MEMCON_WAIT0_LENGTH                                0x1
5792:          #define _MEMCON_WAIT0_MASK                                  0x10
5793:          #define _MEMCON_WAIT1_POSN                                  0x5
5794:          #define _MEMCON_WAIT1_POSITION                              0x5
5795:          #define _MEMCON_WAIT1_SIZE                                  0x1
5796:          #define _MEMCON_WAIT1_LENGTH                                0x1
5797:          #define _MEMCON_WAIT1_MASK                                  0x20
5798:          #define _MEMCON_WM0_POSN                                    0x0
5799:          #define _MEMCON_WM0_POSITION                                0x0
5800:          #define _MEMCON_WM0_SIZE                                    0x1
5801:          #define _MEMCON_WM0_LENGTH                                  0x1
5802:          #define _MEMCON_WM0_MASK                                    0x1
5803:          #define _MEMCON_WM1_POSN                                    0x1
5804:          #define _MEMCON_WM1_POSITION                                0x1
5805:          #define _MEMCON_WM1_SIZE                                    0x1
5806:          #define _MEMCON_WM1_LENGTH                                  0x1
5807:          #define _MEMCON_WM1_MASK                                    0x2
5808:          
5809:          // Register: TMR2
5810:          extern volatile unsigned char           TMR2                @ 0xFCC;
5811:          #ifndef _LIB_BUILD
5812:          asm("TMR2 equ 0FCCh");
5813:          #endif
5814:          
5815:          // Register: T1CON
5816:          extern volatile unsigned char           T1CON               @ 0xFCD;
5817:          #ifndef _LIB_BUILD
5818:          asm("T1CON equ 0FCDh");
5819:          #endif
5820:          // bitfield definitions
5821:          typedef union {
5822:              struct {
5823:                  unsigned                        :2;
5824:                  unsigned NOT_T1SYNC             :1;
5825:              };
5826:              struct {
5827:                  unsigned TMR1ON                 :1;
5828:                  unsigned TMR1CS                 :1;
5829:                  unsigned nT1SYNC                :1;
5830:                  unsigned T1OSCEN                :1;
5831:                  unsigned T1CKPS                 :2;
5832:                  unsigned T1RUN                  :1;
5833:                  unsigned RD16                   :1;
5834:              };
5835:              struct {
5836:                  unsigned                        :2;
5837:                  unsigned T1SYNC                 :1;
5838:                  unsigned                        :1;
5839:                  unsigned T1CKPS0                :1;
5840:                  unsigned T1CKPS1                :1;
5841:              };
5842:              struct {
5843:                  unsigned                        :3;
5844:                  unsigned SOSCEN                 :1;
5845:              };
5846:              struct {
5847:                  unsigned                        :7;
5848:                  unsigned T1RD16                 :1;
5849:              };
5850:          } T1CONbits_t;
5851:          extern volatile T1CONbits_t T1CONbits @ 0xFCD;
5852:          // bitfield macros
5853:          #define _T1CON_NOT_T1SYNC_POSN                              0x2
5854:          #define _T1CON_NOT_T1SYNC_POSITION                          0x2
5855:          #define _T1CON_NOT_T1SYNC_SIZE                              0x1
5856:          #define _T1CON_NOT_T1SYNC_LENGTH                            0x1
5857:          #define _T1CON_NOT_T1SYNC_MASK                              0x4
5858:          #define _T1CON_TMR1ON_POSN                                  0x0
5859:          #define _T1CON_TMR1ON_POSITION                              0x0
5860:          #define _T1CON_TMR1ON_SIZE                                  0x1
5861:          #define _T1CON_TMR1ON_LENGTH                                0x1
5862:          #define _T1CON_TMR1ON_MASK                                  0x1
5863:          #define _T1CON_TMR1CS_POSN                                  0x1
5864:          #define _T1CON_TMR1CS_POSITION                              0x1
5865:          #define _T1CON_TMR1CS_SIZE                                  0x1
5866:          #define _T1CON_TMR1CS_LENGTH                                0x1
5867:          #define _T1CON_TMR1CS_MASK                                  0x2
5868:          #define _T1CON_nT1SYNC_POSN                                 0x2
5869:          #define _T1CON_nT1SYNC_POSITION                             0x2
5870:          #define _T1CON_nT1SYNC_SIZE                                 0x1
5871:          #define _T1CON_nT1SYNC_LENGTH                               0x1
5872:          #define _T1CON_nT1SYNC_MASK                                 0x4
5873:          #define _T1CON_T1OSCEN_POSN                                 0x3
5874:          #define _T1CON_T1OSCEN_POSITION                             0x3
5875:          #define _T1CON_T1OSCEN_SIZE                                 0x1
5876:          #define _T1CON_T1OSCEN_LENGTH                               0x1
5877:          #define _T1CON_T1OSCEN_MASK                                 0x8
5878:          #define _T1CON_T1CKPS_POSN                                  0x4
5879:          #define _T1CON_T1CKPS_POSITION                              0x4
5880:          #define _T1CON_T1CKPS_SIZE                                  0x2
5881:          #define _T1CON_T1CKPS_LENGTH                                0x2
5882:          #define _T1CON_T1CKPS_MASK                                  0x30
5883:          #define _T1CON_T1RUN_POSN                                   0x6
5884:          #define _T1CON_T1RUN_POSITION                               0x6
5885:          #define _T1CON_T1RUN_SIZE                                   0x1
5886:          #define _T1CON_T1RUN_LENGTH                                 0x1
5887:          #define _T1CON_T1RUN_MASK                                   0x40
5888:          #define _T1CON_RD16_POSN                                    0x7
5889:          #define _T1CON_RD16_POSITION                                0x7
5890:          #define _T1CON_RD16_SIZE                                    0x1
5891:          #define _T1CON_RD16_LENGTH                                  0x1
5892:          #define _T1CON_RD16_MASK                                    0x80
5893:          #define _T1CON_T1SYNC_POSN                                  0x2
5894:          #define _T1CON_T1SYNC_POSITION                              0x2
5895:          #define _T1CON_T1SYNC_SIZE                                  0x1
5896:          #define _T1CON_T1SYNC_LENGTH                                0x1
5897:          #define _T1CON_T1SYNC_MASK                                  0x4
5898:          #define _T1CON_T1CKPS0_POSN                                 0x4
5899:          #define _T1CON_T1CKPS0_POSITION                             0x4
5900:          #define _T1CON_T1CKPS0_SIZE                                 0x1
5901:          #define _T1CON_T1CKPS0_LENGTH                               0x1
5902:          #define _T1CON_T1CKPS0_MASK                                 0x10
5903:          #define _T1CON_T1CKPS1_POSN                                 0x5
5904:          #define _T1CON_T1CKPS1_POSITION                             0x5
5905:          #define _T1CON_T1CKPS1_SIZE                                 0x1
5906:          #define _T1CON_T1CKPS1_LENGTH                               0x1
5907:          #define _T1CON_T1CKPS1_MASK                                 0x20
5908:          #define _T1CON_SOSCEN_POSN                                  0x3
5909:          #define _T1CON_SOSCEN_POSITION                              0x3
5910:          #define _T1CON_SOSCEN_SIZE                                  0x1
5911:          #define _T1CON_SOSCEN_LENGTH                                0x1
5912:          #define _T1CON_SOSCEN_MASK                                  0x8
5913:          #define _T1CON_T1RD16_POSN                                  0x7
5914:          #define _T1CON_T1RD16_POSITION                              0x7
5915:          #define _T1CON_T1RD16_SIZE                                  0x1
5916:          #define _T1CON_T1RD16_LENGTH                                0x1
5917:          #define _T1CON_T1RD16_MASK                                  0x80
5918:          
5919:          // Register: TMR1
5920:          extern volatile unsigned short          TMR1                @ 0xFCE;
5921:          #ifndef _LIB_BUILD
5922:          asm("TMR1 equ 0FCEh");
5923:          #endif
5924:          
5925:          // Register: TMR1L
5926:          extern volatile unsigned char           TMR1L               @ 0xFCE;
5927:          #ifndef _LIB_BUILD
5928:          asm("TMR1L equ 0FCEh");
5929:          #endif
5930:          
5931:          // Register: TMR1H
5932:          extern volatile unsigned char           TMR1H               @ 0xFCF;
5933:          #ifndef _LIB_BUILD
5934:          asm("TMR1H equ 0FCFh");
5935:          #endif
5936:          
5937:          // Register: RCON
5938:          extern volatile unsigned char           RCON                @ 0xFD0;
5939:          #ifndef _LIB_BUILD
5940:          asm("RCON equ 0FD0h");
5941:          #endif
5942:          // bitfield definitions
5943:          typedef union {
5944:              struct {
5945:                  unsigned NOT_BOR                :1;
5946:              };
5947:              struct {
5948:                  unsigned                        :1;
5949:                  unsigned NOT_POR                :1;
5950:              };
5951:              struct {
5952:                  unsigned                        :2;
5953:                  unsigned NOT_PD                 :1;
5954:              };
5955:              struct {
5956:                  unsigned                        :3;
5957:                  unsigned NOT_TO                 :1;
5958:              };
5959:              struct {
5960:                  unsigned                        :4;
5961:                  unsigned NOT_RI                 :1;
5962:              };
5963:              struct {
5964:                  unsigned nBOR                   :1;
5965:                  unsigned nPOR                   :1;
5966:                  unsigned nPD                    :1;
5967:                  unsigned nTO                    :1;
5968:                  unsigned nRI                    :1;
5969:                  unsigned                        :1;
5970:                  unsigned SBOREN                 :1;
5971:                  unsigned IPEN                   :1;
5972:              };
5973:              struct {
5974:                  unsigned BOR                    :1;
5975:                  unsigned POR                    :1;
5976:                  unsigned PD                     :1;
5977:                  unsigned TO                     :1;
5978:                  unsigned RI                     :1;
5979:              };
5980:          } RCONbits_t;
5981:          extern volatile RCONbits_t RCONbits @ 0xFD0;
5982:          // bitfield macros
5983:          #define _RCON_NOT_BOR_POSN                                  0x0
5984:          #define _RCON_NOT_BOR_POSITION                              0x0
5985:          #define _RCON_NOT_BOR_SIZE                                  0x1
5986:          #define _RCON_NOT_BOR_LENGTH                                0x1
5987:          #define _RCON_NOT_BOR_MASK                                  0x1
5988:          #define _RCON_NOT_POR_POSN                                  0x1
5989:          #define _RCON_NOT_POR_POSITION                              0x1
5990:          #define _RCON_NOT_POR_SIZE                                  0x1
5991:          #define _RCON_NOT_POR_LENGTH                                0x1
5992:          #define _RCON_NOT_POR_MASK                                  0x2
5993:          #define _RCON_NOT_PD_POSN                                   0x2
5994:          #define _RCON_NOT_PD_POSITION                               0x2
5995:          #define _RCON_NOT_PD_SIZE                                   0x1
5996:          #define _RCON_NOT_PD_LENGTH                                 0x1
5997:          #define _RCON_NOT_PD_MASK                                   0x4
5998:          #define _RCON_NOT_TO_POSN                                   0x3
5999:          #define _RCON_NOT_TO_POSITION                               0x3
6000:          #define _RCON_NOT_TO_SIZE                                   0x1
6001:          #define _RCON_NOT_TO_LENGTH                                 0x1
6002:          #define _RCON_NOT_TO_MASK                                   0x8
6003:          #define _RCON_NOT_RI_POSN                                   0x4
6004:          #define _RCON_NOT_RI_POSITION                               0x4
6005:          #define _RCON_NOT_RI_SIZE                                   0x1
6006:          #define _RCON_NOT_RI_LENGTH                                 0x1
6007:          #define _RCON_NOT_RI_MASK                                   0x10
6008:          #define _RCON_nBOR_POSN                                     0x0
6009:          #define _RCON_nBOR_POSITION                                 0x0
6010:          #define _RCON_nBOR_SIZE                                     0x1
6011:          #define _RCON_nBOR_LENGTH                                   0x1
6012:          #define _RCON_nBOR_MASK                                     0x1
6013:          #define _RCON_nPOR_POSN                                     0x1
6014:          #define _RCON_nPOR_POSITION                                 0x1
6015:          #define _RCON_nPOR_SIZE                                     0x1
6016:          #define _RCON_nPOR_LENGTH                                   0x1
6017:          #define _RCON_nPOR_MASK                                     0x2
6018:          #define _RCON_nPD_POSN                                      0x2
6019:          #define _RCON_nPD_POSITION                                  0x2
6020:          #define _RCON_nPD_SIZE                                      0x1
6021:          #define _RCON_nPD_LENGTH                                    0x1
6022:          #define _RCON_nPD_MASK                                      0x4
6023:          #define _RCON_nTO_POSN                                      0x3
6024:          #define _RCON_nTO_POSITION                                  0x3
6025:          #define _RCON_nTO_SIZE                                      0x1
6026:          #define _RCON_nTO_LENGTH                                    0x1
6027:          #define _RCON_nTO_MASK                                      0x8
6028:          #define _RCON_nRI_POSN                                      0x4
6029:          #define _RCON_nRI_POSITION                                  0x4
6030:          #define _RCON_nRI_SIZE                                      0x1
6031:          #define _RCON_nRI_LENGTH                                    0x1
6032:          #define _RCON_nRI_MASK                                      0x10
6033:          #define _RCON_SBOREN_POSN                                   0x6
6034:          #define _RCON_SBOREN_POSITION                               0x6
6035:          #define _RCON_SBOREN_SIZE                                   0x1
6036:          #define _RCON_SBOREN_LENGTH                                 0x1
6037:          #define _RCON_SBOREN_MASK                                   0x40
6038:          #define _RCON_IPEN_POSN                                     0x7
6039:          #define _RCON_IPEN_POSITION                                 0x7
6040:          #define _RCON_IPEN_SIZE                                     0x1
6041:          #define _RCON_IPEN_LENGTH                                   0x1
6042:          #define _RCON_IPEN_MASK                                     0x80
6043:          #define _RCON_BOR_POSN                                      0x0
6044:          #define _RCON_BOR_POSITION                                  0x0
6045:          #define _RCON_BOR_SIZE                                      0x1
6046:          #define _RCON_BOR_LENGTH                                    0x1
6047:          #define _RCON_BOR_MASK                                      0x1
6048:          #define _RCON_POR_POSN                                      0x1
6049:          #define _RCON_POR_POSITION                                  0x1
6050:          #define _RCON_POR_SIZE                                      0x1
6051:          #define _RCON_POR_LENGTH                                    0x1
6052:          #define _RCON_POR_MASK                                      0x2
6053:          #define _RCON_PD_POSN                                       0x2
6054:          #define _RCON_PD_POSITION                                   0x2
6055:          #define _RCON_PD_SIZE                                       0x1
6056:          #define _RCON_PD_LENGTH                                     0x1
6057:          #define _RCON_PD_MASK                                       0x4
6058:          #define _RCON_TO_POSN                                       0x3
6059:          #define _RCON_TO_POSITION                                   0x3
6060:          #define _RCON_TO_SIZE                                       0x1
6061:          #define _RCON_TO_LENGTH                                     0x1
6062:          #define _RCON_TO_MASK                                       0x8
6063:          #define _RCON_RI_POSN                                       0x4
6064:          #define _RCON_RI_POSITION                                   0x4
6065:          #define _RCON_RI_SIZE                                       0x1
6066:          #define _RCON_RI_LENGTH                                     0x1
6067:          #define _RCON_RI_MASK                                       0x10
6068:          
6069:          // Register: WDTCON
6070:          extern volatile unsigned char           WDTCON              @ 0xFD1;
6071:          #ifndef _LIB_BUILD
6072:          asm("WDTCON equ 0FD1h");
6073:          #endif
6074:          // bitfield definitions
6075:          typedef union {
6076:              struct {
6077:                  unsigned SWDTEN                 :1;
6078:              };
6079:              struct {
6080:                  unsigned SWDTE                  :1;
6081:              };
6082:          } WDTCONbits_t;
6083:          extern volatile WDTCONbits_t WDTCONbits @ 0xFD1;
6084:          // bitfield macros
6085:          #define _WDTCON_SWDTEN_POSN                                 0x0
6086:          #define _WDTCON_SWDTEN_POSITION                             0x0
6087:          #define _WDTCON_SWDTEN_SIZE                                 0x1
6088:          #define _WDTCON_SWDTEN_LENGTH                               0x1
6089:          #define _WDTCON_SWDTEN_MASK                                 0x1
6090:          #define _WDTCON_SWDTE_POSN                                  0x0
6091:          #define _WDTCON_SWDTE_POSITION                              0x0
6092:          #define _WDTCON_SWDTE_SIZE                                  0x1
6093:          #define _WDTCON_SWDTE_LENGTH                                0x1
6094:          #define _WDTCON_SWDTE_MASK                                  0x1
6095:          
6096:          // Register: HLVDCON
6097:          extern volatile unsigned char           HLVDCON             @ 0xFD2;
6098:          #ifndef _LIB_BUILD
6099:          asm("HLVDCON equ 0FD2h");
6100:          #endif
6101:          // aliases
6102:          extern volatile unsigned char           LVDCON              @ 0xFD2;
6103:          #ifndef _LIB_BUILD
6104:          asm("LVDCON equ 0FD2h");
6105:          #endif
6106:          // bitfield definitions
6107:          typedef union {
6108:              struct {
6109:                  unsigned HLVDL                  :4;
6110:                  unsigned HLVDEN                 :1;
6111:                  unsigned IVRST                  :1;
6112:                  unsigned                        :1;
6113:                  unsigned VDIRMAG                :1;
6114:              };
6115:              struct {
6116:                  unsigned HLVDL0                 :1;
6117:                  unsigned HLVDL1                 :1;
6118:                  unsigned HLVDL2                 :1;
6119:                  unsigned HLVDL3                 :1;
6120:              };
6121:              struct {
6122:                  unsigned LVDL0                  :1;
6123:                  unsigned LVDL1                  :1;
6124:                  unsigned LVDL2                  :1;
6125:                  unsigned LVDL3                  :1;
6126:                  unsigned LVDEN                  :1;
6127:                  unsigned IRVST                  :1;
6128:              };
6129:              struct {
6130:                  unsigned LVV0                   :1;
6131:                  unsigned LVV1                   :1;
6132:                  unsigned LVV2                   :1;
6133:                  unsigned LVV3                   :1;
6134:                  unsigned                        :1;
6135:                  unsigned BGST                   :1;
6136:              };
6137:          } HLVDCONbits_t;
6138:          extern volatile HLVDCONbits_t HLVDCONbits @ 0xFD2;
6139:          // bitfield macros
6140:          #define _HLVDCON_HLVDL_POSN                                 0x0
6141:          #define _HLVDCON_HLVDL_POSITION                             0x0
6142:          #define _HLVDCON_HLVDL_SIZE                                 0x4
6143:          #define _HLVDCON_HLVDL_LENGTH                               0x4
6144:          #define _HLVDCON_HLVDL_MASK                                 0xF
6145:          #define _HLVDCON_HLVDEN_POSN                                0x4
6146:          #define _HLVDCON_HLVDEN_POSITION                            0x4
6147:          #define _HLVDCON_HLVDEN_SIZE                                0x1
6148:          #define _HLVDCON_HLVDEN_LENGTH                              0x1
6149:          #define _HLVDCON_HLVDEN_MASK                                0x10
6150:          #define _HLVDCON_IVRST_POSN                                 0x5
6151:          #define _HLVDCON_IVRST_POSITION                             0x5
6152:          #define _HLVDCON_IVRST_SIZE                                 0x1
6153:          #define _HLVDCON_IVRST_LENGTH                               0x1
6154:          #define _HLVDCON_IVRST_MASK                                 0x20
6155:          #define _HLVDCON_VDIRMAG_POSN                               0x7
6156:          #define _HLVDCON_VDIRMAG_POSITION                           0x7
6157:          #define _HLVDCON_VDIRMAG_SIZE                               0x1
6158:          #define _HLVDCON_VDIRMAG_LENGTH                             0x1
6159:          #define _HLVDCON_VDIRMAG_MASK                               0x80
6160:          #define _HLVDCON_HLVDL0_POSN                                0x0
6161:          #define _HLVDCON_HLVDL0_POSITION                            0x0
6162:          #define _HLVDCON_HLVDL0_SIZE                                0x1
6163:          #define _HLVDCON_HLVDL0_LENGTH                              0x1
6164:          #define _HLVDCON_HLVDL0_MASK                                0x1
6165:          #define _HLVDCON_HLVDL1_POSN                                0x1
6166:          #define _HLVDCON_HLVDL1_POSITION                            0x1
6167:          #define _HLVDCON_HLVDL1_SIZE                                0x1
6168:          #define _HLVDCON_HLVDL1_LENGTH                              0x1
6169:          #define _HLVDCON_HLVDL1_MASK                                0x2
6170:          #define _HLVDCON_HLVDL2_POSN                                0x2
6171:          #define _HLVDCON_HLVDL2_POSITION                            0x2
6172:          #define _HLVDCON_HLVDL2_SIZE                                0x1
6173:          #define _HLVDCON_HLVDL2_LENGTH                              0x1
6174:          #define _HLVDCON_HLVDL2_MASK                                0x4
6175:          #define _HLVDCON_HLVDL3_POSN                                0x3
6176:          #define _HLVDCON_HLVDL3_POSITION                            0x3
6177:          #define _HLVDCON_HLVDL3_SIZE                                0x1
6178:          #define _HLVDCON_HLVDL3_LENGTH                              0x1
6179:          #define _HLVDCON_HLVDL3_MASK                                0x8
6180:          #define _HLVDCON_LVDL0_POSN                                 0x0
6181:          #define _HLVDCON_LVDL0_POSITION                             0x0
6182:          #define _HLVDCON_LVDL0_SIZE                                 0x1
6183:          #define _HLVDCON_LVDL0_LENGTH                               0x1
6184:          #define _HLVDCON_LVDL0_MASK                                 0x1
6185:          #define _HLVDCON_LVDL1_POSN                                 0x1
6186:          #define _HLVDCON_LVDL1_POSITION                             0x1
6187:          #define _HLVDCON_LVDL1_SIZE                                 0x1
6188:          #define _HLVDCON_LVDL1_LENGTH                               0x1
6189:          #define _HLVDCON_LVDL1_MASK                                 0x2
6190:          #define _HLVDCON_LVDL2_POSN                                 0x2
6191:          #define _HLVDCON_LVDL2_POSITION                             0x2
6192:          #define _HLVDCON_LVDL2_SIZE                                 0x1
6193:          #define _HLVDCON_LVDL2_LENGTH                               0x1
6194:          #define _HLVDCON_LVDL2_MASK                                 0x4
6195:          #define _HLVDCON_LVDL3_POSN                                 0x3
6196:          #define _HLVDCON_LVDL3_POSITION                             0x3
6197:          #define _HLVDCON_LVDL3_SIZE                                 0x1
6198:          #define _HLVDCON_LVDL3_LENGTH                               0x1
6199:          #define _HLVDCON_LVDL3_MASK                                 0x8
6200:          #define _HLVDCON_LVDEN_POSN                                 0x4
6201:          #define _HLVDCON_LVDEN_POSITION                             0x4
6202:          #define _HLVDCON_LVDEN_SIZE                                 0x1
6203:          #define _HLVDCON_LVDEN_LENGTH                               0x1
6204:          #define _HLVDCON_LVDEN_MASK                                 0x10
6205:          #define _HLVDCON_IRVST_POSN                                 0x5
6206:          #define _HLVDCON_IRVST_POSITION                             0x5
6207:          #define _HLVDCON_IRVST_SIZE                                 0x1
6208:          #define _HLVDCON_IRVST_LENGTH                               0x1
6209:          #define _HLVDCON_IRVST_MASK                                 0x20
6210:          #define _HLVDCON_LVV0_POSN                                  0x0
6211:          #define _HLVDCON_LVV0_POSITION                              0x0
6212:          #define _HLVDCON_LVV0_SIZE                                  0x1
6213:          #define _HLVDCON_LVV0_LENGTH                                0x1
6214:          #define _HLVDCON_LVV0_MASK                                  0x1
6215:          #define _HLVDCON_LVV1_POSN                                  0x1
6216:          #define _HLVDCON_LVV1_POSITION                              0x1
6217:          #define _HLVDCON_LVV1_SIZE                                  0x1
6218:          #define _HLVDCON_LVV1_LENGTH                                0x1
6219:          #define _HLVDCON_LVV1_MASK                                  0x2
6220:          #define _HLVDCON_LVV2_POSN                                  0x2
6221:          #define _HLVDCON_LVV2_POSITION                              0x2
6222:          #define _HLVDCON_LVV2_SIZE                                  0x1
6223:          #define _HLVDCON_LVV2_LENGTH                                0x1
6224:          #define _HLVDCON_LVV2_MASK                                  0x4
6225:          #define _HLVDCON_LVV3_POSN                                  0x3
6226:          #define _HLVDCON_LVV3_POSITION                              0x3
6227:          #define _HLVDCON_LVV3_SIZE                                  0x1
6228:          #define _HLVDCON_LVV3_LENGTH                                0x1
6229:          #define _HLVDCON_LVV3_MASK                                  0x8
6230:          #define _HLVDCON_BGST_POSN                                  0x5
6231:          #define _HLVDCON_BGST_POSITION                              0x5
6232:          #define _HLVDCON_BGST_SIZE                                  0x1
6233:          #define _HLVDCON_BGST_LENGTH                                0x1
6234:          #define _HLVDCON_BGST_MASK                                  0x20
6235:          // alias bitfield definitions
6236:          typedef union {
6237:              struct {
6238:                  unsigned HLVDL                  :4;
6239:                  unsigned HLVDEN                 :1;
6240:                  unsigned IVRST                  :1;
6241:                  unsigned                        :1;
6242:                  unsigned VDIRMAG                :1;
6243:              };
6244:              struct {
6245:                  unsigned HLVDL0                 :1;
6246:                  unsigned HLVDL1                 :1;
6247:                  unsigned HLVDL2                 :1;
6248:                  unsigned HLVDL3                 :1;
6249:              };
6250:              struct {
6251:                  unsigned LVDL0                  :1;
6252:                  unsigned LVDL1                  :1;
6253:                  unsigned LVDL2                  :1;
6254:                  unsigned LVDL3                  :1;
6255:                  unsigned LVDEN                  :1;
6256:                  unsigned IRVST                  :1;
6257:              };
6258:              struct {
6259:                  unsigned LVV0                   :1;
6260:                  unsigned LVV1                   :1;
6261:                  unsigned LVV2                   :1;
6262:                  unsigned LVV3                   :1;
6263:                  unsigned                        :1;
6264:                  unsigned BGST                   :1;
6265:              };
6266:          } LVDCONbits_t;
6267:          extern volatile LVDCONbits_t LVDCONbits @ 0xFD2;
6268:          // bitfield macros
6269:          #define _LVDCON_HLVDL_POSN                                  0x0
6270:          #define _LVDCON_HLVDL_POSITION                              0x0
6271:          #define _LVDCON_HLVDL_SIZE                                  0x4
6272:          #define _LVDCON_HLVDL_LENGTH                                0x4
6273:          #define _LVDCON_HLVDL_MASK                                  0xF
6274:          #define _LVDCON_HLVDEN_POSN                                 0x4
6275:          #define _LVDCON_HLVDEN_POSITION                             0x4
6276:          #define _LVDCON_HLVDEN_SIZE                                 0x1
6277:          #define _LVDCON_HLVDEN_LENGTH                               0x1
6278:          #define _LVDCON_HLVDEN_MASK                                 0x10
6279:          #define _LVDCON_IVRST_POSN                                  0x5
6280:          #define _LVDCON_IVRST_POSITION                              0x5
6281:          #define _LVDCON_IVRST_SIZE                                  0x1
6282:          #define _LVDCON_IVRST_LENGTH                                0x1
6283:          #define _LVDCON_IVRST_MASK                                  0x20
6284:          #define _LVDCON_VDIRMAG_POSN                                0x7
6285:          #define _LVDCON_VDIRMAG_POSITION                            0x7
6286:          #define _LVDCON_VDIRMAG_SIZE                                0x1
6287:          #define _LVDCON_VDIRMAG_LENGTH                              0x1
6288:          #define _LVDCON_VDIRMAG_MASK                                0x80
6289:          #define _LVDCON_HLVDL0_POSN                                 0x0
6290:          #define _LVDCON_HLVDL0_POSITION                             0x0
6291:          #define _LVDCON_HLVDL0_SIZE                                 0x1
6292:          #define _LVDCON_HLVDL0_LENGTH                               0x1
6293:          #define _LVDCON_HLVDL0_MASK                                 0x1
6294:          #define _LVDCON_HLVDL1_POSN                                 0x1
6295:          #define _LVDCON_HLVDL1_POSITION                             0x1
6296:          #define _LVDCON_HLVDL1_SIZE                                 0x1
6297:          #define _LVDCON_HLVDL1_LENGTH                               0x1
6298:          #define _LVDCON_HLVDL1_MASK                                 0x2
6299:          #define _LVDCON_HLVDL2_POSN                                 0x2
6300:          #define _LVDCON_HLVDL2_POSITION                             0x2
6301:          #define _LVDCON_HLVDL2_SIZE                                 0x1
6302:          #define _LVDCON_HLVDL2_LENGTH                               0x1
6303:          #define _LVDCON_HLVDL2_MASK                                 0x4
6304:          #define _LVDCON_HLVDL3_POSN                                 0x3
6305:          #define _LVDCON_HLVDL3_POSITION                             0x3
6306:          #define _LVDCON_HLVDL3_SIZE                                 0x1
6307:          #define _LVDCON_HLVDL3_LENGTH                               0x1
6308:          #define _LVDCON_HLVDL3_MASK                                 0x8
6309:          #define _LVDCON_LVDL0_POSN                                  0x0
6310:          #define _LVDCON_LVDL0_POSITION                              0x0
6311:          #define _LVDCON_LVDL0_SIZE                                  0x1
6312:          #define _LVDCON_LVDL0_LENGTH                                0x1
6313:          #define _LVDCON_LVDL0_MASK                                  0x1
6314:          #define _LVDCON_LVDL1_POSN                                  0x1
6315:          #define _LVDCON_LVDL1_POSITION                              0x1
6316:          #define _LVDCON_LVDL1_SIZE                                  0x1
6317:          #define _LVDCON_LVDL1_LENGTH                                0x1
6318:          #define _LVDCON_LVDL1_MASK                                  0x2
6319:          #define _LVDCON_LVDL2_POSN                                  0x2
6320:          #define _LVDCON_LVDL2_POSITION                              0x2
6321:          #define _LVDCON_LVDL2_SIZE                                  0x1
6322:          #define _LVDCON_LVDL2_LENGTH                                0x1
6323:          #define _LVDCON_LVDL2_MASK                                  0x4
6324:          #define _LVDCON_LVDL3_POSN                                  0x3
6325:          #define _LVDCON_LVDL3_POSITION                              0x3
6326:          #define _LVDCON_LVDL3_SIZE                                  0x1
6327:          #define _LVDCON_LVDL3_LENGTH                                0x1
6328:          #define _LVDCON_LVDL3_MASK                                  0x8
6329:          #define _LVDCON_LVDEN_POSN                                  0x4
6330:          #define _LVDCON_LVDEN_POSITION                              0x4
6331:          #define _LVDCON_LVDEN_SIZE                                  0x1
6332:          #define _LVDCON_LVDEN_LENGTH                                0x1
6333:          #define _LVDCON_LVDEN_MASK                                  0x10
6334:          #define _LVDCON_IRVST_POSN                                  0x5
6335:          #define _LVDCON_IRVST_POSITION                              0x5
6336:          #define _LVDCON_IRVST_SIZE                                  0x1
6337:          #define _LVDCON_IRVST_LENGTH                                0x1
6338:          #define _LVDCON_IRVST_MASK                                  0x20
6339:          #define _LVDCON_LVV0_POSN                                   0x0
6340:          #define _LVDCON_LVV0_POSITION                               0x0
6341:          #define _LVDCON_LVV0_SIZE                                   0x1
6342:          #define _LVDCON_LVV0_LENGTH                                 0x1
6343:          #define _LVDCON_LVV0_MASK                                   0x1
6344:          #define _LVDCON_LVV1_POSN                                   0x1
6345:          #define _LVDCON_LVV1_POSITION                               0x1
6346:          #define _LVDCON_LVV1_SIZE                                   0x1
6347:          #define _LVDCON_LVV1_LENGTH                                 0x1
6348:          #define _LVDCON_LVV1_MASK                                   0x2
6349:          #define _LVDCON_LVV2_POSN                                   0x2
6350:          #define _LVDCON_LVV2_POSITION                               0x2
6351:          #define _LVDCON_LVV2_SIZE                                   0x1
6352:          #define _LVDCON_LVV2_LENGTH                                 0x1
6353:          #define _LVDCON_LVV2_MASK                                   0x4
6354:          #define _LVDCON_LVV3_POSN                                   0x3
6355:          #define _LVDCON_LVV3_POSITION                               0x3
6356:          #define _LVDCON_LVV3_SIZE                                   0x1
6357:          #define _LVDCON_LVV3_LENGTH                                 0x1
6358:          #define _LVDCON_LVV3_MASK                                   0x8
6359:          #define _LVDCON_BGST_POSN                                   0x5
6360:          #define _LVDCON_BGST_POSITION                               0x5
6361:          #define _LVDCON_BGST_SIZE                                   0x1
6362:          #define _LVDCON_BGST_LENGTH                                 0x1
6363:          #define _LVDCON_BGST_MASK                                   0x20
6364:          
6365:          // Register: OSCCON
6366:          extern volatile unsigned char           OSCCON              @ 0xFD3;
6367:          #ifndef _LIB_BUILD
6368:          asm("OSCCON equ 0FD3h");
6369:          #endif
6370:          // bitfield definitions
6371:          typedef union {
6372:              struct {
6373:                  unsigned SCS                    :2;
6374:                  unsigned IOFS                   :1;
6375:                  unsigned OSTS                   :1;
6376:                  unsigned IRCF                   :3;
6377:                  unsigned IDLEN                  :1;
6378:              };
6379:              struct {
6380:                  unsigned SCS0                   :1;
6381:                  unsigned SCS1                   :1;
6382:                  unsigned FLTS                   :1;
6383:                  unsigned                        :1;
6384:                  unsigned IRCF0                  :1;
6385:                  unsigned IRCF1                  :1;
6386:                  unsigned IRCF2                  :1;
6387:              };
6388:          } OSCCONbits_t;
6389:          extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;
6390:          // bitfield macros
6391:          #define _OSCCON_SCS_POSN                                    0x0
6392:          #define _OSCCON_SCS_POSITION                                0x0
6393:          #define _OSCCON_SCS_SIZE                                    0x2
6394:          #define _OSCCON_SCS_LENGTH                                  0x2
6395:          #define _OSCCON_SCS_MASK                                    0x3
6396:          #define _OSCCON_IOFS_POSN                                   0x2
6397:          #define _OSCCON_IOFS_POSITION                               0x2
6398:          #define _OSCCON_IOFS_SIZE                                   0x1
6399:          #define _OSCCON_IOFS_LENGTH                                 0x1
6400:          #define _OSCCON_IOFS_MASK                                   0x4
6401:          #define _OSCCON_OSTS_POSN                                   0x3
6402:          #define _OSCCON_OSTS_POSITION                               0x3
6403:          #define _OSCCON_OSTS_SIZE                                   0x1
6404:          #define _OSCCON_OSTS_LENGTH                                 0x1
6405:          #define _OSCCON_OSTS_MASK                                   0x8
6406:          #define _OSCCON_IRCF_POSN                                   0x4
6407:          #define _OSCCON_IRCF_POSITION                               0x4
6408:          #define _OSCCON_IRCF_SIZE                                   0x3
6409:          #define _OSCCON_IRCF_LENGTH                                 0x3
6410:          #define _OSCCON_IRCF_MASK                                   0x70
6411:          #define _OSCCON_IDLEN_POSN                                  0x7
6412:          #define _OSCCON_IDLEN_POSITION                              0x7
6413:          #define _OSCCON_IDLEN_SIZE                                  0x1
6414:          #define _OSCCON_IDLEN_LENGTH                                0x1
6415:          #define _OSCCON_IDLEN_MASK                                  0x80
6416:          #define _OSCCON_SCS0_POSN                                   0x0
6417:          #define _OSCCON_SCS0_POSITION                               0x0
6418:          #define _OSCCON_SCS0_SIZE                                   0x1
6419:          #define _OSCCON_SCS0_LENGTH                                 0x1
6420:          #define _OSCCON_SCS0_MASK                                   0x1
6421:          #define _OSCCON_SCS1_POSN                                   0x1
6422:          #define _OSCCON_SCS1_POSITION                               0x1
6423:          #define _OSCCON_SCS1_SIZE                                   0x1
6424:          #define _OSCCON_SCS1_LENGTH                                 0x1
6425:          #define _OSCCON_SCS1_MASK                                   0x2
6426:          #define _OSCCON_FLTS_POSN                                   0x2
6427:          #define _OSCCON_FLTS_POSITION                               0x2
6428:          #define _OSCCON_FLTS_SIZE                                   0x1
6429:          #define _OSCCON_FLTS_LENGTH                                 0x1
6430:          #define _OSCCON_FLTS_MASK                                   0x4
6431:          #define _OSCCON_IRCF0_POSN                                  0x4
6432:          #define _OSCCON_IRCF0_POSITION                              0x4
6433:          #define _OSCCON_IRCF0_SIZE                                  0x1
6434:          #define _OSCCON_IRCF0_LENGTH                                0x1
6435:          #define _OSCCON_IRCF0_MASK                                  0x10
6436:          #define _OSCCON_IRCF1_POSN                                  0x5
6437:          #define _OSCCON_IRCF1_POSITION                              0x5
6438:          #define _OSCCON_IRCF1_SIZE                                  0x1
6439:          #define _OSCCON_IRCF1_LENGTH                                0x1
6440:          #define _OSCCON_IRCF1_MASK                                  0x20
6441:          #define _OSCCON_IRCF2_POSN                                  0x6
6442:          #define _OSCCON_IRCF2_POSITION                              0x6
6443:          #define _OSCCON_IRCF2_SIZE                                  0x1
6444:          #define _OSCCON_IRCF2_LENGTH                                0x1
6445:          #define _OSCCON_IRCF2_MASK                                  0x40
6446:          
6447:          // Register: T0CON
6448:          extern volatile unsigned char           T0CON               @ 0xFD5;
6449:          #ifndef _LIB_BUILD
6450:          asm("T0CON equ 0FD5h");
6451:          #endif
6452:          // bitfield definitions
6453:          typedef union {
6454:              struct {
6455:                  unsigned T0PS                   :3;
6456:                  unsigned PSA                    :1;
6457:                  unsigned T0SE                   :1;
6458:                  unsigned T0CS                   :1;
6459:                  unsigned T08BIT                 :1;
6460:                  unsigned TMR0ON                 :1;
6461:              };
6462:              struct {
6463:                  unsigned T0PS0                  :1;
6464:                  unsigned T0PS1                  :1;
6465:                  unsigned T0PS2                  :1;
6466:                  unsigned T0PS3                  :1;
6467:                  unsigned                        :2;
6468:                  unsigned T016BIT                :1;
6469:              };
6470:          } T0CONbits_t;
6471:          extern volatile T0CONbits_t T0CONbits @ 0xFD5;
6472:          // bitfield macros
6473:          #define _T0CON_T0PS_POSN                                    0x0
6474:          #define _T0CON_T0PS_POSITION                                0x0
6475:          #define _T0CON_T0PS_SIZE                                    0x3
6476:          #define _T0CON_T0PS_LENGTH                                  0x3
6477:          #define _T0CON_T0PS_MASK                                    0x7
6478:          #define _T0CON_PSA_POSN                                     0x3
6479:          #define _T0CON_PSA_POSITION                                 0x3
6480:          #define _T0CON_PSA_SIZE                                     0x1
6481:          #define _T0CON_PSA_LENGTH                                   0x1
6482:          #define _T0CON_PSA_MASK                                     0x8
6483:          #define _T0CON_T0SE_POSN                                    0x4
6484:          #define _T0CON_T0SE_POSITION                                0x4
6485:          #define _T0CON_T0SE_SIZE                                    0x1
6486:          #define _T0CON_T0SE_LENGTH                                  0x1
6487:          #define _T0CON_T0SE_MASK                                    0x10
6488:          #define _T0CON_T0CS_POSN                                    0x5
6489:          #define _T0CON_T0CS_POSITION                                0x5
6490:          #define _T0CON_T0CS_SIZE                                    0x1
6491:          #define _T0CON_T0CS_LENGTH                                  0x1
6492:          #define _T0CON_T0CS_MASK                                    0x20
6493:          #define _T0CON_T08BIT_POSN                                  0x6
6494:          #define _T0CON_T08BIT_POSITION                              0x6
6495:          #define _T0CON_T08BIT_SIZE                                  0x1
6496:          #define _T0CON_T08BIT_LENGTH                                0x1
6497:          #define _T0CON_T08BIT_MASK                                  0x40
6498:          #define _T0CON_TMR0ON_POSN                                  0x7
6499:          #define _T0CON_TMR0ON_POSITION                              0x7
6500:          #define _T0CON_TMR0ON_SIZE                                  0x1
6501:          #define _T0CON_TMR0ON_LENGTH                                0x1
6502:          #define _T0CON_TMR0ON_MASK                                  0x80
6503:          #define _T0CON_T0PS0_POSN                                   0x0
6504:          #define _T0CON_T0PS0_POSITION                               0x0
6505:          #define _T0CON_T0PS0_SIZE                                   0x1
6506:          #define _T0CON_T0PS0_LENGTH                                 0x1
6507:          #define _T0CON_T0PS0_MASK                                   0x1
6508:          #define _T0CON_T0PS1_POSN                                   0x1
6509:          #define _T0CON_T0PS1_POSITION                               0x1
6510:          #define _T0CON_T0PS1_SIZE                                   0x1
6511:          #define _T0CON_T0PS1_LENGTH                                 0x1
6512:          #define _T0CON_T0PS1_MASK                                   0x2
6513:          #define _T0CON_T0PS2_POSN                                   0x2
6514:          #define _T0CON_T0PS2_POSITION                               0x2
6515:          #define _T0CON_T0PS2_SIZE                                   0x1
6516:          #define _T0CON_T0PS2_LENGTH                                 0x1
6517:          #define _T0CON_T0PS2_MASK                                   0x4
6518:          #define _T0CON_T0PS3_POSN                                   0x3
6519:          #define _T0CON_T0PS3_POSITION                               0x3
6520:          #define _T0CON_T0PS3_SIZE                                   0x1
6521:          #define _T0CON_T0PS3_LENGTH                                 0x1
6522:          #define _T0CON_T0PS3_MASK                                   0x8
6523:          #define _T0CON_T016BIT_POSN                                 0x6
6524:          #define _T0CON_T016BIT_POSITION                             0x6
6525:          #define _T0CON_T016BIT_SIZE                                 0x1
6526:          #define _T0CON_T016BIT_LENGTH                               0x1
6527:          #define _T0CON_T016BIT_MASK                                 0x40
6528:          
6529:          // Register: TMR0
6530:          extern volatile unsigned short          TMR0                @ 0xFD6;
6531:          #ifndef _LIB_BUILD
6532:          asm("TMR0 equ 0FD6h");
6533:          #endif
6534:          
6535:          // Register: TMR0L
6536:          extern volatile unsigned char           TMR0L               @ 0xFD6;
6537:          #ifndef _LIB_BUILD
6538:          asm("TMR0L equ 0FD6h");
6539:          #endif
6540:          
6541:          // Register: TMR0H
6542:          extern volatile unsigned char           TMR0H               @ 0xFD7;
6543:          #ifndef _LIB_BUILD
6544:          asm("TMR0H equ 0FD7h");
6545:          #endif
6546:          
6547:          // Register: STATUS
6548:          extern volatile unsigned char           STATUS              @ 0xFD8;
6549:          #ifndef _LIB_BUILD
6550:          asm("STATUS equ 0FD8h");
6551:          #endif
6552:          // bitfield definitions
6553:          typedef union {
6554:              struct {
6555:                  unsigned C                      :1;
6556:                  unsigned DC                     :1;
6557:                  unsigned Z                      :1;
6558:                  unsigned OV                     :1;
6559:                  unsigned N                      :1;
6560:              };
6561:              struct {
6562:                  unsigned CARRY                  :1;
6563:              };
6564:              struct {
6565:                  unsigned                        :4;
6566:                  unsigned NEGATIVE               :1;
6567:              };
6568:              struct {
6569:                  unsigned                        :3;
6570:                  unsigned OVERFLOW               :1;
6571:              };
6572:              struct {
6573:                  unsigned                        :2;
6574:                  unsigned ZERO                   :1;
6575:              };
6576:          } STATUSbits_t;
6577:          extern volatile STATUSbits_t STATUSbits @ 0xFD8;
6578:          // bitfield macros
6579:          #define _STATUS_C_POSN                                      0x0
6580:          #define _STATUS_C_POSITION                                  0x0
6581:          #define _STATUS_C_SIZE                                      0x1
6582:          #define _STATUS_C_LENGTH                                    0x1
6583:          #define _STATUS_C_MASK                                      0x1
6584:          #define _STATUS_DC_POSN                                     0x1
6585:          #define _STATUS_DC_POSITION                                 0x1
6586:          #define _STATUS_DC_SIZE                                     0x1
6587:          #define _STATUS_DC_LENGTH                                   0x1
6588:          #define _STATUS_DC_MASK                                     0x2
6589:          #define _STATUS_Z_POSN                                      0x2
6590:          #define _STATUS_Z_POSITION                                  0x2
6591:          #define _STATUS_Z_SIZE                                      0x1
6592:          #define _STATUS_Z_LENGTH                                    0x1
6593:          #define _STATUS_Z_MASK                                      0x4
6594:          #define _STATUS_OV_POSN                                     0x3
6595:          #define _STATUS_OV_POSITION                                 0x3
6596:          #define _STATUS_OV_SIZE                                     0x1
6597:          #define _STATUS_OV_LENGTH                                   0x1
6598:          #define _STATUS_OV_MASK                                     0x8
6599:          #define _STATUS_N_POSN                                      0x4
6600:          #define _STATUS_N_POSITION                                  0x4
6601:          #define _STATUS_N_SIZE                                      0x1
6602:          #define _STATUS_N_LENGTH                                    0x1
6603:          #define _STATUS_N_MASK                                      0x10
6604:          #define _STATUS_CARRY_POSN                                  0x0
6605:          #define _STATUS_CARRY_POSITION                              0x0
6606:          #define _STATUS_CARRY_SIZE                                  0x1
6607:          #define _STATUS_CARRY_LENGTH                                0x1
6608:          #define _STATUS_CARRY_MASK                                  0x1
6609:          #define _STATUS_NEGATIVE_POSN                               0x4
6610:          #define _STATUS_NEGATIVE_POSITION                           0x4
6611:          #define _STATUS_NEGATIVE_SIZE                               0x1
6612:          #define _STATUS_NEGATIVE_LENGTH                             0x1
6613:          #define _STATUS_NEGATIVE_MASK                               0x10
6614:          #define _STATUS_OVERFLOW_POSN                               0x3
6615:          #define _STATUS_OVERFLOW_POSITION                           0x3
6616:          #define _STATUS_OVERFLOW_SIZE                               0x1
6617:          #define _STATUS_OVERFLOW_LENGTH                             0x1
6618:          #define _STATUS_OVERFLOW_MASK                               0x8
6619:          #define _STATUS_ZERO_POSN                                   0x2
6620:          #define _STATUS_ZERO_POSITION                               0x2
6621:          #define _STATUS_ZERO_SIZE                                   0x1
6622:          #define _STATUS_ZERO_LENGTH                                 0x1
6623:          #define _STATUS_ZERO_MASK                                   0x4
6624:          
6625:          // Register: FSR2
6626:          extern volatile unsigned short          FSR2                @ 0xFD9;
6627:          #ifndef _LIB_BUILD
6628:          asm("FSR2 equ 0FD9h");
6629:          #endif
6630:          
6631:          // Register: FSR2L
6632:          extern volatile unsigned char           FSR2L               @ 0xFD9;
6633:          #ifndef _LIB_BUILD
6634:          asm("FSR2L equ 0FD9h");
6635:          #endif
6636:          
6637:          // Register: FSR2H
6638:          extern volatile unsigned char           FSR2H               @ 0xFDA;
6639:          #ifndef _LIB_BUILD
6640:          asm("FSR2H equ 0FDAh");
6641:          #endif
6642:          
6643:          // Register: PLUSW2
6644:          extern volatile unsigned char           PLUSW2              @ 0xFDB;
6645:          #ifndef _LIB_BUILD
6646:          asm("PLUSW2 equ 0FDBh");
6647:          #endif
6648:          
6649:          // Register: PREINC2
6650:          extern volatile unsigned char           PREINC2             @ 0xFDC;
6651:          #ifndef _LIB_BUILD
6652:          asm("PREINC2 equ 0FDCh");
6653:          #endif
6654:          
6655:          // Register: POSTDEC2
6656:          extern volatile unsigned char           POSTDEC2            @ 0xFDD;
6657:          #ifndef _LIB_BUILD
6658:          asm("POSTDEC2 equ 0FDDh");
6659:          #endif
6660:          
6661:          // Register: POSTINC2
6662:          extern volatile unsigned char           POSTINC2            @ 0xFDE;
6663:          #ifndef _LIB_BUILD
6664:          asm("POSTINC2 equ 0FDEh");
6665:          #endif
6666:          
6667:          // Register: INDF2
6668:          extern volatile unsigned char           INDF2               @ 0xFDF;
6669:          #ifndef _LIB_BUILD
6670:          asm("INDF2 equ 0FDFh");
6671:          #endif
6672:          
6673:          // Register: BSR
6674:          extern volatile unsigned char           BSR                 @ 0xFE0;
6675:          #ifndef _LIB_BUILD
6676:          asm("BSR equ 0FE0h");
6677:          #endif
6678:          
6679:          // Register: FSR1
6680:          extern volatile unsigned short          FSR1                @ 0xFE1;
6681:          #ifndef _LIB_BUILD
6682:          asm("FSR1 equ 0FE1h");
6683:          #endif
6684:          
6685:          // Register: FSR1L
6686:          extern volatile unsigned char           FSR1L               @ 0xFE1;
6687:          #ifndef _LIB_BUILD
6688:          asm("FSR1L equ 0FE1h");
6689:          #endif
6690:          
6691:          // Register: FSR1H
6692:          extern volatile unsigned char           FSR1H               @ 0xFE2;
6693:          #ifndef _LIB_BUILD
6694:          asm("FSR1H equ 0FE2h");
6695:          #endif
6696:          
6697:          // Register: PLUSW1
6698:          extern volatile unsigned char           PLUSW1              @ 0xFE3;
6699:          #ifndef _LIB_BUILD
6700:          asm("PLUSW1 equ 0FE3h");
6701:          #endif
6702:          
6703:          // Register: PREINC1
6704:          extern volatile unsigned char           PREINC1             @ 0xFE4;
6705:          #ifndef _LIB_BUILD
6706:          asm("PREINC1 equ 0FE4h");
6707:          #endif
6708:          
6709:          // Register: POSTDEC1
6710:          extern volatile unsigned char           POSTDEC1            @ 0xFE5;
6711:          #ifndef _LIB_BUILD
6712:          asm("POSTDEC1 equ 0FE5h");
6713:          #endif
6714:          
6715:          // Register: POSTINC1
6716:          extern volatile unsigned char           POSTINC1            @ 0xFE6;
6717:          #ifndef _LIB_BUILD
6718:          asm("POSTINC1 equ 0FE6h");
6719:          #endif
6720:          
6721:          // Register: INDF1
6722:          extern volatile unsigned char           INDF1               @ 0xFE7;
6723:          #ifndef _LIB_BUILD
6724:          asm("INDF1 equ 0FE7h");
6725:          #endif
6726:          
6727:          // Register: WREG
6728:          extern volatile unsigned char           WREG                @ 0xFE8;
6729:          #ifndef _LIB_BUILD
6730:          asm("WREG equ 0FE8h");
6731:          #endif
6732:          // aliases
6733:          // extern volatile unsigned char           W                   @ 0xFE8;
6734:          #ifndef _LIB_BUILD
6735:          // asm("W equ 0FE8h");
6736:          #endif
6737:          
6738:          // Register: FSR0
6739:          extern volatile unsigned short          FSR0                @ 0xFE9;
6740:          #ifndef _LIB_BUILD
6741:          asm("FSR0 equ 0FE9h");
6742:          #endif
6743:          
6744:          // Register: FSR0L
6745:          extern volatile unsigned char           FSR0L               @ 0xFE9;
6746:          #ifndef _LIB_BUILD
6747:          asm("FSR0L equ 0FE9h");
6748:          #endif
6749:          
6750:          // Register: FSR0H
6751:          extern volatile unsigned char           FSR0H               @ 0xFEA;
6752:          #ifndef _LIB_BUILD
6753:          asm("FSR0H equ 0FEAh");
6754:          #endif
6755:          
6756:          // Register: PLUSW0
6757:          extern volatile unsigned char           PLUSW0              @ 0xFEB;
6758:          #ifndef _LIB_BUILD
6759:          asm("PLUSW0 equ 0FEBh");
6760:          #endif
6761:          
6762:          // Register: PREINC0
6763:          extern volatile unsigned char           PREINC0             @ 0xFEC;
6764:          #ifndef _LIB_BUILD
6765:          asm("PREINC0 equ 0FECh");
6766:          #endif
6767:          
6768:          // Register: POSTDEC0
6769:          extern volatile unsigned char           POSTDEC0            @ 0xFED;
6770:          #ifndef _LIB_BUILD
6771:          asm("POSTDEC0 equ 0FEDh");
6772:          #endif
6773:          
6774:          // Register: POSTINC0
6775:          extern volatile unsigned char           POSTINC0            @ 0xFEE;
6776:          #ifndef _LIB_BUILD
6777:          asm("POSTINC0 equ 0FEEh");
6778:          #endif
6779:          
6780:          // Register: INDF0
6781:          extern volatile unsigned char           INDF0               @ 0xFEF;
6782:          #ifndef _LIB_BUILD
6783:          asm("INDF0 equ 0FEFh");
6784:          #endif
6785:          
6786:          // Register: INTCON3
6787:          extern volatile unsigned char           INTCON3             @ 0xFF0;
6788:          #ifndef _LIB_BUILD
6789:          asm("INTCON3 equ 0FF0h");
6790:          #endif
6791:          // bitfield definitions
6792:          typedef union {
6793:              struct {
6794:                  unsigned INT1IF                 :1;
6795:                  unsigned INT2IF                 :1;
6796:                  unsigned                        :1;
6797:                  unsigned INT1IE                 :1;
6798:                  unsigned INT2IE                 :1;
6799:                  unsigned                        :1;
6800:                  unsigned INT1IP                 :1;
6801:                  unsigned INT2IP                 :1;
6802:              };
6803:              struct {
6804:                  unsigned INT1F                  :1;
6805:                  unsigned INT2F                  :1;
6806:                  unsigned                        :1;
6807:                  unsigned INT1E                  :1;
6808:                  unsigned INT2E                  :1;
6809:                  unsigned                        :1;
6810:                  unsigned INT1P                  :1;
6811:                  unsigned INT2P                  :1;
6812:              };
6813:          } INTCON3bits_t;
6814:          extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;
6815:          // bitfield macros
6816:          #define _INTCON3_INT1IF_POSN                                0x0
6817:          #define _INTCON3_INT1IF_POSITION                            0x0
6818:          #define _INTCON3_INT1IF_SIZE                                0x1
6819:          #define _INTCON3_INT1IF_LENGTH                              0x1
6820:          #define _INTCON3_INT1IF_MASK                                0x1
6821:          #define _INTCON3_INT2IF_POSN                                0x1
6822:          #define _INTCON3_INT2IF_POSITION                            0x1
6823:          #define _INTCON3_INT2IF_SIZE                                0x1
6824:          #define _INTCON3_INT2IF_LENGTH                              0x1
6825:          #define _INTCON3_INT2IF_MASK                                0x2
6826:          #define _INTCON3_INT1IE_POSN                                0x3
6827:          #define _INTCON3_INT1IE_POSITION                            0x3
6828:          #define _INTCON3_INT1IE_SIZE                                0x1
6829:          #define _INTCON3_INT1IE_LENGTH                              0x1
6830:          #define _INTCON3_INT1IE_MASK                                0x8
6831:          #define _INTCON3_INT2IE_POSN                                0x4
6832:          #define _INTCON3_INT2IE_POSITION                            0x4
6833:          #define _INTCON3_INT2IE_SIZE                                0x1
6834:          #define _INTCON3_INT2IE_LENGTH                              0x1
6835:          #define _INTCON3_INT2IE_MASK                                0x10
6836:          #define _INTCON3_INT1IP_POSN                                0x6
6837:          #define _INTCON3_INT1IP_POSITION                            0x6
6838:          #define _INTCON3_INT1IP_SIZE                                0x1
6839:          #define _INTCON3_INT1IP_LENGTH                              0x1
6840:          #define _INTCON3_INT1IP_MASK                                0x40
6841:          #define _INTCON3_INT2IP_POSN                                0x7
6842:          #define _INTCON3_INT2IP_POSITION                            0x7
6843:          #define _INTCON3_INT2IP_SIZE                                0x1
6844:          #define _INTCON3_INT2IP_LENGTH                              0x1
6845:          #define _INTCON3_INT2IP_MASK                                0x80
6846:          #define _INTCON3_INT1F_POSN                                 0x0
6847:          #define _INTCON3_INT1F_POSITION                             0x0
6848:          #define _INTCON3_INT1F_SIZE                                 0x1
6849:          #define _INTCON3_INT1F_LENGTH                               0x1
6850:          #define _INTCON3_INT1F_MASK                                 0x1
6851:          #define _INTCON3_INT2F_POSN                                 0x1
6852:          #define _INTCON3_INT2F_POSITION                             0x1
6853:          #define _INTCON3_INT2F_SIZE                                 0x1
6854:          #define _INTCON3_INT2F_LENGTH                               0x1
6855:          #define _INTCON3_INT2F_MASK                                 0x2
6856:          #define _INTCON3_INT1E_POSN                                 0x3
6857:          #define _INTCON3_INT1E_POSITION                             0x3
6858:          #define _INTCON3_INT1E_SIZE                                 0x1
6859:          #define _INTCON3_INT1E_LENGTH                               0x1
6860:          #define _INTCON3_INT1E_MASK                                 0x8
6861:          #define _INTCON3_INT2E_POSN                                 0x4
6862:          #define _INTCON3_INT2E_POSITION                             0x4
6863:          #define _INTCON3_INT2E_SIZE                                 0x1
6864:          #define _INTCON3_INT2E_LENGTH                               0x1
6865:          #define _INTCON3_INT2E_MASK                                 0x10
6866:          #define _INTCON3_INT1P_POSN                                 0x6
6867:          #define _INTCON3_INT1P_POSITION                             0x6
6868:          #define _INTCON3_INT1P_SIZE                                 0x1
6869:          #define _INTCON3_INT1P_LENGTH                               0x1
6870:          #define _INTCON3_INT1P_MASK                                 0x40
6871:          #define _INTCON3_INT2P_POSN                                 0x7
6872:          #define _INTCON3_INT2P_POSITION                             0x7
6873:          #define _INTCON3_INT2P_SIZE                                 0x1
6874:          #define _INTCON3_INT2P_LENGTH                               0x1
6875:          #define _INTCON3_INT2P_MASK                                 0x80
6876:          
6877:          // Register: INTCON2
6878:          extern volatile unsigned char           INTCON2             @ 0xFF1;
6879:          #ifndef _LIB_BUILD
6880:          asm("INTCON2 equ 0FF1h");
6881:          #endif
6882:          // bitfield definitions
6883:          typedef union {
6884:              struct {
6885:                  unsigned                        :7;
6886:                  unsigned NOT_RBPU               :1;
6887:              };
6888:              struct {
6889:                  unsigned RBIP                   :1;
6890:                  unsigned                        :1;
6891:                  unsigned TMR0IP                 :1;
6892:                  unsigned                        :1;
6893:                  unsigned INTEDG2                :1;
6894:                  unsigned INTEDG1                :1;
6895:                  unsigned INTEDG0                :1;
6896:                  unsigned nRBPU                  :1;
6897:              };
6898:              struct {
6899:                  unsigned                        :7;
6900:                  unsigned RBPU                   :1;
6901:              };
6902:          } INTCON2bits_t;
6903:          extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;
6904:          // bitfield macros
6905:          #define _INTCON2_NOT_RBPU_POSN                              0x7
6906:          #define _INTCON2_NOT_RBPU_POSITION                          0x7
6907:          #define _INTCON2_NOT_RBPU_SIZE                              0x1
6908:          #define _INTCON2_NOT_RBPU_LENGTH                            0x1
6909:          #define _INTCON2_NOT_RBPU_MASK                              0x80
6910:          #define _INTCON2_RBIP_POSN                                  0x0
6911:          #define _INTCON2_RBIP_POSITION                              0x0
6912:          #define _INTCON2_RBIP_SIZE                                  0x1
6913:          #define _INTCON2_RBIP_LENGTH                                0x1
6914:          #define _INTCON2_RBIP_MASK                                  0x1
6915:          #define _INTCON2_TMR0IP_POSN                                0x2
6916:          #define _INTCON2_TMR0IP_POSITION                            0x2
6917:          #define _INTCON2_TMR0IP_SIZE                                0x1
6918:          #define _INTCON2_TMR0IP_LENGTH                              0x1
6919:          #define _INTCON2_TMR0IP_MASK                                0x4
6920:          #define _INTCON2_INTEDG2_POSN                               0x4
6921:          #define _INTCON2_INTEDG2_POSITION                           0x4
6922:          #define _INTCON2_INTEDG2_SIZE                               0x1
6923:          #define _INTCON2_INTEDG2_LENGTH                             0x1
6924:          #define _INTCON2_INTEDG2_MASK                               0x10
6925:          #define _INTCON2_INTEDG1_POSN                               0x5
6926:          #define _INTCON2_INTEDG1_POSITION                           0x5
6927:          #define _INTCON2_INTEDG1_SIZE                               0x1
6928:          #define _INTCON2_INTEDG1_LENGTH                             0x1
6929:          #define _INTCON2_INTEDG1_MASK                               0x20
6930:          #define _INTCON2_INTEDG0_POSN                               0x6
6931:          #define _INTCON2_INTEDG0_POSITION                           0x6
6932:          #define _INTCON2_INTEDG0_SIZE                               0x1
6933:          #define _INTCON2_INTEDG0_LENGTH                             0x1
6934:          #define _INTCON2_INTEDG0_MASK                               0x40
6935:          #define _INTCON2_nRBPU_POSN                                 0x7
6936:          #define _INTCON2_nRBPU_POSITION                             0x7
6937:          #define _INTCON2_nRBPU_SIZE                                 0x1
6938:          #define _INTCON2_nRBPU_LENGTH                               0x1
6939:          #define _INTCON2_nRBPU_MASK                                 0x80
6940:          #define _INTCON2_RBPU_POSN                                  0x7
6941:          #define _INTCON2_RBPU_POSITION                              0x7
6942:          #define _INTCON2_RBPU_SIZE                                  0x1
6943:          #define _INTCON2_RBPU_LENGTH                                0x1
6944:          #define _INTCON2_RBPU_MASK                                  0x80
6945:          
6946:          // Register: INTCON
6947:          extern volatile unsigned char           INTCON              @ 0xFF2;
6948:          #ifndef _LIB_BUILD
6949:          asm("INTCON equ 0FF2h");
6950:          #endif
6951:          // bitfield definitions
6952:          typedef union {
6953:              struct {
6954:                  unsigned RBIF                   :1;
6955:                  unsigned INT0IF                 :1;
6956:                  unsigned TMR0IF                 :1;
6957:                  unsigned RBIE                   :1;
6958:                  unsigned INT0IE                 :1;
6959:                  unsigned TMR0IE                 :1;
6960:                  unsigned PEIE_GIEL              :1;
6961:                  unsigned GIE_GIEH               :1;
6962:              };
6963:              struct {
6964:                  unsigned RBIF                   :1;
6965:                  unsigned INT0IF                 :1;
6966:                  unsigned TMR0IF                 :1;
6967:                  unsigned RBIE                   :1;
6968:                  unsigned INT0IE                 :1;
6969:                  unsigned TMR0IE                 :1;
6970:                  unsigned PEIE                   :1;
6971:                  unsigned GIE                    :1;
6972:              };
6973:              struct {
6974:                  unsigned RBIF                   :1;
6975:                  unsigned INT0IF                 :1;
6976:                  unsigned TMR0IF                 :1;
6977:                  unsigned RBIE                   :1;
6978:                  unsigned INT0IE                 :1;
6979:                  unsigned TMR0IE                 :1;
6980:                  unsigned GIEL                   :1;
6981:                  unsigned GIEH                   :1;
6982:              };
6983:              struct {
6984:                  unsigned                        :1;
6985:                  unsigned INT0F                  :1;
6986:                  unsigned T0IF                   :1;
6987:                  unsigned                        :1;
6988:                  unsigned INT0E                  :1;
6989:                  unsigned T0IE                   :1;
6990:                  unsigned PEIE                   :1;
6991:                  unsigned GIE                    :1;
6992:              };
6993:              struct {
6994:                  unsigned                        :6;
6995:                  unsigned GIEL                   :1;
6996:                  unsigned GIEH                   :1;
6997:              };
6998:          } INTCONbits_t;
6999:          extern volatile INTCONbits_t INTCONbits @ 0xFF2;
7000:          // bitfield macros
7001:          #define _INTCON_RBIF_POSN                                   0x0
7002:          #define _INTCON_RBIF_POSITION                               0x0
7003:          #define _INTCON_RBIF_SIZE                                   0x1
7004:          #define _INTCON_RBIF_LENGTH                                 0x1
7005:          #define _INTCON_RBIF_MASK                                   0x1
7006:          #define _INTCON_INT0IF_POSN                                 0x1
7007:          #define _INTCON_INT0IF_POSITION                             0x1
7008:          #define _INTCON_INT0IF_SIZE                                 0x1
7009:          #define _INTCON_INT0IF_LENGTH                               0x1
7010:          #define _INTCON_INT0IF_MASK                                 0x2
7011:          #define _INTCON_TMR0IF_POSN                                 0x2
7012:          #define _INTCON_TMR0IF_POSITION                             0x2
7013:          #define _INTCON_TMR0IF_SIZE                                 0x1
7014:          #define _INTCON_TMR0IF_LENGTH                               0x1
7015:          #define _INTCON_TMR0IF_MASK                                 0x4
7016:          #define _INTCON_RBIE_POSN                                   0x3
7017:          #define _INTCON_RBIE_POSITION                               0x3
7018:          #define _INTCON_RBIE_SIZE                                   0x1
7019:          #define _INTCON_RBIE_LENGTH                                 0x1
7020:          #define _INTCON_RBIE_MASK                                   0x8
7021:          #define _INTCON_INT0IE_POSN                                 0x4
7022:          #define _INTCON_INT0IE_POSITION                             0x4
7023:          #define _INTCON_INT0IE_SIZE                                 0x1
7024:          #define _INTCON_INT0IE_LENGTH                               0x1
7025:          #define _INTCON_INT0IE_MASK                                 0x10
7026:          #define _INTCON_TMR0IE_POSN                                 0x5
7027:          #define _INTCON_TMR0IE_POSITION                             0x5
7028:          #define _INTCON_TMR0IE_SIZE                                 0x1
7029:          #define _INTCON_TMR0IE_LENGTH                               0x1
7030:          #define _INTCON_TMR0IE_MASK                                 0x20
7031:          #define _INTCON_PEIE_GIEL_POSN                              0x6
7032:          #define _INTCON_PEIE_GIEL_POSITION                          0x6
7033:          #define _INTCON_PEIE_GIEL_SIZE                              0x1
7034:          #define _INTCON_PEIE_GIEL_LENGTH                            0x1
7035:          #define _INTCON_PEIE_GIEL_MASK                              0x40
7036:          #define _INTCON_GIE_GIEH_POSN                               0x7
7037:          #define _INTCON_GIE_GIEH_POSITION                           0x7
7038:          #define _INTCON_GIE_GIEH_SIZE                               0x1
7039:          #define _INTCON_GIE_GIEH_LENGTH                             0x1
7040:          #define _INTCON_GIE_GIEH_MASK                               0x80
7041:          #define _INTCON_PEIE_POSN                                   0x6
7042:          #define _INTCON_PEIE_POSITION                               0x6
7043:          #define _INTCON_PEIE_SIZE                                   0x1
7044:          #define _INTCON_PEIE_LENGTH                                 0x1
7045:          #define _INTCON_PEIE_MASK                                   0x40
7046:          #define _INTCON_GIE_POSN                                    0x7
7047:          #define _INTCON_GIE_POSITION                                0x7
7048:          #define _INTCON_GIE_SIZE                                    0x1
7049:          #define _INTCON_GIE_LENGTH                                  0x1
7050:          #define _INTCON_GIE_MASK                                    0x80
7051:          #define _INTCON_GIEL_POSN                                   0x6
7052:          #define _INTCON_GIEL_POSITION                               0x6
7053:          #define _INTCON_GIEL_SIZE                                   0x1
7054:          #define _INTCON_GIEL_LENGTH                                 0x1
7055:          #define _INTCON_GIEL_MASK                                   0x40
7056:          #define _INTCON_GIEH_POSN                                   0x7
7057:          #define _INTCON_GIEH_POSITION                               0x7
7058:          #define _INTCON_GIEH_SIZE                                   0x1
7059:          #define _INTCON_GIEH_LENGTH                                 0x1
7060:          #define _INTCON_GIEH_MASK                                   0x80
7061:          #define _INTCON_INT0F_POSN                                  0x1
7062:          #define _INTCON_INT0F_POSITION                              0x1
7063:          #define _INTCON_INT0F_SIZE                                  0x1
7064:          #define _INTCON_INT0F_LENGTH                                0x1
7065:          #define _INTCON_INT0F_MASK                                  0x2
7066:          #define _INTCON_T0IF_POSN                                   0x2
7067:          #define _INTCON_T0IF_POSITION                               0x2
7068:          #define _INTCON_T0IF_SIZE                                   0x1
7069:          #define _INTCON_T0IF_LENGTH                                 0x1
7070:          #define _INTCON_T0IF_MASK                                   0x4
7071:          #define _INTCON_INT0E_POSN                                  0x4
7072:          #define _INTCON_INT0E_POSITION                              0x4
7073:          #define _INTCON_INT0E_SIZE                                  0x1
7074:          #define _INTCON_INT0E_LENGTH                                0x1
7075:          #define _INTCON_INT0E_MASK                                  0x10
7076:          #define _INTCON_T0IE_POSN                                   0x5
7077:          #define _INTCON_T0IE_POSITION                               0x5
7078:          #define _INTCON_T0IE_SIZE                                   0x1
7079:          #define _INTCON_T0IE_LENGTH                                 0x1
7080:          #define _INTCON_T0IE_MASK                                   0x20
7081:          
7082:          // Register: PROD
7083:          extern volatile unsigned short          PROD                @ 0xFF3;
7084:          #ifndef _LIB_BUILD
7085:          asm("PROD equ 0FF3h");
7086:          #endif
7087:          
7088:          // Register: PRODL
7089:          extern volatile unsigned char           PRODL               @ 0xFF3;
7090:          #ifndef _LIB_BUILD
7091:          asm("PRODL equ 0FF3h");
7092:          #endif
7093:          
7094:          // Register: PRODH
7095:          extern volatile unsigned char           PRODH               @ 0xFF4;
7096:          #ifndef _LIB_BUILD
7097:          asm("PRODH equ 0FF4h");
7098:          #endif
7099:          
7100:          // Register: TABLAT
7101:          extern volatile unsigned char           TABLAT              @ 0xFF5;
7102:          #ifndef _LIB_BUILD
7103:          asm("TABLAT equ 0FF5h");
7104:          #endif
7105:          
7106:          // Register: TBLPTR
7107:          #ifndef __CCI__
7108:          extern volatile unsigned short long     TBLPTR              @ 0xFF6;
7109:          #endif
7110:          #ifndef _LIB_BUILD
7111:          asm("TBLPTR equ 0FF6h");
7112:          #endif
7113:          
7114:          // Register: TBLPTRL
7115:          extern volatile unsigned char           TBLPTRL             @ 0xFF6;
7116:          #ifndef _LIB_BUILD
7117:          asm("TBLPTRL equ 0FF6h");
7118:          #endif
7119:          
7120:          // Register: TBLPTRH
7121:          extern volatile unsigned char           TBLPTRH             @ 0xFF7;
7122:          #ifndef _LIB_BUILD
7123:          asm("TBLPTRH equ 0FF7h");
7124:          #endif
7125:          
7126:          // Register: TBLPTRU
7127:          extern volatile unsigned char           TBLPTRU             @ 0xFF8;
7128:          #ifndef _LIB_BUILD
7129:          asm("TBLPTRU equ 0FF8h");
7130:          #endif
7131:          
7132:          // Register: PCLAT
7133:          #ifndef __CCI__
7134:          extern volatile unsigned short long     PCLAT               @ 0xFF9;
7135:          #endif
7136:          #ifndef _LIB_BUILD
7137:          asm("PCLAT equ 0FF9h");
7138:          #endif
7139:          // aliases
7140:          #ifndef __CCI__
7141:          extern volatile unsigned short long     PC                  @ 0xFF9;
7142:          #endif
7143:          #ifndef _LIB_BUILD
7144:          asm("PC equ 0FF9h");
7145:          #endif
7146:          
7147:          // Register: PCL
7148:          extern volatile unsigned char           PCL                 @ 0xFF9;
7149:          #ifndef _LIB_BUILD
7150:          asm("PCL equ 0FF9h");
7151:          #endif
7152:          
7153:          // Register: PCLATH
7154:          extern volatile unsigned char           PCLATH              @ 0xFFA;
7155:          #ifndef _LIB_BUILD
7156:          asm("PCLATH equ 0FFAh");
7157:          #endif
7158:          
7159:          // Register: PCLATU
7160:          extern volatile unsigned char           PCLATU              @ 0xFFB;
7161:          #ifndef _LIB_BUILD
7162:          asm("PCLATU equ 0FFBh");
7163:          #endif
7164:          
7165:          // Register: STKPTR
7166:          extern volatile unsigned char           STKPTR              @ 0xFFC;
7167:          #ifndef _LIB_BUILD
7168:          asm("STKPTR equ 0FFCh");
7169:          #endif
7170:          // bitfield definitions
7171:          typedef union {
7172:              struct {
7173:                  unsigned STKPTR                 :5;
7174:                  unsigned                        :1;
7175:                  unsigned STKUNF                 :1;
7176:                  unsigned STKFUL                 :1;
7177:              };
7178:              struct {
7179:                  unsigned SP0                    :1;
7180:                  unsigned SP1                    :1;
7181:                  unsigned SP2                    :1;
7182:                  unsigned SP3                    :1;
7183:                  unsigned SP4                    :1;
7184:                  unsigned                        :2;
7185:                  unsigned STKOVF                 :1;
7186:              };
7187:          } STKPTRbits_t;
7188:          extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;
7189:          // bitfield macros
7190:          #define _STKPTR_STKPTR_POSN                                 0x0
7191:          #define _STKPTR_STKPTR_POSITION                             0x0
7192:          #define _STKPTR_STKPTR_SIZE                                 0x5
7193:          #define _STKPTR_STKPTR_LENGTH                               0x5
7194:          #define _STKPTR_STKPTR_MASK                                 0x1F
7195:          #define _STKPTR_STKUNF_POSN                                 0x6
7196:          #define _STKPTR_STKUNF_POSITION                             0x6
7197:          #define _STKPTR_STKUNF_SIZE                                 0x1
7198:          #define _STKPTR_STKUNF_LENGTH                               0x1
7199:          #define _STKPTR_STKUNF_MASK                                 0x40
7200:          #define _STKPTR_STKFUL_POSN                                 0x7
7201:          #define _STKPTR_STKFUL_POSITION                             0x7
7202:          #define _STKPTR_STKFUL_SIZE                                 0x1
7203:          #define _STKPTR_STKFUL_LENGTH                               0x1
7204:          #define _STKPTR_STKFUL_MASK                                 0x80
7205:          #define _STKPTR_SP0_POSN                                    0x0
7206:          #define _STKPTR_SP0_POSITION                                0x0
7207:          #define _STKPTR_SP0_SIZE                                    0x1
7208:          #define _STKPTR_SP0_LENGTH                                  0x1
7209:          #define _STKPTR_SP0_MASK                                    0x1
7210:          #define _STKPTR_SP1_POSN                                    0x1
7211:          #define _STKPTR_SP1_POSITION                                0x1
7212:          #define _STKPTR_SP1_SIZE                                    0x1
7213:          #define _STKPTR_SP1_LENGTH                                  0x1
7214:          #define _STKPTR_SP1_MASK                                    0x2
7215:          #define _STKPTR_SP2_POSN                                    0x2
7216:          #define _STKPTR_SP2_POSITION                                0x2
7217:          #define _STKPTR_SP2_SIZE                                    0x1
7218:          #define _STKPTR_SP2_LENGTH                                  0x1
7219:          #define _STKPTR_SP2_MASK                                    0x4
7220:          #define _STKPTR_SP3_POSN                                    0x3
7221:          #define _STKPTR_SP3_POSITION                                0x3
7222:          #define _STKPTR_SP3_SIZE                                    0x1
7223:          #define _STKPTR_SP3_LENGTH                                  0x1
7224:          #define _STKPTR_SP3_MASK                                    0x8
7225:          #define _STKPTR_SP4_POSN                                    0x4
7226:          #define _STKPTR_SP4_POSITION                                0x4
7227:          #define _STKPTR_SP4_SIZE                                    0x1
7228:          #define _STKPTR_SP4_LENGTH                                  0x1
7229:          #define _STKPTR_SP4_MASK                                    0x10
7230:          #define _STKPTR_STKOVF_POSN                                 0x7
7231:          #define _STKPTR_STKOVF_POSITION                             0x7
7232:          #define _STKPTR_STKOVF_SIZE                                 0x1
7233:          #define _STKPTR_STKOVF_LENGTH                               0x1
7234:          #define _STKPTR_STKOVF_MASK                                 0x80
7235:          
7236:          // Register: TOS
7237:          #ifndef __CCI__
7238:          extern volatile unsigned short long     TOS                 @ 0xFFD;
7239:          #endif
7240:          #ifndef _LIB_BUILD
7241:          asm("TOS equ 0FFDh");
7242:          #endif
7243:          
7244:          // Register: TOSL
7245:          extern volatile unsigned char           TOSL                @ 0xFFD;
7246:          #ifndef _LIB_BUILD
7247:          asm("TOSL equ 0FFDh");
7248:          #endif
7249:          
7250:          // Register: TOSH
7251:          extern volatile unsigned char           TOSH                @ 0xFFE;
7252:          #ifndef _LIB_BUILD
7253:          asm("TOSH equ 0FFEh");
7254:          #endif
7255:          
7256:          // Register: TOSU
7257:          extern volatile unsigned char           TOSU                @ 0xFFF;
7258:          #ifndef _LIB_BUILD
7259:          asm("TOSU equ 0FFFh");
7260:          #endif
7261:          
7262:          /*
7263:           * Bit Definitions
7264:           */
7265:          #define _DEPRECATED __attribute__((__deprecated__))
7266:          #ifndef BANKMASK
7267:          #define BANKMASK(addr) ((addr)&0FFh)
7268:          #endif
7269:          extern volatile __bit                   ABDEN               @ (((unsigned) &BAUDCON)*8) + 0;
7270:          #define                                 ABDEN_bit           BANKMASK(BAUDCON), 0
7271:          extern volatile __bit                   ABDOVF              @ (((unsigned) &BAUDCON)*8) + 7;
7272:          #define                                 ABDOVF_bit          BANKMASK(BAUDCON), 7
7273:          extern volatile __bit                   ACKDT               @ (((unsigned) &SSPCON2)*8) + 5;
7274:          #define                                 ACKDT_bit           BANKMASK(SSPCON2), 5
7275:          extern volatile __bit                   ACKEN               @ (((unsigned) &SSPCON2)*8) + 4;
7276:          #define                                 ACKEN_bit           BANKMASK(SSPCON2), 4
7277:          extern volatile __bit                   ACKSTAT             @ (((unsigned) &SSPCON2)*8) + 6;
7278:          #define                                 ACKSTAT_bit         BANKMASK(SSPCON2), 6
7279:          extern volatile __bit                   ACQT0               @ (((unsigned) &ADCON2)*8) + 3;
7280:          #define                                 ACQT0_bit           BANKMASK(ADCON2), 3
7281:          extern volatile __bit                   ACQT1               @ (((unsigned) &ADCON2)*8) + 4;
7282:          #define                                 ACQT1_bit           BANKMASK(ADCON2), 4
7283:          extern volatile __bit                   ACQT2               @ (((unsigned) &ADCON2)*8) + 5;
7284:          #define                                 ACQT2_bit           BANKMASK(ADCON2), 5
7285:          extern volatile __bit                   ADCS0               @ (((unsigned) &ADCON2)*8) + 0;
7286:          #define                                 ADCS0_bit           BANKMASK(ADCON2), 0
7287:          extern volatile __bit                   ADCS1               @ (((unsigned) &ADCON2)*8) + 1;
7288:          #define                                 ADCS1_bit           BANKMASK(ADCON2), 1
7289:          extern volatile __bit                   ADCS2               @ (((unsigned) &ADCON2)*8) + 2;
7290:          #define                                 ADCS2_bit           BANKMASK(ADCON2), 2
7291:          extern volatile __bit                   ADDEN               @ (((unsigned) &RCSTA)*8) + 3;
7292:          #define                                 ADDEN_bit           BANKMASK(RCSTA), 3
7293:          extern volatile __bit                   ADEN                @ (((unsigned) &RCSTA)*8) + 3;
7294:          #define                                 ADEN_bit            BANKMASK(RCSTA), 3
7295:          extern volatile __bit                   ADFM                @ (((unsigned) &ADCON2)*8) + 7;
7296:          #define                                 ADFM_bit            BANKMASK(ADCON2), 7
7297:          extern volatile __bit                   ADIE                @ (((unsigned) &PIE1)*8) + 6;
7298:          #define                                 ADIE_bit            BANKMASK(PIE1), 6
7299:          extern volatile __bit                   ADIF                @ (((unsigned) &PIR1)*8) + 6;
7300:          #define                                 ADIF_bit            BANKMASK(PIR1), 6
7301:          extern volatile __bit                   ADIP                @ (((unsigned) &IPR1)*8) + 6;
7302:          #define                                 ADIP_bit            BANKMASK(IPR1), 6
7303:          extern volatile __bit                   ADMSK1              @ (((unsigned) &SSPCON2)*8) + 1;
7304:          #define                                 ADMSK1_bit          BANKMASK(SSPCON2), 1
7305:          extern volatile __bit                   ADMSK2              @ (((unsigned) &SSPCON2)*8) + 2;
7306:          #define                                 ADMSK2_bit          BANKMASK(SSPCON2), 2
7307:          extern volatile __bit                   ADMSK3              @ (((unsigned) &SSPCON2)*8) + 3;
7308:          #define                                 ADMSK3_bit          BANKMASK(SSPCON2), 3
7309:          extern volatile __bit                   ADMSK4              @ (((unsigned) &SSPCON2)*8) + 4;
7310:          #define                                 ADMSK4_bit          BANKMASK(SSPCON2), 4
7311:          extern volatile __bit                   ADMSK5              @ (((unsigned) &SSPCON2)*8) + 5;
7312:          #define                                 ADMSK5_bit          BANKMASK(SSPCON2), 5
7313:          extern volatile __bit                   ADON                @ (((unsigned) &ADCON0)*8) + 0;
7314:          #define                                 ADON_bit            BANKMASK(ADCON0), 0
7315:          extern volatile __bit                   AN0                 @ (((unsigned) &PORTA)*8) + 0;
7316:          #define                                 AN0_bit             BANKMASK(PORTA), 0
7317:          extern volatile __bit                   AN1                 @ (((unsigned) &PORTA)*8) + 1;
7318:          #define                                 AN1_bit             BANKMASK(PORTA), 1
7319:          extern volatile __bit                   AN10                @ (((unsigned) &PORTB)*8) + 1;
7320:          #define                                 AN10_bit            BANKMASK(PORTB), 1
7321:          extern volatile __bit                   AN11                @ (((unsigned) &PORTB)*8) + 4;
7322:          #define                                 AN11_bit            BANKMASK(PORTB), 4
7323:          extern volatile __bit                   AN12                @ (((unsigned) &PORTB)*8) + 0;
7324:          #define                                 AN12_bit            BANKMASK(PORTB), 0
7325:          extern volatile __bit                   AN2                 @ (((unsigned) &PORTA)*8) + 2;
7326:          #define                                 AN2_bit             BANKMASK(PORTA), 2
7327:          extern volatile __bit                   AN3                 @ (((unsigned) &PORTA)*8) + 3;
7328:          #define                                 AN3_bit             BANKMASK(PORTA), 3
7329:          extern volatile __bit                   AN4                 @ (((unsigned) &PORTA)*8) + 5;
7330:          #define                                 AN4_bit             BANKMASK(PORTA), 5
7331:          extern volatile __bit                   AN5                 @ (((unsigned) &PORTE)*8) + 0;
7332:          #define                                 AN5_bit             BANKMASK(PORTE), 0
7333:          extern volatile __bit                   AN6                 @ (((unsigned) &PORTE)*8) + 1;
7334:          #define                                 AN6_bit             BANKMASK(PORTE), 1
7335:          extern volatile __bit                   AN7                 @ (((unsigned) &PORTE)*8) + 2;
7336:          #define                                 AN7_bit             BANKMASK(PORTE), 2
7337:          extern volatile __bit                   AN8                 @ (((unsigned) &PORTB)*8) + 2;
7338:          #define                                 AN8_bit             BANKMASK(PORTB), 2
7339:          extern volatile __bit                   AN9                 @ (((unsigned) &PORTB)*8) + 3;
7340:          #define                                 AN9_bit             BANKMASK(PORTB), 3
7341:          extern volatile __bit                   BCLIE               @ (((unsigned) &PIE2)*8) + 3;
7342:          #define                                 BCLIE_bit           BANKMASK(PIE2), 3
7343:          extern volatile __bit                   BCLIF               @ (((unsigned) &PIR2)*8) + 3;
7344:          #define                                 BCLIF_bit           BANKMASK(PIR2), 3
7345:          extern volatile __bit                   BCLIP               @ (((unsigned) &IPR2)*8) + 3;
7346:          #define                                 BCLIP_bit           BANKMASK(IPR2), 3
7347:          extern volatile __bit                   BF                  @ (((unsigned) &SSPSTAT)*8) + 0;
7348:          #define                                 BF_bit              BANKMASK(SSPSTAT), 0
7349:          extern volatile __bit                   BGST                @ (((unsigned) &HLVDCON)*8) + 5;
7350:          #define                                 BGST_bit            BANKMASK(HLVDCON), 5
7351:          extern volatile __bit                   BOR                 @ (((unsigned) &RCON)*8) + 0;
7352:          #define                                 BOR_bit             BANKMASK(RCON), 0
7353:          extern volatile __bit                   BRG16               @ (((unsigned) &BAUDCON)*8) + 3;
7354:          #define                                 BRG16_bit           BANKMASK(BAUDCON), 3
7355:          extern volatile __bit                   BRGH                @ (((unsigned) &TXSTA)*8) + 2;
7356:          #define                                 BRGH_bit            BANKMASK(TXSTA), 2
7357:          extern volatile __bit                   BRGH1               @ (((unsigned) &TXSTA)*8) + 2;
7358:          #define                                 BRGH1_bit           BANKMASK(TXSTA), 2
7359:          extern volatile __bit                   C1INV               @ (((unsigned) &CMCON)*8) + 4;
7360:          #define                                 C1INV_bit           BANKMASK(CMCON), 4
7361:          extern volatile __bit _DEPRECATED       C1OUT               @ (((unsigned) &CMCON)*8) + 6;
7362:          #define                                 C1OUT_bit           BANKMASK(CMCON), 6
7363:          extern volatile __bit                   C2INV               @ (((unsigned) &CMCON)*8) + 5;
7364:          #define                                 C2INV_bit           BANKMASK(CMCON), 5
7365:          extern volatile __bit _DEPRECATED       C2OUT               @ (((unsigned) &CMCON)*8) + 7;
7366:          #define                                 C2OUT_bit           BANKMASK(CMCON), 7
7367:          extern volatile __bit                   CARRY               @ (((unsigned) &STATUS)*8) + 0;
7368:          #define                                 CARRY_bit           BANKMASK(STATUS), 0
7369:          extern volatile __bit                   CCP1                @ (((unsigned) &PORTC)*8) + 2;
7370:          #define                                 CCP1_bit            BANKMASK(PORTC), 2
7371:          extern volatile __bit                   CCP10               @ (((unsigned) &PORTE)*8) + 2;
7372:          #define                                 CCP10_bit           BANKMASK(PORTE), 2
7373:          extern volatile __bit                   CCP1IE              @ (((unsigned) &PIE1)*8) + 2;
7374:          #define                                 CCP1IE_bit          BANKMASK(PIE1), 2
7375:          extern volatile __bit                   CCP1IF              @ (((unsigned) &PIR1)*8) + 2;
7376:          #define                                 CCP1IF_bit          BANKMASK(PIR1), 2
7377:          extern volatile __bit                   CCP1IP              @ (((unsigned) &IPR1)*8) + 2;
7378:          #define                                 CCP1IP_bit          BANKMASK(IPR1), 2
7379:          extern volatile __bit                   CCP1M0              @ (((unsigned) &CCP1CON)*8) + 0;
7380:          #define                                 CCP1M0_bit          BANKMASK(CCP1CON), 0
7381:          extern volatile __bit                   CCP1M1              @ (((unsigned) &CCP1CON)*8) + 1;
7382:          #define                                 CCP1M1_bit          BANKMASK(CCP1CON), 1
7383:          extern volatile __bit                   CCP1M2              @ (((unsigned) &CCP1CON)*8) + 2;
7384:          #define                                 CCP1M2_bit          BANKMASK(CCP1CON), 2
7385:          extern volatile __bit                   CCP1M3              @ (((unsigned) &CCP1CON)*8) + 3;
7386:          #define                                 CCP1M3_bit          BANKMASK(CCP1CON), 3
7387:          extern volatile __bit                   CCP1X               @ (((unsigned) &CCP1CON)*8) + 5;
7388:          #define                                 CCP1X_bit           BANKMASK(CCP1CON), 5
7389:          extern volatile __bit                   CCP1Y               @ (((unsigned) &CCP1CON)*8) + 4;
7390:          #define                                 CCP1Y_bit           BANKMASK(CCP1CON), 4
7391:          extern volatile __bit                   CCP2E               @ (((unsigned) &PORTE)*8) + 7;
7392:          #define                                 CCP2E_bit           BANKMASK(PORTE), 7
7393:          extern volatile __bit                   CCP2IE              @ (((unsigned) &PIE2)*8) + 0;
7394:          #define                                 CCP2IE_bit          BANKMASK(PIE2), 0
7395:          extern volatile __bit                   CCP2IF              @ (((unsigned) &PIR2)*8) + 0;
7396:          #define                                 CCP2IF_bit          BANKMASK(PIR2), 0
7397:          extern volatile __bit                   CCP2IP              @ (((unsigned) &IPR2)*8) + 0;
7398:          #define                                 CCP2IP_bit          BANKMASK(IPR2), 0
7399:          extern volatile __bit                   CCP2M0              @ (((unsigned) &CCP2CON)*8) + 0;
7400:          #define                                 CCP2M0_bit          BANKMASK(CCP2CON), 0
7401:          extern volatile __bit                   CCP2M1              @ (((unsigned) &CCP2CON)*8) + 1;
7402:          #define                                 CCP2M1_bit          BANKMASK(CCP2CON), 1
7403:          extern volatile __bit                   CCP2M2              @ (((unsigned) &CCP2CON)*8) + 2;
7404:          #define                                 CCP2M2_bit          BANKMASK(CCP2CON), 2
7405:          extern volatile __bit                   CCP2M3              @ (((unsigned) &CCP2CON)*8) + 3;
7406:          #define                                 CCP2M3_bit          BANKMASK(CCP2CON), 3
7407:          extern volatile __bit                   CCP2X               @ (((unsigned) &CCP2CON)*8) + 5;
7408:          #define                                 CCP2X_bit           BANKMASK(CCP2CON), 5
7409:          extern volatile __bit                   CCP2Y               @ (((unsigned) &CCP2CON)*8) + 4;
7410:          #define                                 CCP2Y_bit           BANKMASK(CCP2CON), 4
7411:          extern volatile __bit                   CCP2_PA2            @ (((unsigned) &PORTB)*8) + 3;
7412:          #define                                 CCP2_PA2_bit        BANKMASK(PORTB), 3
7413:          extern volatile __bit                   CCP6E               @ (((unsigned) &PORTE)*8) + 6;
7414:          #define                                 CCP6E_bit           BANKMASK(PORTE), 6
7415:          extern volatile __bit                   CCP7E               @ (((unsigned) &PORTE)*8) + 5;
7416:          #define                                 CCP7E_bit           BANKMASK(PORTE), 5
7417:          extern volatile __bit                   CCP8E               @ (((unsigned) &PORTE)*8) + 4;
7418:          #define                                 CCP8E_bit           BANKMASK(PORTE), 4
7419:          extern volatile __bit                   CCP9E               @ (((unsigned) &PORTE)*8) + 3;
7420:          #define                                 CCP9E_bit           BANKMASK(PORTE), 3
7421:          extern volatile __bit                   CFGS                @ (((unsigned) &EECON1)*8) + 6;
7422:          #define                                 CFGS_bit            BANKMASK(EECON1), 6
7423:          extern volatile __bit                   CHS0                @ (((unsigned) &ADCON0)*8) + 2;
7424:          #define                                 CHS0_bit            BANKMASK(ADCON0), 2
7425:          extern volatile __bit                   CHS1                @ (((unsigned) &ADCON0)*8) + 3;
7426:          #define                                 CHS1_bit            BANKMASK(ADCON0), 3
7427:          extern volatile __bit                   CHS2                @ (((unsigned) &ADCON0)*8) + 4;
7428:          #define                                 CHS2_bit            BANKMASK(ADCON0), 4
7429:          extern volatile __bit                   CHS3                @ (((unsigned) &ADCON0)*8) + 5;
7430:          #define                                 CHS3_bit            BANKMASK(ADCON0), 5
7431:          extern volatile __bit                   CHSN3               @ (((unsigned) &ADCON1)*8) + 3;
7432:          #define                                 CHSN3_bit           BANKMASK(ADCON1), 3
7433:          extern volatile __bit                   CIS                 @ (((unsigned) &CMCON)*8) + 3;
7434:          #define                                 CIS_bit             BANKMASK(CMCON), 3
7435:          extern volatile __bit                   CK                  @ (((unsigned) &PORTC)*8) + 6;
7436:          #define                                 CK_bit              BANKMASK(PORTC), 6
7437:          extern volatile __bit                   CKE                 @ (((unsigned) &SSPSTAT)*8) + 6;
7438:          #define                                 CKE_bit             BANKMASK(SSPSTAT), 6
7439:          extern volatile __bit                   CKP                 @ (((unsigned) &SSPCON1)*8) + 4;
7440:          #define                                 CKP_bit             BANKMASK(SSPCON1), 4
7441:          extern volatile __bit                   CLKI                @ (((unsigned) &PORTA)*8) + 7;
7442:          #define                                 CLKI_bit            BANKMASK(PORTA), 7
7443:          extern volatile __bit                   CLKO                @ (((unsigned) &PORTA)*8) + 6;
7444:          #define                                 CLKO_bit            BANKMASK(PORTA), 6
7445:          extern volatile __bit                   CM0                 @ (((unsigned) &CMCON)*8) + 0;
7446:          #define                                 CM0_bit             BANKMASK(CMCON), 0
7447:          extern volatile __bit                   CM1                 @ (((unsigned) &CMCON)*8) + 1;
7448:          #define                                 CM1_bit             BANKMASK(CMCON), 1
7449:          extern volatile __bit                   CM2                 @ (((unsigned) &CMCON)*8) + 2;
7450:          #define                                 CM2_bit             BANKMASK(CMCON), 2
7451:          extern volatile __bit                   CMEN0               @ (((unsigned) &CMCON)*8) + 0;
7452:          #define                                 CMEN0_bit           BANKMASK(CMCON), 0
7453:          extern volatile __bit                   CMEN1               @ (((unsigned) &CMCON)*8) + 1;
7454:          #define                                 CMEN1_bit           BANKMASK(CMCON), 1
7455:          extern volatile __bit                   CMEN2               @ (((unsigned) &CMCON)*8) + 2;
7456:          #define                                 CMEN2_bit           BANKMASK(CMCON), 2
7457:          extern volatile __bit                   CMIE                @ (((unsigned) &PIE2)*8) + 6;
7458:          #define                                 CMIE_bit            BANKMASK(PIE2), 6
7459:          extern volatile __bit                   CMIF                @ (((unsigned) &PIR2)*8) + 6;
7460:          #define                                 CMIF_bit            BANKMASK(PIR2), 6
7461:          extern volatile __bit                   CMIP                @ (((unsigned) &IPR2)*8) + 6;
7462:          #define                                 CMIP_bit            BANKMASK(IPR2), 6
7463:          extern volatile __bit                   CREN                @ (((unsigned) &RCSTA)*8) + 4;
7464:          #define                                 CREN_bit            BANKMASK(RCSTA), 4
7465:          extern volatile __bit                   CS                  @ (((unsigned) &PORTE)*8) + 2;
7466:          #define                                 CS_bit              BANKMASK(PORTE), 2
7467:          extern volatile __bit                   CSRC                @ (((unsigned) &TXSTA)*8) + 7;
7468:          #define                                 CSRC_bit            BANKMASK(TXSTA), 7
7469:          extern volatile __bit                   CSRC1               @ (((unsigned) &TXSTA)*8) + 7;
7470:          #define                                 CSRC1_bit           BANKMASK(TXSTA), 7
7471:          extern volatile __bit                   CVR0                @ (((unsigned) &CVRCON)*8) + 0;
7472:          #define                                 CVR0_bit            BANKMASK(CVRCON), 0
7473:          extern volatile __bit                   CVR1                @ (((unsigned) &CVRCON)*8) + 1;
7474:          #define                                 CVR1_bit            BANKMASK(CVRCON), 1
7475:          extern volatile __bit                   CVR2                @ (((unsigned) &CVRCON)*8) + 2;
7476:          #define                                 CVR2_bit            BANKMASK(CVRCON), 2
7477:          extern volatile __bit                   CVR3                @ (((unsigned) &CVRCON)*8) + 3;
7478:          #define                                 CVR3_bit            BANKMASK(CVRCON), 3
7479:          extern volatile __bit                   CVREF               @ (((unsigned) &PORTA)*8) + 2;
7480:          #define                                 CVREF_bit           BANKMASK(PORTA), 2
7481:          extern volatile __bit                   CVREN               @ (((unsigned) &CVRCON)*8) + 7;
7482:          #define                                 CVREN_bit           BANKMASK(CVRCON), 7
7483:          extern volatile __bit                   CVROE               @ (((unsigned) &CVRCON)*8) + 6;
7484:          #define                                 CVROE_bit           BANKMASK(CVRCON), 6
7485:          extern volatile __bit                   CVROEN              @ (((unsigned) &CVRCON)*8) + 6;
7486:          #define                                 CVROEN_bit          BANKMASK(CVRCON), 6
7487:          extern volatile __bit                   CVRR                @ (((unsigned) &CVRCON)*8) + 5;
7488:          #define                                 CVRR_bit            BANKMASK(CVRCON), 5
7489:          extern volatile __bit                   CVRSS               @ (((unsigned) &CVRCON)*8) + 4;
7490:          #define                                 CVRSS_bit           BANKMASK(CVRCON), 4
7491:          extern volatile __bit                   DA                  @ (((unsigned) &SSPSTAT)*8) + 5;
7492:          #define                                 DA_bit              BANKMASK(SSPSTAT), 5
7493:          extern volatile __bit                   DC                  @ (((unsigned) &STATUS)*8) + 1;
7494:          #define                                 DC_bit              BANKMASK(STATUS), 1
7495:          extern volatile __bit                   DC1B0               @ (((unsigned) &CCP1CON)*8) + 4;
7496:          #define                                 DC1B0_bit           BANKMASK(CCP1CON), 4
7497:          extern volatile __bit                   DC1B1               @ (((unsigned) &CCP1CON)*8) + 5;
7498:          #define                                 DC1B1_bit           BANKMASK(CCP1CON), 5
7499:          extern volatile __bit                   DC2B0               @ (((unsigned) &CCP2CON)*8) + 4;
7500:          #define                                 DC2B0_bit           BANKMASK(CCP2CON), 4
7501:          extern volatile __bit                   DC2B1               @ (((unsigned) &CCP2CON)*8) + 5;
7502:          #define                                 DC2B1_bit           BANKMASK(CCP2CON), 5
7503:          extern volatile __bit                   DONE                @ (((unsigned) &ADCON0)*8) + 1;
7504:          #define                                 DONE_bit            BANKMASK(ADCON0), 1
7505:          extern volatile __bit                   DT                  @ (((unsigned) &PORTC)*8) + 7;
7506:          #define                                 DT_bit              BANKMASK(PORTC), 7
7507:          extern volatile __bit                   D_A                 @ (((unsigned) &SSPSTAT)*8) + 5;
7508:          #define                                 D_A_bit             BANKMASK(SSPSTAT), 5
7509:          extern volatile __bit                   D_NOT_A             @ (((unsigned) &SSPSTAT)*8) + 5;
7510:          #define                                 D_NOT_A_bit         BANKMASK(SSPSTAT), 5
7511:          extern volatile __bit                   D_nA                @ (((unsigned) &SSPSTAT)*8) + 5;
7512:          #define                                 D_nA_bit            BANKMASK(SSPSTAT), 5
7513:          extern volatile __bit                   EBDIS               @ (((unsigned) &PR2)*8) + 7;
7514:          #define                                 EBDIS_bit           BANKMASK(PR2), 7
7515:          extern volatile __bit                   ECCPAS0             @ (((unsigned) &ECCP1AS)*8) + 4;
7516:          #define                                 ECCPAS0_bit         BANKMASK(ECCP1AS), 4
7517:          extern volatile __bit                   ECCPAS1             @ (((unsigned) &ECCP1AS)*8) + 5;
7518:          #define                                 ECCPAS1_bit         BANKMASK(ECCP1AS), 5
7519:          extern volatile __bit                   ECCPAS2             @ (((unsigned) &ECCP1AS)*8) + 6;
7520:          #define                                 ECCPAS2_bit         BANKMASK(ECCP1AS), 6
7521:          extern volatile __bit                   ECCPASE             @ (((unsigned) &ECCP1AS)*8) + 7;
7522:          #define                                 ECCPASE_bit         BANKMASK(ECCP1AS), 7
7523:          extern volatile __bit                   EEFS                @ (((unsigned) &EECON1)*8) + 6;
7524:          #define                                 EEFS_bit            BANKMASK(EECON1), 6
7525:          extern volatile __bit                   EEIE                @ (((unsigned) &PIE2)*8) + 4;
7526:          #define                                 EEIE_bit            BANKMASK(PIE2), 4
7527:          extern volatile __bit                   EEIF                @ (((unsigned) &PIR2)*8) + 4;
7528:          #define                                 EEIF_bit            BANKMASK(PIR2), 4
7529:          extern volatile __bit                   EEIP                @ (((unsigned) &IPR2)*8) + 4;
7530:          #define                                 EEIP_bit            BANKMASK(IPR2), 4
7531:          extern volatile __bit                   EEPGD               @ (((unsigned) &EECON1)*8) + 7;
7532:          #define                                 EEPGD_bit           BANKMASK(EECON1), 7
7533:          extern volatile __bit                   FERR                @ (((unsigned) &RCSTA)*8) + 2;
7534:          #define                                 FERR_bit            BANKMASK(RCSTA), 2
7535:          extern volatile __bit                   FLT0                @ (((unsigned) &PORTB)*8) + 0;
7536:          #define                                 FLT0_bit            BANKMASK(PORTB), 0
7537:          extern volatile __bit                   FLTS                @ (((unsigned) &OSCCON)*8) + 2;
7538:          #define                                 FLTS_bit            BANKMASK(OSCCON), 2
7539:          extern volatile __bit                   FREE                @ (((unsigned) &EECON1)*8) + 4;
7540:          #define                                 FREE_bit            BANKMASK(EECON1), 4
7541:          extern volatile __bit                   GCEN                @ (((unsigned) &SSPCON2)*8) + 7;
7542:          #define                                 GCEN_bit            BANKMASK(SSPCON2), 7
7543:          extern volatile __bit                   GIE                 @ (((unsigned) &INTCON)*8) + 7;
7544:          #define                                 GIE_bit             BANKMASK(INTCON), 7
7545:          extern volatile __bit                   GIEH                @ (((unsigned) &INTCON)*8) + 7;
7546:          #define                                 GIEH_bit            BANKMASK(INTCON), 7
7547:          extern volatile __bit                   GIEL                @ (((unsigned) &INTCON)*8) + 6;
7548:          #define                                 GIEL_bit            BANKMASK(INTCON), 6
7549:          extern volatile __bit                   GIE_GIEH            @ (((unsigned) &INTCON)*8) + 7;
7550:          #define                                 GIE_GIEH_bit        BANKMASK(INTCON), 7
7551:          extern volatile __bit                   GO                  @ (((unsigned) &ADCON0)*8) + 1;
7552:          #define                                 GO_bit              BANKMASK(ADCON0), 1
7553:          extern volatile __bit                   GODONE              @ (((unsigned) &ADCON0)*8) + 1;
7554:          #define                                 GODONE_bit          BANKMASK(ADCON0), 1
7555:          extern volatile __bit                   GO_DONE             @ (((unsigned) &ADCON0)*8) + 1;
7556:          #define                                 GO_DONE_bit         BANKMASK(ADCON0), 1
7557:          extern volatile __bit                   GO_NOT_DONE         @ (((unsigned) &ADCON0)*8) + 1;
7558:          #define                                 GO_NOT_DONE_bit     BANKMASK(ADCON0), 1
7559:          extern volatile __bit                   GO_nDONE            @ (((unsigned) &ADCON0)*8) + 1;
7560:          #define                                 GO_nDONE_bit        BANKMASK(ADCON0), 1
7561:          extern volatile __bit                   HLVDEN              @ (((unsigned) &HLVDCON)*8) + 4;
7562:          #define                                 HLVDEN_bit          BANKMASK(HLVDCON), 4
7563:          extern volatile __bit                   HLVDIE              @ (((unsigned) &PIE2)*8) + 2;
7564:          #define                                 HLVDIE_bit          BANKMASK(PIE2), 2
7565:          extern volatile __bit                   HLVDIF              @ (((unsigned) &PIR2)*8) + 2;
7566:          #define                                 HLVDIF_bit          BANKMASK(PIR2), 2
7567:          extern volatile __bit                   HLVDIN              @ (((unsigned) &PORTA)*8) + 5;
7568:          #define                                 HLVDIN_bit          BANKMASK(PORTA), 5
7569:          extern volatile __bit                   HLVDIP              @ (((unsigned) &IPR2)*8) + 2;
7570:          #define                                 HLVDIP_bit          BANKMASK(IPR2), 2
7571:          extern volatile __bit                   HLVDL0              @ (((unsigned) &HLVDCON)*8) + 0;
7572:          #define                                 HLVDL0_bit          BANKMASK(HLVDCON), 0
7573:          extern volatile __bit                   HLVDL1              @ (((unsigned) &HLVDCON)*8) + 1;
7574:          #define                                 HLVDL1_bit          BANKMASK(HLVDCON), 1
7575:          extern volatile __bit                   HLVDL2              @ (((unsigned) &HLVDCON)*8) + 2;
7576:          #define                                 HLVDL2_bit          BANKMASK(HLVDCON), 2
7577:          extern volatile __bit                   HLVDL3              @ (((unsigned) &HLVDCON)*8) + 3;
7578:          #define                                 HLVDL3_bit          BANKMASK(HLVDCON), 3
7579:          extern volatile __bit                   IBF                 @ (((unsigned) &TRISE)*8) + 7;
7580:          #define                                 IBF_bit             BANKMASK(TRISE), 7
7581:          extern volatile __bit                   IBOV                @ (((unsigned) &TRISE)*8) + 5;
7582:          #define                                 IBOV_bit            BANKMASK(TRISE), 5
7583:          extern volatile __bit                   IDLEN               @ (((unsigned) &OSCCON)*8) + 7;
7584:          #define                                 IDLEN_bit           BANKMASK(OSCCON), 7
7585:          extern volatile __bit                   INT0                @ (((unsigned) &PORTB)*8) + 0;
7586:          #define                                 INT0_bit            BANKMASK(PORTB), 0
7587:          extern volatile __bit                   INT0E               @ (((unsigned) &INTCON)*8) + 4;
7588:          #define                                 INT0E_bit           BANKMASK(INTCON), 4
7589:          extern volatile __bit                   INT0F               @ (((unsigned) &INTCON)*8) + 1;
7590:          #define                                 INT0F_bit           BANKMASK(INTCON), 1
7591:          extern volatile __bit                   INT0IE              @ (((unsigned) &INTCON)*8) + 4;
7592:          #define                                 INT0IE_bit          BANKMASK(INTCON), 4
7593:          extern volatile __bit                   INT0IF              @ (((unsigned) &INTCON)*8) + 1;
7594:          #define                                 INT0IF_bit          BANKMASK(INTCON), 1
7595:          extern volatile __bit                   INT1                @ (((unsigned) &PORTB)*8) + 1;
7596:          #define                                 INT1_bit            BANKMASK(PORTB), 1
7597:          extern volatile __bit                   INT1E               @ (((unsigned) &INTCON3)*8) + 3;
7598:          #define                                 INT1E_bit           BANKMASK(INTCON3), 3
7599:          extern volatile __bit                   INT1F               @ (((unsigned) &INTCON3)*8) + 0;
7600:          #define                                 INT1F_bit           BANKMASK(INTCON3), 0
7601:          extern volatile __bit                   INT1IE              @ (((unsigned) &INTCON3)*8) + 3;
7602:          #define                                 INT1IE_bit          BANKMASK(INTCON3), 3
7603:          extern volatile __bit                   INT1IF              @ (((unsigned) &INTCON3)*8) + 0;
7604:          #define                                 INT1IF_bit          BANKMASK(INTCON3), 0
7605:          extern volatile __bit                   INT1IP              @ (((unsigned) &INTCON3)*8) + 6;
7606:          #define                                 INT1IP_bit          BANKMASK(INTCON3), 6
7607:          extern volatile __bit                   INT1P               @ (((unsigned) &INTCON3)*8) + 6;
7608:          #define                                 INT1P_bit           BANKMASK(INTCON3), 6
7609:          extern volatile __bit                   INT2                @ (((unsigned) &PORTB)*8) + 2;
7610:          #define                                 INT2_bit            BANKMASK(PORTB), 2
7611:          extern volatile __bit                   INT2E               @ (((unsigned) &INTCON3)*8) + 4;
7612:          #define                                 INT2E_bit           BANKMASK(INTCON3), 4
7613:          extern volatile __bit                   INT2F               @ (((unsigned) &INTCON3)*8) + 1;
7614:          #define                                 INT2F_bit           BANKMASK(INTCON3), 1
7615:          extern volatile __bit                   INT2IE              @ (((unsigned) &INTCON3)*8) + 4;
7616:          #define                                 INT2IE_bit          BANKMASK(INTCON3), 4
7617:          extern volatile __bit                   INT2IF              @ (((unsigned) &INTCON3)*8) + 1;
7618:          #define                                 INT2IF_bit          BANKMASK(INTCON3), 1
7619:          extern volatile __bit                   INT2IP              @ (((unsigned) &INTCON3)*8) + 7;
7620:          #define                                 INT2IP_bit          BANKMASK(INTCON3), 7
7621:          extern volatile __bit                   INT2P               @ (((unsigned) &INTCON3)*8) + 7;
7622:          #define                                 INT2P_bit           BANKMASK(INTCON3), 7
7623:          extern volatile __bit                   INTEDG0             @ (((unsigned) &INTCON2)*8) + 6;
7624:          #define                                 INTEDG0_bit         BANKMASK(INTCON2), 6
7625:          extern volatile __bit                   INTEDG1             @ (((unsigned) &INTCON2)*8) + 5;
7626:          #define                                 INTEDG1_bit         BANKMASK(INTCON2), 5
7627:          extern volatile __bit                   INTEDG2             @ (((unsigned) &INTCON2)*8) + 4;
7628:          #define                                 INTEDG2_bit         BANKMASK(INTCON2), 4
7629:          extern volatile __bit                   INTSRC              @ (((unsigned) &OSCTUNE)*8) + 7;
7630:          #define                                 INTSRC_bit          BANKMASK(OSCTUNE), 7
7631:          extern volatile __bit                   IOFS                @ (((unsigned) &OSCCON)*8) + 2;
7632:          #define                                 IOFS_bit            BANKMASK(OSCCON), 2
7633:          extern volatile __bit                   IPEN                @ (((unsigned) &RCON)*8) + 7;
7634:          #define                                 IPEN_bit            BANKMASK(RCON), 7
7635:          extern volatile __bit                   IRCF0               @ (((unsigned) &OSCCON)*8) + 4;
7636:          #define                                 IRCF0_bit           BANKMASK(OSCCON), 4
7637:          extern volatile __bit                   IRCF1               @ (((unsigned) &OSCCON)*8) + 5;
7638:          #define                                 IRCF1_bit           BANKMASK(OSCCON), 5
7639:          extern volatile __bit                   IRCF2               @ (((unsigned) &OSCCON)*8) + 6;
7640:          #define                                 IRCF2_bit           BANKMASK(OSCCON), 6
7641:          extern volatile __bit                   IRVST               @ (((unsigned) &HLVDCON)*8) + 5;
7642:          #define                                 IRVST_bit           BANKMASK(HLVDCON), 5
7643:          extern volatile __bit                   IVRST               @ (((unsigned) &HLVDCON)*8) + 5;
7644:          #define                                 IVRST_bit           BANKMASK(HLVDCON), 5
7645:          extern volatile __bit                   KBI0                @ (((unsigned) &PORTB)*8) + 4;
7646:          #define                                 KBI0_bit            BANKMASK(PORTB), 4
7647:          extern volatile __bit                   KBI1                @ (((unsigned) &PORTB)*8) + 5;
7648:          #define                                 KBI1_bit            BANKMASK(PORTB), 5
7649:          extern volatile __bit                   KBI2                @ (((unsigned) &PORTB)*8) + 6;
7650:          #define                                 KBI2_bit            BANKMASK(PORTB), 6
7651:          extern volatile __bit                   KBI3                @ (((unsigned) &PORTB)*8) + 7;
7652:          #define                                 KBI3_bit            BANKMASK(PORTB), 7
7653:          extern volatile __bit                   LA0                 @ (((unsigned) &LATA)*8) + 0;
7654:          #define                                 LA0_bit             BANKMASK(LATA), 0
7655:          extern volatile __bit                   LA1                 @ (((unsigned) &LATA)*8) + 1;
7656:          #define                                 LA1_bit             BANKMASK(LATA), 1
7657:          extern volatile __bit                   LA2                 @ (((unsigned) &LATA)*8) + 2;
7658:          #define                                 LA2_bit             BANKMASK(LATA), 2
7659:          extern volatile __bit                   LA3                 @ (((unsigned) &LATA)*8) + 3;
7660:          #define                                 LA3_bit             BANKMASK(LATA), 3
7661:          extern volatile __bit                   LA4                 @ (((unsigned) &LATA)*8) + 4;
7662:          #define                                 LA4_bit             BANKMASK(LATA), 4
7663:          extern volatile __bit                   LA5                 @ (((unsigned) &LATA)*8) + 5;
7664:          #define                                 LA5_bit             BANKMASK(LATA), 5
7665:          extern volatile __bit                   LA6                 @ (((unsigned) &LATA)*8) + 6;
7666:          #define                                 LA6_bit             BANKMASK(LATA), 6
7667:          extern volatile __bit                   LA7                 @ (((unsigned) &LATA)*8) + 7;
7668:          #define                                 LA7_bit             BANKMASK(LATA), 7
7669:          extern volatile __bit                   LATA0               @ (((unsigned) &LATA)*8) + 0;
7670:          #define                                 LATA0_bit           BANKMASK(LATA), 0
7671:          extern volatile __bit                   LATA1               @ (((unsigned) &LATA)*8) + 1;
7672:          #define                                 LATA1_bit           BANKMASK(LATA), 1
7673:          extern volatile __bit                   LATA2               @ (((unsigned) &LATA)*8) + 2;
7674:          #define                                 LATA2_bit           BANKMASK(LATA), 2
7675:          extern volatile __bit                   LATA3               @ (((unsigned) &LATA)*8) + 3;
7676:          #define                                 LATA3_bit           BANKMASK(LATA), 3
7677:          extern volatile __bit                   LATA4               @ (((unsigned) &LATA)*8) + 4;
7678:          #define                                 LATA4_bit           BANKMASK(LATA), 4
7679:          extern volatile __bit                   LATA5               @ (((unsigned) &LATA)*8) + 5;
7680:          #define                                 LATA5_bit           BANKMASK(LATA), 5
7681:          extern volatile __bit                   LATA6               @ (((unsigned) &LATA)*8) + 6;
7682:          #define                                 LATA6_bit           BANKMASK(LATA), 6
7683:          extern volatile __bit                   LATA7               @ (((unsigned) &LATA)*8) + 7;
7684:          #define                                 LATA7_bit           BANKMASK(LATA), 7
7685:          extern volatile __bit                   LATB0               @ (((unsigned) &LATB)*8) + 0;
7686:          #define                                 LATB0_bit           BANKMASK(LATB), 0
7687:          extern volatile __bit                   LATB1               @ (((unsigned) &LATB)*8) + 1;
7688:          #define                                 LATB1_bit           BANKMASK(LATB), 1
7689:          extern volatile __bit                   LATB2               @ (((unsigned) &LATB)*8) + 2;
7690:          #define                                 LATB2_bit           BANKMASK(LATB), 2
7691:          extern volatile __bit                   LATB3               @ (((unsigned) &LATB)*8) + 3;
7692:          #define                                 LATB3_bit           BANKMASK(LATB), 3
7693:          extern volatile __bit                   LATB4               @ (((unsigned) &LATB)*8) + 4;
7694:          #define                                 LATB4_bit           BANKMASK(LATB), 4
7695:          extern volatile __bit                   LATB5               @ (((unsigned) &LATB)*8) + 5;
7696:          #define                                 LATB5_bit           BANKMASK(LATB), 5
7697:          extern volatile __bit                   LATB6               @ (((unsigned) &LATB)*8) + 6;
7698:          #define                                 LATB6_bit           BANKMASK(LATB), 6
7699:          extern volatile __bit                   LATB7               @ (((unsigned) &LATB)*8) + 7;
7700:          #define                                 LATB7_bit           BANKMASK(LATB), 7
7701:          extern volatile __bit                   LATC0               @ (((unsigned) &LATC)*8) + 0;
7702:          #define                                 LATC0_bit           BANKMASK(LATC), 0
7703:          extern volatile __bit                   LATC1               @ (((unsigned) &LATC)*8) + 1;
7704:          #define                                 LATC1_bit           BANKMASK(LATC), 1
7705:          extern volatile __bit                   LATC2               @ (((unsigned) &LATC)*8) + 2;
7706:          #define                                 LATC2_bit           BANKMASK(LATC), 2
7707:          extern volatile __bit                   LATC3               @ (((unsigned) &LATC)*8) + 3;
7708:          #define                                 LATC3_bit           BANKMASK(LATC), 3
7709:          extern volatile __bit                   LATC4               @ (((unsigned) &LATC)*8) + 4;
7710:          #define                                 LATC4_bit           BANKMASK(LATC), 4
7711:          extern volatile __bit                   LATC5               @ (((unsigned) &LATC)*8) + 5;
7712:          #define                                 LATC5_bit           BANKMASK(LATC), 5
7713:          extern volatile __bit                   LATC6               @ (((unsigned) &LATC)*8) + 6;
7714:          #define                                 LATC6_bit           BANKMASK(LATC), 6
7715:          extern volatile __bit                   LATC7               @ (((unsigned) &LATC)*8) + 7;
7716:          #define                                 LATC7_bit           BANKMASK(LATC), 7
7717:          extern volatile __bit                   LATD0               @ (((unsigned) &LATD)*8) + 0;
7718:          #define                                 LATD0_bit           BANKMASK(LATD), 0
7719:          extern volatile __bit                   LATD1               @ (((unsigned) &LATD)*8) + 1;
7720:          #define                                 LATD1_bit           BANKMASK(LATD), 1
7721:          extern volatile __bit                   LATD2               @ (((unsigned) &LATD)*8) + 2;
7722:          #define                                 LATD2_bit           BANKMASK(LATD), 2
7723:          extern volatile __bit                   LATD3               @ (((unsigned) &LATD)*8) + 3;
7724:          #define                                 LATD3_bit           BANKMASK(LATD), 3
7725:          extern volatile __bit                   LATD4               @ (((unsigned) &LATD)*8) + 4;
7726:          #define                                 LATD4_bit           BANKMASK(LATD), 4
7727:          extern volatile __bit                   LATD5               @ (((unsigned) &LATD)*8) + 5;
7728:          #define                                 LATD5_bit           BANKMASK(LATD), 5
7729:          extern volatile __bit                   LATD6               @ (((unsigned) &LATD)*8) + 6;
7730:          #define                                 LATD6_bit           BANKMASK(LATD), 6
7731:          extern volatile __bit                   LATD7               @ (((unsigned) &LATD)*8) + 7;
7732:          #define                                 LATD7_bit           BANKMASK(LATD), 7
7733:          extern volatile __bit                   LATE0               @ (((unsigned) &LATE)*8) + 0;
7734:          #define                                 LATE0_bit           BANKMASK(LATE), 0
7735:          extern volatile __bit                   LATE1               @ (((unsigned) &LATE)*8) + 1;
7736:          #define                                 LATE1_bit           BANKMASK(LATE), 1
7737:          extern volatile __bit                   LATE2               @ (((unsigned) &LATE)*8) + 2;
7738:          #define                                 LATE2_bit           BANKMASK(LATE), 2
7739:          extern volatile __bit                   LB0                 @ (((unsigned) &LATB)*8) + 0;
7740:          #define                                 LB0_bit             BANKMASK(LATB), 0
7741:          extern volatile __bit                   LB1                 @ (((unsigned) &LATB)*8) + 1;
7742:          #define                                 LB1_bit             BANKMASK(LATB), 1
7743:          extern volatile __bit                   LB2                 @ (((unsigned) &LATB)*8) + 2;
7744:          #define                                 LB2_bit             BANKMASK(LATB), 2
7745:          extern volatile __bit                   LB3                 @ (((unsigned) &LATB)*8) + 3;
7746:          #define                                 LB3_bit             BANKMASK(LATB), 3
7747:          extern volatile __bit                   LB4                 @ (((unsigned) &LATB)*8) + 4;
7748:          #define                                 LB4_bit             BANKMASK(LATB), 4
7749:          extern volatile __bit                   LB5                 @ (((unsigned) &LATB)*8) + 5;
7750:          #define                                 LB5_bit             BANKMASK(LATB), 5
7751:          extern volatile __bit                   LB6                 @ (((unsigned) &LATB)*8) + 6;
7752:          #define                                 LB6_bit             BANKMASK(LATB), 6
7753:          extern volatile __bit                   LB7                 @ (((unsigned) &LATB)*8) + 7;
7754:          #define                                 LB7_bit             BANKMASK(LATB), 7
7755:          extern volatile __bit                   LC0                 @ (((unsigned) &LATC)*8) + 0;
7756:          #define                                 LC0_bit             BANKMASK(LATC), 0
7757:          extern volatile __bit                   LC1                 @ (((unsigned) &LATC)*8) + 1;
7758:          #define                                 LC1_bit             BANKMASK(LATC), 1
7759:          extern volatile __bit                   LC2                 @ (((unsigned) &LATC)*8) + 2;
7760:          #define                                 LC2_bit             BANKMASK(LATC), 2
7761:          extern volatile __bit                   LC3                 @ (((unsigned) &LATC)*8) + 3;
7762:          #define                                 LC3_bit             BANKMASK(LATC), 3
7763:          extern volatile __bit                   LC4                 @ (((unsigned) &LATC)*8) + 4;
7764:          #define                                 LC4_bit             BANKMASK(LATC), 4
7765:          extern volatile __bit                   LC5                 @ (((unsigned) &LATC)*8) + 5;
7766:          #define                                 LC5_bit             BANKMASK(LATC), 5
7767:          extern volatile __bit                   LC6                 @ (((unsigned) &LATC)*8) + 6;
7768:          #define                                 LC6_bit             BANKMASK(LATC), 6
7769:          extern volatile __bit                   LC7                 @ (((unsigned) &LATC)*8) + 7;
7770:          #define                                 LC7_bit             BANKMASK(LATC), 7
7771:          extern volatile __bit                   LD0                 @ (((unsigned) &LATD)*8) + 0;
7772:          #define                                 LD0_bit             BANKMASK(LATD), 0
7773:          extern volatile __bit                   LD1                 @ (((unsigned) &LATD)*8) + 1;
7774:          #define                                 LD1_bit             BANKMASK(LATD), 1
7775:          extern volatile __bit                   LD2                 @ (((unsigned) &LATD)*8) + 2;
7776:          #define                                 LD2_bit             BANKMASK(LATD), 2
7777:          extern volatile __bit                   LD3                 @ (((unsigned) &LATD)*8) + 3;
7778:          #define                                 LD3_bit             BANKMASK(LATD), 3
7779:          extern volatile __bit                   LD4                 @ (((unsigned) &LATD)*8) + 4;
7780:          #define                                 LD4_bit             BANKMASK(LATD), 4
7781:          extern volatile __bit                   LD5                 @ (((unsigned) &LATD)*8) + 5;
7782:          #define                                 LD5_bit             BANKMASK(LATD), 5
7783:          extern volatile __bit                   LD6                 @ (((unsigned) &LATD)*8) + 6;
7784:          #define                                 LD6_bit             BANKMASK(LATD), 6
7785:          extern volatile __bit                   LD7                 @ (((unsigned) &LATD)*8) + 7;
7786:          #define                                 LD7_bit             BANKMASK(LATD), 7
7787:          extern volatile __bit                   LE0                 @ (((unsigned) &LATE)*8) + 0;
7788:          #define                                 LE0_bit             BANKMASK(LATE), 0
7789:          extern volatile __bit                   LE1                 @ (((unsigned) &LATE)*8) + 1;
7790:          #define                                 LE1_bit             BANKMASK(LATE), 1
7791:          extern volatile __bit                   LE2                 @ (((unsigned) &LATE)*8) + 2;
7792:          #define                                 LE2_bit             BANKMASK(LATE), 2
7793:          extern volatile __bit                   LE3                 @ (((unsigned) &LATE)*8) + 3;
7794:          #define                                 LE3_bit             BANKMASK(LATE), 3
7795:          extern volatile __bit                   LE4                 @ (((unsigned) &LATE)*8) + 4;
7796:          #define                                 LE4_bit             BANKMASK(LATE), 4
7797:          extern volatile __bit                   LE5                 @ (((unsigned) &LATE)*8) + 5;
7798:          #define                                 LE5_bit             BANKMASK(LATE), 5
7799:          extern volatile __bit                   LE6                 @ (((unsigned) &LATE)*8) + 6;
7800:          #define                                 LE6_bit             BANKMASK(LATE), 6
7801:          extern volatile __bit                   LE7                 @ (((unsigned) &LATE)*8) + 7;
7802:          #define                                 LE7_bit             BANKMASK(LATE), 7
7803:          extern volatile __bit                   LVDEN               @ (((unsigned) &HLVDCON)*8) + 4;
7804:          #define                                 LVDEN_bit           BANKMASK(HLVDCON), 4
7805:          extern volatile __bit                   LVDIE               @ (((unsigned) &PIE2)*8) + 2;
7806:          #define                                 LVDIE_bit           BANKMASK(PIE2), 2
7807:          extern volatile __bit                   LVDIF               @ (((unsigned) &PIR2)*8) + 2;
7808:          #define                                 LVDIF_bit           BANKMASK(PIR2), 2
7809:          extern volatile __bit                   LVDIN               @ (((unsigned) &PORTA)*8) + 5;
7810:          #define                                 LVDIN_bit           BANKMASK(PORTA), 5
7811:          extern volatile __bit                   LVDIP               @ (((unsigned) &IPR2)*8) + 2;
7812:          #define                                 LVDIP_bit           BANKMASK(IPR2), 2
7813:          extern volatile __bit                   LVDL0               @ (((unsigned) &HLVDCON)*8) + 0;
7814:          #define                                 LVDL0_bit           BANKMASK(HLVDCON), 0
7815:          extern volatile __bit                   LVDL1               @ (((unsigned) &HLVDCON)*8) + 1;
7816:          #define                                 LVDL1_bit           BANKMASK(HLVDCON), 1
7817:          extern volatile __bit                   LVDL2               @ (((unsigned) &HLVDCON)*8) + 2;
7818:          #define                                 LVDL2_bit           BANKMASK(HLVDCON), 2
7819:          extern volatile __bit                   LVDL3               @ (((unsigned) &HLVDCON)*8) + 3;
7820:          #define                                 LVDL3_bit           BANKMASK(HLVDCON), 3
7821:          extern volatile __bit                   LVV0                @ (((unsigned) &HLVDCON)*8) + 0;
7822:          #define                                 LVV0_bit            BANKMASK(HLVDCON), 0
7823:          extern volatile __bit                   LVV1                @ (((unsigned) &HLVDCON)*8) + 1;
7824:          #define                                 LVV1_bit            BANKMASK(HLVDCON), 1
7825:          extern volatile __bit                   LVV2                @ (((unsigned) &HLVDCON)*8) + 2;
7826:          #define                                 LVV2_bit            BANKMASK(HLVDCON), 2
7827:          extern volatile __bit                   LVV3                @ (((unsigned) &HLVDCON)*8) + 3;
7828:          #define                                 LVV3_bit            BANKMASK(HLVDCON), 3
7829:          extern volatile __bit                   MCLR                @ (((unsigned) &PORTE)*8) + 3;
7830:          #define                                 MCLR_bit            BANKMASK(PORTE), 3
7831:          extern volatile __bit                   NEGATIVE            @ (((unsigned) &STATUS)*8) + 4;
7832:          #define                                 NEGATIVE_bit        BANKMASK(STATUS), 4
7833:          extern volatile __bit                   NOT_A               @ (((unsigned) &SSPSTAT)*8) + 5;
7834:          #define                                 NOT_A_bit           BANKMASK(SSPSTAT), 5
7835:          extern volatile __bit                   NOT_ADDRESS         @ (((unsigned) &SSPSTAT)*8) + 5;
7836:          #define                                 NOT_ADDRESS_bit     BANKMASK(SSPSTAT), 5
7837:          extern volatile __bit                   NOT_BOR             @ (((unsigned) &RCON)*8) + 0;
7838:          #define                                 NOT_BOR_bit         BANKMASK(RCON), 0
7839:          extern volatile __bit                   NOT_CS              @ (((unsigned) &PORTE)*8) + 2;
7840:          #define                                 NOT_CS_bit          BANKMASK(PORTE), 2
7841:          extern volatile __bit                   NOT_DONE            @ (((unsigned) &ADCON0)*8) + 1;
7842:          #define                                 NOT_DONE_bit        BANKMASK(ADCON0), 1
7843:          extern volatile __bit                   NOT_MCLR            @ (((unsigned) &PORTE)*8) + 3;
7844:          #define                                 NOT_MCLR_bit        BANKMASK(PORTE), 3
7845:          extern volatile __bit                   NOT_PD              @ (((unsigned) &RCON)*8) + 2;
7846:          #define                                 NOT_PD_bit          BANKMASK(RCON), 2
7847:          extern volatile __bit                   NOT_POR             @ (((unsigned) &RCON)*8) + 1;
7848:          #define                                 NOT_POR_bit         BANKMASK(RCON), 1
7849:          extern volatile __bit                   NOT_RBPU            @ (((unsigned) &INTCON2)*8) + 7;
7850:          #define                                 NOT_RBPU_bit        BANKMASK(INTCON2), 7
7851:          extern volatile __bit                   NOT_RD              @ (((unsigned) &PORTE)*8) + 0;
7852:          #define                                 NOT_RD_bit          BANKMASK(PORTE), 0
7853:          extern volatile __bit                   NOT_RI              @ (((unsigned) &RCON)*8) + 4;
7854:          #define                                 NOT_RI_bit          BANKMASK(RCON), 4
7855:          extern volatile __bit                   NOT_SS              @ (((unsigned) &PORTA)*8) + 5;
7856:          #define                                 NOT_SS_bit          BANKMASK(PORTA), 5
7857:          extern volatile __bit                   NOT_T1SYNC          @ (((unsigned) &T1CON)*8) + 2;
7858:          #define                                 NOT_T1SYNC_bit      BANKMASK(T1CON), 2
7859:          extern volatile __bit                   NOT_T3SYNC          @ (((unsigned) &T3CON)*8) + 2;
7860:          #define                                 NOT_T3SYNC_bit      BANKMASK(T3CON), 2
7861:          extern volatile __bit                   NOT_TO              @ (((unsigned) &RCON)*8) + 3;
7862:          #define                                 NOT_TO_bit          BANKMASK(RCON), 3
7863:          extern volatile __bit                   NOT_W               @ (((unsigned) &SSPSTAT)*8) + 2;
7864:          #define                                 NOT_W_bit           BANKMASK(SSPSTAT), 2
7865:          extern volatile __bit                   NOT_WR              @ (((unsigned) &PORTE)*8) + 1;
7866:          #define                                 NOT_WR_bit          BANKMASK(PORTE), 1
7867:          extern volatile __bit                   NOT_WRITE           @ (((unsigned) &SSPSTAT)*8) + 2;
7868:          #define                                 NOT_WRITE_bit       BANKMASK(SSPSTAT), 2
7869:          extern volatile __bit                   OBF                 @ (((unsigned) &TRISE)*8) + 6;
7870:          #define                                 OBF_bit             BANKMASK(TRISE), 6
7871:          extern volatile __bit                   OERR                @ (((unsigned) &RCSTA)*8) + 1;
7872:          #define                                 OERR_bit            BANKMASK(RCSTA), 1
7873:          extern volatile __bit                   OSC1                @ (((unsigned) &PORTA)*8) + 7;
7874:          #define                                 OSC1_bit            BANKMASK(PORTA), 7
7875:          extern volatile __bit                   OSC2                @ (((unsigned) &PORTA)*8) + 6;
7876:          #define                                 OSC2_bit            BANKMASK(PORTA), 6
7877:          extern volatile __bit                   OSCFIE              @ (((unsigned) &PIE2)*8) + 7;
7878:          #define                                 OSCFIE_bit          BANKMASK(PIE2), 7
7879:          extern volatile __bit                   OSCFIF              @ (((unsigned) &PIR2)*8) + 7;
7880:          #define                                 OSCFIF_bit          BANKMASK(PIR2), 7
7881:          extern volatile __bit                   OSCFIP              @ (((unsigned) &IPR2)*8) + 7;
7882:          #define                                 OSCFIP_bit          BANKMASK(IPR2), 7
7883:          extern volatile __bit                   OSTS                @ (((unsigned) &OSCCON)*8) + 3;
7884:          #define                                 OSTS_bit            BANKMASK(OSCCON), 3
7885:          extern volatile __bit                   OV                  @ (((unsigned) &STATUS)*8) + 3;
7886:          #define                                 OV_bit              BANKMASK(STATUS), 3
7887:          extern volatile __bit                   OVERFLOW            @ (((unsigned) &STATUS)*8) + 3;
7888:          #define                                 OVERFLOW_bit        BANKMASK(STATUS), 3
7889:          extern volatile __bit                   P1A                 @ (((unsigned) &PORTC)*8) + 2;
7890:          #define                                 P1A_bit             BANKMASK(PORTC), 2
7891:          extern volatile __bit                   P1B                 @ (((unsigned) &PORTD)*8) + 5;
7892:          #define                                 P1B_bit             BANKMASK(PORTD), 5
7893:          extern volatile __bit                   P1C                 @ (((unsigned) &PORTD)*8) + 6;
7894:          #define                                 P1C_bit             BANKMASK(PORTD), 6
7895:          extern volatile __bit                   P1D                 @ (((unsigned) &PORTD)*8) + 7;
7896:          #define                                 P1D_bit             BANKMASK(PORTD), 7
7897:          extern volatile __bit                   P1M0                @ (((unsigned) &CCP1CON)*8) + 6;
7898:          #define                                 P1M0_bit            BANKMASK(CCP1CON), 6
7899:          extern volatile __bit                   P1M1                @ (((unsigned) &CCP1CON)*8) + 7;
7900:          #define                                 P1M1_bit            BANKMASK(CCP1CON), 7
7901:          extern volatile __bit                   PA1                 @ (((unsigned) &PORTC)*8) + 2;
7902:          #define                                 PA1_bit             BANKMASK(PORTC), 2
7903:          extern volatile __bit                   PA2                 @ (((unsigned) &PORTC)*8) + 1;
7904:          #define                                 PA2_bit             BANKMASK(PORTC), 1
7905:          extern volatile __bit                   PA2E                @ (((unsigned) &PORTE)*8) + 7;
7906:          #define                                 PA2E_bit            BANKMASK(PORTE), 7
7907:          extern volatile __bit                   PB1E                @ (((unsigned) &PORTE)*8) + 6;
7908:          #define                                 PB1E_bit            BANKMASK(PORTE), 6
7909:          extern volatile __bit                   PB2                 @ (((unsigned) &PORTE)*8) + 2;
7910:          #define                                 PB2_bit             BANKMASK(PORTE), 2
7911:          extern volatile __bit                   PB3E                @ (((unsigned) &PORTE)*8) + 4;
7912:          #define                                 PB3E_bit            BANKMASK(PORTE), 4
7913:          extern volatile __bit                   PC1E                @ (((unsigned) &PORTE)*8) + 5;
7914:          #define                                 PC1E_bit            BANKMASK(PORTE), 5
7915:          extern volatile __bit                   PC2                 @ (((unsigned) &PORTE)*8) + 1;
7916:          #define                                 PC2_bit             BANKMASK(PORTE), 1
7917:          extern volatile __bit                   PC3E                @ (((unsigned) &PORTE)*8) + 3;
7918:          #define                                 PC3E_bit            BANKMASK(PORTE), 3
7919:          extern volatile __bit                   PCFG0               @ (((unsigned) &ADCON1)*8) + 0;
7920:          #define                                 PCFG0_bit           BANKMASK(ADCON1), 0
7921:          extern volatile __bit                   PCFG1               @ (((unsigned) &ADCON1)*8) + 1;
7922:          #define                                 PCFG1_bit           BANKMASK(ADCON1), 1
7923:          extern volatile __bit                   PCFG2               @ (((unsigned) &ADCON1)*8) + 2;
7924:          #define                                 PCFG2_bit           BANKMASK(ADCON1), 2
7925:          extern volatile __bit                   PCFG3               @ (((unsigned) &ADCON1)*8) + 3;
7926:          #define                                 PCFG3_bit           BANKMASK(ADCON1), 3
7927:          extern volatile __bit                   PD                  @ (((unsigned) &RCON)*8) + 2;
7928:          #define                                 PD_bit              BANKMASK(RCON), 2
7929:          extern volatile __bit                   PD2                 @ (((unsigned) &PORTE)*8) + 0;
7930:          #define                                 PD2_bit             BANKMASK(PORTE), 0
7931:          extern volatile __bit                   PDC0                @ (((unsigned) &PWM1CON)*8) + 0;
7932:          #define                                 PDC0_bit            BANKMASK(PWM1CON), 0
7933:          extern volatile __bit                   PDC1                @ (((unsigned) &PWM1CON)*8) + 1;
7934:          #define                                 PDC1_bit            BANKMASK(PWM1CON), 1
7935:          extern volatile __bit                   PDC2                @ (((unsigned) &PWM1CON)*8) + 2;
7936:          #define                                 PDC2_bit            BANKMASK(PWM1CON), 2
7937:          extern volatile __bit                   PDC3                @ (((unsigned) &PWM1CON)*8) + 3;
7938:          #define                                 PDC3_bit            BANKMASK(PWM1CON), 3
7939:          extern volatile __bit                   PDC4                @ (((unsigned) &PWM1CON)*8) + 4;
7940:          #define                                 PDC4_bit            BANKMASK(PWM1CON), 4
7941:          extern volatile __bit                   PDC5                @ (((unsigned) &PWM1CON)*8) + 5;
7942:          #define                                 PDC5_bit            BANKMASK(PWM1CON), 5
7943:          extern volatile __bit                   PDC6                @ (((unsigned) &PWM1CON)*8) + 6;
7944:          #define                                 PDC6_bit            BANKMASK(PWM1CON), 6
7945:          extern volatile __bit                   PEIE                @ (((unsigned) &INTCON)*8) + 6;
7946:          #define                                 PEIE_bit            BANKMASK(INTCON), 6
7947:          extern volatile __bit                   PEIE_GIEL           @ (((unsigned) &INTCON)*8) + 6;
7948:          #define                                 PEIE_GIEL_bit       BANKMASK(INTCON), 6
7949:          extern volatile __bit                   PEN                 @ (((unsigned) &SSPCON2)*8) + 2;
7950:          #define                                 PEN_bit             BANKMASK(SSPCON2), 2
7951:          extern volatile __bit                   PGC                 @ (((unsigned) &PORTB)*8) + 6;
7952:          #define                                 PGC_bit             BANKMASK(PORTB), 6
7953:          extern volatile __bit                   PGD                 @ (((unsigned) &PORTB)*8) + 7;
7954:          #define                                 PGD_bit             BANKMASK(PORTB), 7
7955:          extern volatile __bit                   PGM                 @ (((unsigned) &PORTB)*8) + 5;
7956:          #define                                 PGM_bit             BANKMASK(PORTB), 5
7957:          extern volatile __bit                   PLLEN               @ (((unsigned) &OSCTUNE)*8) + 6;
7958:          #define                                 PLLEN_bit           BANKMASK(OSCTUNE), 6
7959:          extern volatile __bit                   POR                 @ (((unsigned) &RCON)*8) + 1;
7960:          #define                                 POR_bit             BANKMASK(RCON), 1
7961:          extern volatile __bit                   PRSEN               @ (((unsigned) &PWM1CON)*8) + 7;
7962:          #define                                 PRSEN_bit           BANKMASK(PWM1CON), 7
7963:          extern volatile __bit                   PSA                 @ (((unsigned) &T0CON)*8) + 3;
7964:          #define                                 PSA_bit             BANKMASK(T0CON), 3
7965:          extern volatile __bit                   PSP0                @ (((unsigned) &PORTD)*8) + 0;
7966:          #define                                 PSP0_bit            BANKMASK(PORTD), 0
7967:          extern volatile __bit                   PSP1                @ (((unsigned) &PORTD)*8) + 1;
7968:          #define                                 PSP1_bit            BANKMASK(PORTD), 1
7969:          extern volatile __bit                   PSP2                @ (((unsigned) &PORTD)*8) + 2;
7970:          #define                                 PSP2_bit            BANKMASK(PORTD), 2
7971:          extern volatile __bit                   PSP3                @ (((unsigned) &PORTD)*8) + 3;
7972:          #define                                 PSP3_bit            BANKMASK(PORTD), 3
7973:          extern volatile __bit                   PSP4                @ (((unsigned) &PORTD)*8) + 4;
7974:          #define                                 PSP4_bit            BANKMASK(PORTD), 4
7975:          extern volatile __bit                   PSP5                @ (((unsigned) &PORTD)*8) + 5;
7976:          #define                                 PSP5_bit            BANKMASK(PORTD), 5
7977:          extern volatile __bit                   PSP6                @ (((unsigned) &PORTD)*8) + 6;
7978:          #define                                 PSP6_bit            BANKMASK(PORTD), 6
7979:          extern volatile __bit                   PSP7                @ (((unsigned) &PORTD)*8) + 7;
7980:          #define                                 PSP7_bit            BANKMASK(PORTD), 7
7981:          extern volatile __bit                   PSPIE               @ (((unsigned) &PIE1)*8) + 7;
7982:          #define                                 PSPIE_bit           BANKMASK(PIE1), 7
7983:          extern volatile __bit                   PSPIF               @ (((unsigned) &PIR1)*8) + 7;
7984:          #define                                 PSPIF_bit           BANKMASK(PIR1), 7
7985:          extern volatile __bit                   PSPIP               @ (((unsigned) &IPR1)*8) + 7;
7986:          #define                                 PSPIP_bit           BANKMASK(IPR1), 7
7987:          extern volatile __bit                   PSPMODE             @ (((unsigned) &TRISE)*8) + 4;
7988:          #define                                 PSPMODE_bit         BANKMASK(TRISE), 4
7989:          extern volatile __bit                   PSSAC0              @ (((unsigned) &ECCP1AS)*8) + 2;
7990:          #define                                 PSSAC0_bit          BANKMASK(ECCP1AS), 2
7991:          extern volatile __bit                   PSSAC1              @ (((unsigned) &ECCP1AS)*8) + 3;
7992:          #define                                 PSSAC1_bit          BANKMASK(ECCP1AS), 3
7993:          extern volatile __bit                   PSSBD0              @ (((unsigned) &ECCP1AS)*8) + 0;
7994:          #define                                 PSSBD0_bit          BANKMASK(ECCP1AS), 0
7995:          extern volatile __bit                   PSSBD1              @ (((unsigned) &ECCP1AS)*8) + 1;
7996:          #define                                 PSSBD1_bit          BANKMASK(ECCP1AS), 1
7997:          extern volatile __bit _DEPRECATED       RA0                 @ (((unsigned) &PORTA)*8) + 0;
7998:          #define                                 RA0_bit             BANKMASK(PORTA), 0
7999:          extern volatile __bit _DEPRECATED       RA1                 @ (((unsigned) &PORTA)*8) + 1;
8000:          #define                                 RA1_bit             BANKMASK(PORTA), 1
8001:          extern volatile __bit _DEPRECATED       RA2                 @ (((unsigned) &PORTA)*8) + 2;
8002:          #define                                 RA2_bit             BANKMASK(PORTA), 2
8003:          extern volatile __bit _DEPRECATED       RA3                 @ (((unsigned) &PORTA)*8) + 3;
8004:          #define                                 RA3_bit             BANKMASK(PORTA), 3
8005:          extern volatile __bit _DEPRECATED       RA4                 @ (((unsigned) &PORTA)*8) + 4;
8006:          #define                                 RA4_bit             BANKMASK(PORTA), 4
8007:          extern volatile __bit _DEPRECATED       RA5                 @ (((unsigned) &PORTA)*8) + 5;
8008:          #define                                 RA5_bit             BANKMASK(PORTA), 5
8009:          extern volatile __bit _DEPRECATED       RA6                 @ (((unsigned) &PORTA)*8) + 6;
8010:          #define                                 RA6_bit             BANKMASK(PORTA), 6
8011:          extern volatile __bit _DEPRECATED       RA7                 @ (((unsigned) &PORTA)*8) + 7;
8012:          #define                                 RA7_bit             BANKMASK(PORTA), 7
8013:          extern volatile __bit _DEPRECATED       RB0                 @ (((unsigned) &PORTB)*8) + 0;
8014:          #define                                 RB0_bit             BANKMASK(PORTB), 0
8015:          extern volatile __bit _DEPRECATED       RB1                 @ (((unsigned) &PORTB)*8) + 1;
8016:          #define                                 RB1_bit             BANKMASK(PORTB), 1
8017:          extern volatile __bit _DEPRECATED       RB2                 @ (((unsigned) &PORTB)*8) + 2;
8018:          #define                                 RB2_bit             BANKMASK(PORTB), 2
8019:          extern volatile __bit _DEPRECATED       RB3                 @ (((unsigned) &PORTB)*8) + 3;
8020:          #define                                 RB3_bit             BANKMASK(PORTB), 3
8021:          extern volatile __bit _DEPRECATED       RB4                 @ (((unsigned) &PORTB)*8) + 4;
8022:          #define                                 RB4_bit             BANKMASK(PORTB), 4
8023:          extern volatile __bit _DEPRECATED       RB5                 @ (((unsigned) &PORTB)*8) + 5;
8024:          #define                                 RB5_bit             BANKMASK(PORTB), 5
8025:          extern volatile __bit _DEPRECATED       RB6                 @ (((unsigned) &PORTB)*8) + 6;
8026:          #define                                 RB6_bit             BANKMASK(PORTB), 6
8027:          extern volatile __bit _DEPRECATED       RB7                 @ (((unsigned) &PORTB)*8) + 7;
8028:          #define                                 RB7_bit             BANKMASK(PORTB), 7
8029:          extern volatile __bit                   RBIE                @ (((unsigned) &INTCON)*8) + 3;
8030:          #define                                 RBIE_bit            BANKMASK(INTCON), 3
8031:          extern volatile __bit                   RBIF                @ (((unsigned) &INTCON)*8) + 0;
8032:          #define                                 RBIF_bit            BANKMASK(INTCON), 0
8033:          extern volatile __bit                   RBIP                @ (((unsigned) &INTCON2)*8) + 0;
8034:          #define                                 RBIP_bit            BANKMASK(INTCON2), 0
8035:          extern volatile __bit                   RBPU                @ (((unsigned) &INTCON2)*8) + 7;
8036:          #define                                 RBPU_bit            BANKMASK(INTCON2), 7
8037:          extern volatile __bit _DEPRECATED       RC0                 @ (((unsigned) &PORTC)*8) + 0;
8038:          #define                                 RC0_bit             BANKMASK(PORTC), 0
8039:          extern volatile __bit _DEPRECATED       RC1                 @ (((unsigned) &PORTC)*8) + 1;
8040:          #define                                 RC1_bit             BANKMASK(PORTC), 1
8041:          extern volatile __bit                   RC1IE               @ (((unsigned) &PIE1)*8) + 5;
8042:          #define                                 RC1IE_bit           BANKMASK(PIE1), 5
8043:          extern volatile __bit                   RC1IF               @ (((unsigned) &PIR1)*8) + 5;
8044:          #define                                 RC1IF_bit           BANKMASK(PIR1), 5
8045:          extern volatile __bit                   RC1IP               @ (((unsigned) &IPR1)*8) + 5;
8046:          #define                                 RC1IP_bit           BANKMASK(IPR1), 5
8047:          extern volatile __bit _DEPRECATED       RC2                 @ (((unsigned) &PORTC)*8) + 2;
8048:          #define                                 RC2_bit             BANKMASK(PORTC), 2
8049:          extern volatile __bit _DEPRECATED       RC3                 @ (((unsigned) &PORTC)*8) + 3;
8050:          #define                                 RC3_bit             BANKMASK(PORTC), 3
8051:          extern volatile __bit _DEPRECATED       RC4                 @ (((unsigned) &PORTC)*8) + 4;
8052:          #define                                 RC4_bit             BANKMASK(PORTC), 4
8053:          extern volatile __bit _DEPRECATED       RC5                 @ (((unsigned) &PORTC)*8) + 5;
8054:          #define                                 RC5_bit             BANKMASK(PORTC), 5
8055:          extern volatile __bit _DEPRECATED       RC6                 @ (((unsigned) &PORTC)*8) + 6;
8056:          #define                                 RC6_bit             BANKMASK(PORTC), 6
8057:          extern volatile __bit _DEPRECATED       RC7                 @ (((unsigned) &PORTC)*8) + 7;
8058:          #define                                 RC7_bit             BANKMASK(PORTC), 7
8059:          extern volatile __bit                   RC8_9               @ (((unsigned) &RCSTA)*8) + 6;
8060:          #define                                 RC8_9_bit           BANKMASK(RCSTA), 6
8061:          extern volatile __bit                   RC9                 @ (((unsigned) &RCSTA)*8) + 6;
8062:          #define                                 RC9_bit             BANKMASK(RCSTA), 6
8063:          extern volatile __bit                   RCD8                @ (((unsigned) &RCSTA)*8) + 0;
8064:          #define                                 RCD8_bit            BANKMASK(RCSTA), 0
8065:          extern volatile __bit                   RCEN                @ (((unsigned) &SSPCON2)*8) + 3;
8066:          #define                                 RCEN_bit            BANKMASK(SSPCON2), 3
8067:          extern volatile __bit                   RCIDL               @ (((unsigned) &BAUDCON)*8) + 6;
8068:          #define                                 RCIDL_bit           BANKMASK(BAUDCON), 6
8069:          extern volatile __bit                   RCIE                @ (((unsigned) &PIE1)*8) + 5;
8070:          #define                                 RCIE_bit            BANKMASK(PIE1), 5
8071:          extern volatile __bit                   RCIF                @ (((unsigned) &PIR1)*8) + 5;
8072:          #define                                 RCIF_bit            BANKMASK(PIR1), 5
8073:          extern volatile __bit                   RCIP                @ (((unsigned) &IPR1)*8) + 5;
8074:          #define                                 RCIP_bit            BANKMASK(IPR1), 5
8075:          extern volatile __bit                   RCMT                @ (((unsigned) &BAUDCON)*8) + 6;
8076:          #define                                 RCMT_bit            BANKMASK(BAUDCON), 6
8077:          extern volatile __bit _DEPRECATED       RD                  @ (((unsigned) &EECON1)*8) + 0;
8078:          #define                                 RD_bit              BANKMASK(EECON1), 0
8079:          extern volatile __bit _DEPRECATED       RD0                 @ (((unsigned) &PORTD)*8) + 0;
8080:          #define                                 RD0_bit             BANKMASK(PORTD), 0
8081:          extern volatile __bit _DEPRECATED       RD1                 @ (((unsigned) &PORTD)*8) + 1;
8082:          #define                                 RD1_bit             BANKMASK(PORTD), 1
8083:          extern volatile __bit                   RD163               @ (((unsigned) &T3CON)*8) + 7;
8084:          #define                                 RD163_bit           BANKMASK(T3CON), 7
8085:          extern volatile __bit _DEPRECATED       RD2                 @ (((unsigned) &PORTD)*8) + 2;
8086:          #define                                 RD2_bit             BANKMASK(PORTD), 2
8087:          extern volatile __bit _DEPRECATED       RD3                 @ (((unsigned) &PORTD)*8) + 3;
8088:          #define                                 RD3_bit             BANKMASK(PORTD), 3
8089:          extern volatile __bit _DEPRECATED       RD4                 @ (((unsigned) &PORTD)*8) + 4;
8090:          #define                                 RD4_bit             BANKMASK(PORTD), 4
8091:          extern volatile __bit _DEPRECATED       RD5                 @ (((unsigned) &PORTD)*8) + 5;
8092:          #define                                 RD5_bit             BANKMASK(PORTD), 5
8093:          extern volatile __bit _DEPRECATED       RD6                 @ (((unsigned) &PORTD)*8) + 6;
8094:          #define                                 RD6_bit             BANKMASK(PORTD), 6
8095:          extern volatile __bit _DEPRECATED       RD7                 @ (((unsigned) &PORTD)*8) + 7;
8096:          #define                                 RD7_bit             BANKMASK(PORTD), 7
8097:          extern volatile __bit                   RDE                 @ (((unsigned) &PORTE)*8) + 0;
8098:          #define                                 RDE_bit             BANKMASK(PORTE), 0
8099:          extern volatile __bit _DEPRECATED       RE0                 @ (((unsigned) &PORTE)*8) + 0;
8100:          #define                                 RE0_bit             BANKMASK(PORTE), 0
8101:          extern volatile __bit _DEPRECATED       RE1                 @ (((unsigned) &PORTE)*8) + 1;
8102:          #define                                 RE1_bit             BANKMASK(PORTE), 1
8103:          extern volatile __bit _DEPRECATED       RE2                 @ (((unsigned) &PORTE)*8) + 2;
8104:          #define                                 RE2_bit             BANKMASK(PORTE), 2
8105:          extern volatile __bit _DEPRECATED       RE3                 @ (((unsigned) &PORTE)*8) + 3;
8106:          #define                                 RE3_bit             BANKMASK(PORTE), 3
8107:          extern volatile __bit                   RE4                 @ (((unsigned) &PORTE)*8) + 4;
8108:          #define                                 RE4_bit             BANKMASK(PORTE), 4
8109:          extern volatile __bit                   RE5                 @ (((unsigned) &PORTE)*8) + 5;
8110:          #define                                 RE5_bit             BANKMASK(PORTE), 5
8111:          extern volatile __bit                   RE6                 @ (((unsigned) &PORTE)*8) + 6;
8112:          #define                                 RE6_bit             BANKMASK(PORTE), 6
8113:          extern volatile __bit                   RE7                 @ (((unsigned) &PORTE)*8) + 7;
8114:          #define                                 RE7_bit             BANKMASK(PORTE), 7
8115:          extern volatile __bit                   RI                  @ (((unsigned) &RCON)*8) + 4;
8116:          #define                                 RI_bit              BANKMASK(RCON), 4
8117:          extern volatile __bit                   RJPU                @ (((unsigned) &PORTA)*8) + 7;
8118:          #define                                 RJPU_bit            BANKMASK(PORTA), 7
8119:          extern volatile __bit                   RSEN                @ (((unsigned) &SSPCON2)*8) + 1;
8120:          #define                                 RSEN_bit            BANKMASK(SSPCON2), 1
8121:          extern volatile __bit                   RW                  @ (((unsigned) &SSPSTAT)*8) + 2;
8122:          #define                                 RW_bit              BANKMASK(SSPSTAT), 2
8123:          extern volatile __bit                   RX                  @ (((unsigned) &PORTC)*8) + 7;
8124:          #define                                 RX_bit              BANKMASK(PORTC), 7
8125:          extern volatile __bit                   RX9                 @ (((unsigned) &RCSTA)*8) + 6;
8126:          #define                                 RX9_bit             BANKMASK(RCSTA), 6
8127:          extern volatile __bit                   RX9D                @ (((unsigned) &RCSTA)*8) + 0;
8128:          #define                                 RX9D_bit            BANKMASK(RCSTA), 0
8129:          extern volatile __bit                   RXCKP               @ (((unsigned) &BAUDCON)*8) + 5;
8130:          #define                                 RXCKP_bit           BANKMASK(BAUDCON), 5
8131:          extern volatile __bit                   RXDTP               @ (((unsigned) &BAUDCON)*8) + 5;
8132:          #define                                 RXDTP_bit           BANKMASK(BAUDCON), 5
8133:          extern volatile __bit                   R_NOT_W             @ (((unsigned) &SSPSTAT)*8) + 2;
8134:          #define                                 R_NOT_W_bit         BANKMASK(SSPSTAT), 2
8135:          extern volatile __bit                   R_W                 @ (((unsigned) &SSPSTAT)*8) + 2;
8136:          #define                                 R_W_bit             BANKMASK(SSPSTAT), 2
8137:          extern volatile __bit                   R_nW                @ (((unsigned) &SSPSTAT)*8) + 2;
8138:          #define                                 R_nW_bit            BANKMASK(SSPSTAT), 2
8139:          extern volatile __bit                   SBOREN              @ (((unsigned) &RCON)*8) + 6;
8140:          #define                                 SBOREN_bit          BANKMASK(RCON), 6
8141:          extern volatile __bit                   SCK                 @ (((unsigned) &PORTC)*8) + 3;
8142:          #define                                 SCK_bit             BANKMASK(PORTC), 3
8143:          extern volatile __bit                   SCKP                @ (((unsigned) &BAUDCON)*8) + 4;
8144:          #define                                 SCKP_bit            BANKMASK(BAUDCON), 4
8145:          extern volatile __bit                   SCL                 @ (((unsigned) &PORTC)*8) + 3;
8146:          #define                                 SCL_bit             BANKMASK(PORTC), 3
8147:          extern volatile __bit                   SCS0                @ (((unsigned) &OSCCON)*8) + 0;
8148:          #define                                 SCS0_bit            BANKMASK(OSCCON), 0
8149:          extern volatile __bit                   SCS1                @ (((unsigned) &OSCCON)*8) + 1;
8150:          #define                                 SCS1_bit            BANKMASK(OSCCON), 1
8151:          extern volatile __bit                   SDA                 @ (((unsigned) &PORTC)*8) + 4;
8152:          #define                                 SDA_bit             BANKMASK(PORTC), 4
8153:          extern volatile __bit                   SDI                 @ (((unsigned) &PORTC)*8) + 4;
8154:          #define                                 SDI_bit             BANKMASK(PORTC), 4
8155:          extern volatile __bit                   SDO                 @ (((unsigned) &PORTC)*8) + 5;
8156:          #define                                 SDO_bit             BANKMASK(PORTC), 5
8157:          extern volatile __bit                   SEN                 @ (((unsigned) &SSPCON2)*8) + 0;
8158:          #define                                 SEN_bit             BANKMASK(SSPCON2), 0
8159:          extern volatile __bit                   SENDB               @ (((unsigned) &TXSTA)*8) + 3;
8160:          #define                                 SENDB_bit           BANKMASK(TXSTA), 3
8161:          extern volatile __bit                   SENDB1              @ (((unsigned) &TXSTA)*8) + 3;
8162:          #define                                 SENDB1_bit          BANKMASK(TXSTA), 3
8163:          extern volatile __bit                   SMP                 @ (((unsigned) &SSPSTAT)*8) + 7;
8164:          #define                                 SMP_bit             BANKMASK(SSPSTAT), 7
8165:          extern volatile __bit                   SOSCEN              @ (((unsigned) &T1CON)*8) + 3;
8166:          #define                                 SOSCEN_bit          BANKMASK(T1CON), 3
8167:          extern volatile __bit                   SOSCEN3             @ (((unsigned) &T3CON)*8) + 3;
8168:          #define                                 SOSCEN3_bit         BANKMASK(T3CON), 3
8169:          extern volatile __bit                   SP0                 @ (((unsigned) &STKPTR)*8) + 0;
8170:          #define                                 SP0_bit             BANKMASK(STKPTR), 0
8171:          extern volatile __bit                   SP1                 @ (((unsigned) &STKPTR)*8) + 1;
8172:          #define                                 SP1_bit             BANKMASK(STKPTR), 1
8173:          extern volatile __bit                   SP2                 @ (((unsigned) &STKPTR)*8) + 2;
8174:          #define                                 SP2_bit             BANKMASK(STKPTR), 2
8175:          extern volatile __bit                   SP3                 @ (((unsigned) &STKPTR)*8) + 3;
8176:          #define                                 SP3_bit             BANKMASK(STKPTR), 3
8177:          extern volatile __bit                   SP4                 @ (((unsigned) &STKPTR)*8) + 4;
8178:          #define                                 SP4_bit             BANKMASK(STKPTR), 4
8179:          extern volatile __bit                   SPEN                @ (((unsigned) &RCSTA)*8) + 7;
8180:          #define                                 SPEN_bit            BANKMASK(RCSTA), 7
8181:          extern volatile __bit                   SREN                @ (((unsigned) &RCSTA)*8) + 5;
8182:          #define                                 SREN_bit            BANKMASK(RCSTA), 5
8183:          extern volatile __bit                   SRENA               @ (((unsigned) &RCSTA)*8) + 5;
8184:          #define                                 SRENA_bit           BANKMASK(RCSTA), 5
8185:          extern volatile __bit                   SS                  @ (((unsigned) &PORTA)*8) + 5;
8186:          #define                                 SS_bit              BANKMASK(PORTA), 5
8187:          extern volatile __bit                   SS2                 @ (((unsigned) &PORTD)*8) + 7;
8188:          #define                                 SS2_bit             BANKMASK(PORTD), 7
8189:          extern volatile __bit                   SSPEN               @ (((unsigned) &SSPCON1)*8) + 5;
8190:          #define                                 SSPEN_bit           BANKMASK(SSPCON1), 5
8191:          extern volatile __bit                   SSPIE               @ (((unsigned) &PIE1)*8) + 3;
8192:          #define                                 SSPIE_bit           BANKMASK(PIE1), 3
8193:          extern volatile __bit                   SSPIF               @ (((unsigned) &PIR1)*8) + 3;
8194:          #define                                 SSPIF_bit           BANKMASK(PIR1), 3
8195:          extern volatile __bit                   SSPIP               @ (((unsigned) &IPR1)*8) + 3;
8196:          #define                                 SSPIP_bit           BANKMASK(IPR1), 3
8197:          extern volatile __bit                   SSPM0               @ (((unsigned) &SSPCON1)*8) + 0;
8198:          #define                                 SSPM0_bit           BANKMASK(SSPCON1), 0
8199:          extern volatile __bit                   SSPM1               @ (((unsigned) &SSPCON1)*8) + 1;
8200:          #define                                 SSPM1_bit           BANKMASK(SSPCON1), 1
8201:          extern volatile __bit                   SSPM2               @ (((unsigned) &SSPCON1)*8) + 2;
8202:          #define                                 SSPM2_bit           BANKMASK(SSPCON1), 2
8203:          extern volatile __bit                   SSPM3               @ (((unsigned) &SSPCON1)*8) + 3;
8204:          #define                                 SSPM3_bit           BANKMASK(SSPCON1), 3
8205:          extern volatile __bit                   SSPOV               @ (((unsigned) &SSPCON1)*8) + 6;
8206:          #define                                 SSPOV_bit           BANKMASK(SSPCON1), 6
8207:          extern volatile __bit                   START               @ (((unsigned) &SSPSTAT)*8) + 3;
8208:          #define                                 START_bit           BANKMASK(SSPSTAT), 3
8209:          extern volatile __bit                   STKFUL              @ (((unsigned) &STKPTR)*8) + 7;
8210:          #define                                 STKFUL_bit          BANKMASK(STKPTR), 7
8211:          extern volatile __bit                   STKOVF              @ (((unsigned) &STKPTR)*8) + 7;
8212:          #define                                 STKOVF_bit          BANKMASK(STKPTR), 7
8213:          extern volatile __bit                   STKUNF              @ (((unsigned) &STKPTR)*8) + 6;
8214:          #define                                 STKUNF_bit          BANKMASK(STKPTR), 6
8215:          extern volatile __bit                   STOP                @ (((unsigned) &SSPSTAT)*8) + 4;
8216:          #define                                 STOP_bit            BANKMASK(SSPSTAT), 4
8217:          extern volatile __bit                   SWDTE               @ (((unsigned) &WDTCON)*8) + 0;
8218:          #define                                 SWDTE_bit           BANKMASK(WDTCON), 0
8219:          extern volatile __bit                   SWDTEN              @ (((unsigned) &WDTCON)*8) + 0;
8220:          #define                                 SWDTEN_bit          BANKMASK(WDTCON), 0
8221:          extern volatile __bit                   SYNC                @ (((unsigned) &TXSTA)*8) + 4;
8222:          #define                                 SYNC_bit            BANKMASK(TXSTA), 4
8223:          extern volatile __bit                   SYNC1               @ (((unsigned) &TXSTA)*8) + 4;
8224:          #define                                 SYNC1_bit           BANKMASK(TXSTA), 4
8225:          extern volatile __bit                   T016BIT             @ (((unsigned) &T0CON)*8) + 6;
8226:          #define                                 T016BIT_bit         BANKMASK(T0CON), 6
8227:          extern volatile __bit                   T08BIT              @ (((unsigned) &T0CON)*8) + 6;
8228:          #define                                 T08BIT_bit          BANKMASK(T0CON), 6
8229:          extern volatile __bit                   T0CKI               @ (((unsigned) &PORTA)*8) + 4;
8230:          #define                                 T0CKI_bit           BANKMASK(PORTA), 4
8231:          extern volatile __bit                   T0CS                @ (((unsigned) &T0CON)*8) + 5;
8232:          #define                                 T0CS_bit            BANKMASK(T0CON), 5
8233:          extern volatile __bit                   T0IE                @ (((unsigned) &INTCON)*8) + 5;
8234:          #define                                 T0IE_bit            BANKMASK(INTCON), 5
8235:          extern volatile __bit                   T0IF                @ (((unsigned) &INTCON)*8) + 2;
8236:          #define                                 T0IF_bit            BANKMASK(INTCON), 2
8237:          extern volatile __bit                   T0PS0               @ (((unsigned) &T0CON)*8) + 0;
8238:          #define                                 T0PS0_bit           BANKMASK(T0CON), 0
8239:          extern volatile __bit                   T0PS1               @ (((unsigned) &T0CON)*8) + 1;
8240:          #define                                 T0PS1_bit           BANKMASK(T0CON), 1
8241:          extern volatile __bit                   T0PS2               @ (((unsigned) &T0CON)*8) + 2;
8242:          #define                                 T0PS2_bit           BANKMASK(T0CON), 2
8243:          extern volatile __bit                   T0PS3               @ (((unsigned) &T0CON)*8) + 3;
8244:          #define                                 T0PS3_bit           BANKMASK(T0CON), 3
8245:          extern volatile __bit                   T0SE                @ (((unsigned) &T0CON)*8) + 4;
8246:          #define                                 T0SE_bit            BANKMASK(T0CON), 4
8247:          extern volatile __bit                   T13CKI              @ (((unsigned) &PORTC)*8) + 0;
8248:          #define                                 T13CKI_bit          BANKMASK(PORTC), 0
8249:          extern volatile __bit                   T1CKI               @ (((unsigned) &PORTC)*8) + 0;
8250:          #define                                 T1CKI_bit           BANKMASK(PORTC), 0
8251:          extern volatile __bit                   T1CKPS0             @ (((unsigned) &T1CON)*8) + 4;
8252:          #define                                 T1CKPS0_bit         BANKMASK(T1CON), 4
8253:          extern volatile __bit                   T1CKPS1             @ (((unsigned) &T1CON)*8) + 5;
8254:          #define                                 T1CKPS1_bit         BANKMASK(T1CON), 5
8255:          extern volatile __bit                   T1OSCEN             @ (((unsigned) &T1CON)*8) + 3;
8256:          #define                                 T1OSCEN_bit         BANKMASK(T1CON), 3
8257:          extern volatile __bit                   T1OSI               @ (((unsigned) &PORTC)*8) + 1;
8258:          #define                                 T1OSI_bit           BANKMASK(PORTC), 1
8259:          extern volatile __bit                   T1OSO               @ (((unsigned) &PORTC)*8) + 0;
8260:          #define                                 T1OSO_bit           BANKMASK(PORTC), 0
8261:          extern volatile __bit                   T1RD16              @ (((unsigned) &T1CON)*8) + 7;
8262:          #define                                 T1RD16_bit          BANKMASK(T1CON), 7
8263:          extern volatile __bit                   T1RUN               @ (((unsigned) &T1CON)*8) + 6;
8264:          #define                                 T1RUN_bit           BANKMASK(T1CON), 6
8265:          extern volatile __bit                   T1SYNC              @ (((unsigned) &T1CON)*8) + 2;
8266:          #define                                 T1SYNC_bit          BANKMASK(T1CON), 2
8267:          extern volatile __bit                   T2CKPS0             @ (((unsigned) &T2CON)*8) + 0;
8268:          #define                                 T2CKPS0_bit         BANKMASK(T2CON), 0
8269:          extern volatile __bit                   T2CKPS1             @ (((unsigned) &T2CON)*8) + 1;
8270:          #define                                 T2CKPS1_bit         BANKMASK(T2CON), 1
8271:          extern volatile __bit                   T2OUTPS0            @ (((unsigned) &T2CON)*8) + 3;
8272:          #define                                 T2OUTPS0_bit        BANKMASK(T2CON), 3
8273:          extern volatile __bit                   T2OUTPS1            @ (((unsigned) &T2CON)*8) + 4;
8274:          #define                                 T2OUTPS1_bit        BANKMASK(T2CON), 4
8275:          extern volatile __bit                   T2OUTPS2            @ (((unsigned) &T2CON)*8) + 5;
8276:          #define                                 T2OUTPS2_bit        BANKMASK(T2CON), 5
8277:          extern volatile __bit                   T2OUTPS3            @ (((unsigned) &T2CON)*8) + 6;
8278:          #define                                 T2OUTPS3_bit        BANKMASK(T2CON), 6
8279:          extern volatile __bit                   T3CCP1              @ (((unsigned) &T3CON)*8) + 3;
8280:          #define                                 T3CCP1_bit          BANKMASK(T3CON), 3
8281:          extern volatile __bit                   T3CCP2              @ (((unsigned) &T3CON)*8) + 6;
8282:          #define                                 T3CCP2_bit          BANKMASK(T3CON), 6
8283:          extern volatile __bit                   T3CKPS0             @ (((unsigned) &T3CON)*8) + 4;
8284:          #define                                 T3CKPS0_bit         BANKMASK(T3CON), 4
8285:          extern volatile __bit                   T3CKPS1             @ (((unsigned) &T3CON)*8) + 5;
8286:          #define                                 T3CKPS1_bit         BANKMASK(T3CON), 5
8287:          extern volatile __bit                   T3RD16              @ (((unsigned) &T3CON)*8) + 7;
8288:          #define                                 T3RD16_bit          BANKMASK(T3CON), 7
8289:          extern volatile __bit                   T3SYNC              @ (((unsigned) &T3CON)*8) + 2;
8290:          #define                                 T3SYNC_bit          BANKMASK(T3CON), 2
8291:          extern volatile __bit                   TMR0IE              @ (((unsigned) &INTCON)*8) + 5;
8292:          #define                                 TMR0IE_bit          BANKMASK(INTCON), 5
8293:          extern volatile __bit                   TMR0IF              @ (((unsigned) &INTCON)*8) + 2;
8294:          #define                                 TMR0IF_bit          BANKMASK(INTCON), 2
8295:          extern volatile __bit                   TMR0IP              @ (((unsigned) &INTCON2)*8) + 2;
8296:          #define                                 TMR0IP_bit          BANKMASK(INTCON2), 2
8297:          extern volatile __bit                   TMR0ON              @ (((unsigned) &T0CON)*8) + 7;
8298:          #define                                 TMR0ON_bit          BANKMASK(T0CON), 7
8299:          extern volatile __bit                   TMR1CS              @ (((unsigned) &T1CON)*8) + 1;
8300:          #define                                 TMR1CS_bit          BANKMASK(T1CON), 1
8301:          extern volatile __bit                   TMR1IE              @ (((unsigned) &PIE1)*8) + 0;
8302:          #define                                 TMR1IE_bit          BANKMASK(PIE1), 0
8303:          extern volatile __bit                   TMR1IF              @ (((unsigned) &PIR1)*8) + 0;
8304:          #define                                 TMR1IF_bit          BANKMASK(PIR1), 0
8305:          extern volatile __bit                   TMR1IP              @ (((unsigned) &IPR1)*8) + 0;
0474  0E00     MOVLW 0x0
0476  6E18     MOVWF 0x18, ACCESS
0478  0E00     MOVLW 0x0
047A  6E17     MOVWF bbytess, ACCESS
8306:          #define                                 TMR1IP_bit          BANKMASK(IPR1), 0
8307:          extern volatile __bit                   TMR1ON              @ (((unsigned) &T1CON)*8) + 0;
8308:          #define                                 TMR1ON_bit          BANKMASK(T1CON), 0
8309:          extern volatile __bit                   TMR2IE              @ (((unsigned) &PIE1)*8) + 1;
8310:          #define                                 TMR2IE_bit          BANKMASK(PIE1), 1
8311:          extern volatile __bit                   TMR2IF              @ (((unsigned) &PIR1)*8) + 1;
8312:          #define                                 TMR2IF_bit          BANKMASK(PIR1), 1
8313:          extern volatile __bit                   TMR2IP              @ (((unsigned) &IPR1)*8) + 1;
8314:          #define                                 TMR2IP_bit          BANKMASK(IPR1), 1
8315:          extern volatile __bit                   TMR2ON              @ (((unsigned) &T2CON)*8) + 2;
8316:          #define                                 TMR2ON_bit          BANKMASK(T2CON), 2
8317:          extern volatile __bit                   TMR3CS              @ (((unsigned) &T3CON)*8) + 1;
8318:          #define                                 TMR3CS_bit          BANKMASK(T3CON), 1
8319:          extern volatile __bit                   TMR3IE              @ (((unsigned) &PIE2)*8) + 1;
8320:          #define                                 TMR3IE_bit          BANKMASK(PIE2), 1
8321:          extern volatile __bit                   TMR3IF              @ (((unsigned) &PIR2)*8) + 1;
8322:          #define                                 TMR3IF_bit          BANKMASK(PIR2), 1
8323:          extern volatile __bit                   TMR3IP              @ (((unsigned) &IPR2)*8) + 1;
8324:          #define                                 TMR3IP_bit          BANKMASK(IPR2), 1
8325:          extern volatile __bit                   TMR3ON              @ (((unsigned) &T3CON)*8) + 0;
8326:          #define                                 TMR3ON_bit          BANKMASK(T3CON), 0
8327:          extern volatile __bit                   TO                  @ (((unsigned) &RCON)*8) + 3;
8328:          #define                                 TO_bit              BANKMASK(RCON), 3
8329:          extern volatile __bit                   TOUTPS0             @ (((unsigned) &T2CON)*8) + 3;
8330:          #define                                 TOUTPS0_bit         BANKMASK(T2CON), 3
8331:          extern volatile __bit                   TOUTPS1             @ (((unsigned) &T2CON)*8) + 4;
8332:          #define                                 TOUTPS1_bit         BANKMASK(T2CON), 4
8333:          extern volatile __bit                   TOUTPS2             @ (((unsigned) &T2CON)*8) + 5;
8334:          #define                                 TOUTPS2_bit         BANKMASK(T2CON), 5
8335:          extern volatile __bit                   TOUTPS3             @ (((unsigned) &T2CON)*8) + 6;
8336:          #define                                 TOUTPS3_bit         BANKMASK(T2CON), 6
8337:          extern volatile __bit                   TRISA0              @ (((unsigned) &TRISA)*8) + 0;
8338:          #define                                 TRISA0_bit          BANKMASK(TRISA), 0
8339:          extern volatile __bit                   TRISA1              @ (((unsigned) &TRISA)*8) + 1;
8340:          #define                                 TRISA1_bit          BANKMASK(TRISA), 1
8341:          extern volatile __bit                   TRISA2              @ (((unsigned) &TRISA)*8) + 2;
8342:          #define                                 TRISA2_bit          BANKMASK(TRISA), 2
8343:          extern volatile __bit                   TRISA3              @ (((unsigned) &TRISA)*8) + 3;
8344:          #define                                 TRISA3_bit          BANKMASK(TRISA), 3
8345:          extern volatile __bit                   TRISA4              @ (((unsigned) &TRISA)*8) + 4;
8346:          #define                                 TRISA4_bit          BANKMASK(TRISA), 4
8347:          extern volatile __bit                   TRISA5              @ (((unsigned) &TRISA)*8) + 5;
8348:          #define                                 TRISA5_bit          BANKMASK(TRISA), 5
8349:          extern volatile __bit                   TRISA6              @ (((unsigned) &TRISA)*8) + 6;
8350:          #define                                 TRISA6_bit          BANKMASK(TRISA), 6
8351:          extern volatile __bit                   TRISA7              @ (((unsigned) &TRISA)*8) + 7;
8352:          #define                                 TRISA7_bit          BANKMASK(TRISA), 7
8353:          extern volatile __bit                   TRISB0              @ (((unsigned) &TRISB)*8) + 0;
8354:          #define                                 TRISB0_bit          BANKMASK(TRISB), 0
8355:          extern volatile __bit                   TRISB1              @ (((unsigned) &TRISB)*8) + 1;
8356:          #define                                 TRISB1_bit          BANKMASK(TRISB), 1
8357:          extern volatile __bit                   TRISB2              @ (((unsigned) &TRISB)*8) + 2;
8358:          #define                                 TRISB2_bit          BANKMASK(TRISB), 2
8359:          extern volatile __bit                   TRISB3              @ (((unsigned) &TRISB)*8) + 3;
8360:          #define                                 TRISB3_bit          BANKMASK(TRISB), 3
8361:          extern volatile __bit                   TRISB4              @ (((unsigned) &TRISB)*8) + 4;
8362:          #define                                 TRISB4_bit          BANKMASK(TRISB), 4
8363:          extern volatile __bit                   TRISB5              @ (((unsigned) &TRISB)*8) + 5;
8364:          #define                                 TRISB5_bit          BANKMASK(TRISB), 5
8365:          extern volatile __bit                   TRISB6              @ (((unsigned) &TRISB)*8) + 6;
8366:          #define                                 TRISB6_bit          BANKMASK(TRISB), 6
8367:          extern volatile __bit                   TRISB7              @ (((unsigned) &TRISB)*8) + 7;
8368:          #define                                 TRISB7_bit          BANKMASK(TRISB), 7
8369:          extern volatile __bit                   TRISC0              @ (((unsigned) &TRISC)*8) + 0;
8370:          #define                                 TRISC0_bit          BANKMASK(TRISC), 0
8371:          extern volatile __bit                   TRISC1              @ (((unsigned) &TRISC)*8) + 1;
8372:          #define                                 TRISC1_bit          BANKMASK(TRISC), 1
8373:          extern volatile __bit                   TRISC2              @ (((unsigned) &TRISC)*8) + 2;
8374:          #define                                 TRISC2_bit          BANKMASK(TRISC), 2
8375:          extern volatile __bit                   TRISC3              @ (((unsigned) &TRISC)*8) + 3;
8376:          #define                                 TRISC3_bit          BANKMASK(TRISC), 3
8377:          extern volatile __bit                   TRISC4              @ (((unsigned) &TRISC)*8) + 4;
8378:          #define                                 TRISC4_bit          BANKMASK(TRISC), 4
8379:          extern volatile __bit                   TRISC5              @ (((unsigned) &TRISC)*8) + 5;
8380:          #define                                 TRISC5_bit          BANKMASK(TRISC), 5
8381:          extern volatile __bit                   TRISC6              @ (((unsigned) &TRISC)*8) + 6;
8382:          #define                                 TRISC6_bit          BANKMASK(TRISC), 6
8383:          extern volatile __bit                   TRISC7              @ (((unsigned) &TRISC)*8) + 7;
8384:          #define                                 TRISC7_bit          BANKMASK(TRISC), 7
8385:          extern volatile __bit                   TRISD0              @ (((unsigned) &TRISD)*8) + 0;
8386:          #define                                 TRISD0_bit          BANKMASK(TRISD), 0
8387:          extern volatile __bit                   TRISD1              @ (((unsigned) &TRISD)*8) + 1;
8388:          #define                                 TRISD1_bit          BANKMASK(TRISD), 1
8389:          extern volatile __bit                   TRISD2              @ (((unsigned) &TRISD)*8) + 2;
8390:          #define                                 TRISD2_bit          BANKMASK(TRISD), 2
8391:          extern volatile __bit                   TRISD3              @ (((unsigned) &TRISD)*8) + 3;
8392:          #define                                 TRISD3_bit          BANKMASK(TRISD), 3
8393:          extern volatile __bit                   TRISD4              @ (((unsigned) &TRISD)*8) + 4;
8394:          #define                                 TRISD4_bit          BANKMASK(TRISD), 4
8395:          extern volatile __bit                   TRISD5              @ (((unsigned) &TRISD)*8) + 5;
8396:          #define                                 TRISD5_bit          BANKMASK(TRISD), 5
8397:          extern volatile __bit                   TRISD6              @ (((unsigned) &TRISD)*8) + 6;
8398:          #define                                 TRISD6_bit          BANKMASK(TRISD), 6
8399:          extern volatile __bit                   TRISD7              @ (((unsigned) &TRISD)*8) + 7;
8400:          #define                                 TRISD7_bit          BANKMASK(TRISD), 7
8401:          extern volatile __bit                   TRISE0              @ (((unsigned) &TRISE)*8) + 0;
8402:          #define                                 TRISE0_bit          BANKMASK(TRISE), 0
8403:          extern volatile __bit                   TRISE1              @ (((unsigned) &TRISE)*8) + 1;
8404:          #define                                 TRISE1_bit          BANKMASK(TRISE), 1
8405:          extern volatile __bit                   TRISE2              @ (((unsigned) &TRISE)*8) + 2;
8406:          #define                                 TRISE2_bit          BANKMASK(TRISE), 2
8407:          extern volatile __bit                   TRMT                @ (((unsigned) &TXSTA)*8) + 1;
8408:          #define                                 TRMT_bit            BANKMASK(TXSTA), 1
8409:          extern volatile __bit                   TRMT1               @ (((unsigned) &TXSTA)*8) + 1;
8410:          #define                                 TRMT1_bit           BANKMASK(TXSTA), 1
8411:          extern volatile __bit                   TUN0                @ (((unsigned) &OSCTUNE)*8) + 0;
8412:          #define                                 TUN0_bit            BANKMASK(OSCTUNE), 0
8413:          extern volatile __bit                   TUN1                @ (((unsigned) &OSCTUNE)*8) + 1;
8414:          #define                                 TUN1_bit            BANKMASK(OSCTUNE), 1
8415:          extern volatile __bit                   TUN2                @ (((unsigned) &OSCTUNE)*8) + 2;
8416:          #define                                 TUN2_bit            BANKMASK(OSCTUNE), 2
8417:          extern volatile __bit                   TUN3                @ (((unsigned) &OSCTUNE)*8) + 3;
8418:          #define                                 TUN3_bit            BANKMASK(OSCTUNE), 3
8419:          extern volatile __bit                   TUN4                @ (((unsigned) &OSCTUNE)*8) + 4;
8420:          #define                                 TUN4_bit            BANKMASK(OSCTUNE), 4
8421:          extern volatile __bit                   TX                  @ (((unsigned) &PORTC)*8) + 6;
8422:          #define                                 TX_bit              BANKMASK(PORTC), 6
8423:          extern volatile __bit                   TX1IE               @ (((unsigned) &PIE1)*8) + 4;
8424:          #define                                 TX1IE_bit           BANKMASK(PIE1), 4
8425:          extern volatile __bit                   TX1IF               @ (((unsigned) &PIR1)*8) + 4;
8426:          #define                                 TX1IF_bit           BANKMASK(PIR1), 4
8427:          extern volatile __bit                   TX1IP               @ (((unsigned) &IPR1)*8) + 4;
8428:          #define                                 TX1IP_bit           BANKMASK(IPR1), 4
8429:          extern volatile __bit                   TX8_9               @ (((unsigned) &TXSTA)*8) + 6;
8430:          #define                                 TX8_9_bit           BANKMASK(TXSTA), 6
8431:          extern volatile __bit                   TX9                 @ (((unsigned) &TXSTA)*8) + 6;
8432:          #define                                 TX9_bit             BANKMASK(TXSTA), 6
8433:          extern volatile __bit                   TX91                @ (((unsigned) &TXSTA)*8) + 6;
8434:          #define                                 TX91_bit            BANKMASK(TXSTA), 6
8435:          extern volatile __bit                   TX9D                @ (((unsigned) &TXSTA)*8) + 0;
8436:          #define                                 TX9D_bit            BANKMASK(TXSTA), 0
8437:          extern volatile __bit                   TX9D1               @ (((unsigned) &TXSTA)*8) + 0;
8438:          #define                                 TX9D1_bit           BANKMASK(TXSTA), 0
8439:          extern volatile __bit                   TXCKP               @ (((unsigned) &BAUDCON)*8) + 4;
8440:          #define                                 TXCKP_bit           BANKMASK(BAUDCON), 4
8441:          extern volatile __bit                   TXD8                @ (((unsigned) &TXSTA)*8) + 0;
8442:          #define                                 TXD8_bit            BANKMASK(TXSTA), 0
8443:          extern volatile __bit                   TXEN                @ (((unsigned) &TXSTA)*8) + 5;
8444:          #define                                 TXEN_bit            BANKMASK(TXSTA), 5
8445:          extern volatile __bit                   TXEN1               @ (((unsigned) &TXSTA)*8) + 5;
8446:          #define                                 TXEN1_bit           BANKMASK(TXSTA), 5
8447:          extern volatile __bit                   TXIE                @ (((unsigned) &PIE1)*8) + 4;
8448:          #define                                 TXIE_bit            BANKMASK(PIE1), 4
8449:          extern volatile __bit                   TXIF                @ (((unsigned) &PIR1)*8) + 4;
8450:          #define                                 TXIF_bit            BANKMASK(PIR1), 4
8451:          extern volatile __bit                   TXIP                @ (((unsigned) &IPR1)*8) + 4;
8452:          #define                                 TXIP_bit            BANKMASK(IPR1), 4
8453:          extern volatile __bit                   UA                  @ (((unsigned) &SSPSTAT)*8) + 1;
8454:          #define                                 UA_bit              BANKMASK(SSPSTAT), 1
8455:          extern volatile __bit                   ULPWUIN             @ (((unsigned) &PORTA)*8) + 0;
8456:          #define                                 ULPWUIN_bit         BANKMASK(PORTA), 0
8457:          extern volatile __bit                   VCFG0               @ (((unsigned) &ADCON1)*8) + 4;
8458:          #define                                 VCFG0_bit           BANKMASK(ADCON1), 4
8459:          extern volatile __bit                   VCFG01              @ (((unsigned) &ADCON1)*8) + 4;
8460:          #define                                 VCFG01_bit          BANKMASK(ADCON1), 4
8461:          extern volatile __bit                   VCFG1               @ (((unsigned) &ADCON1)*8) + 5;
8462:          #define                                 VCFG1_bit           BANKMASK(ADCON1), 5
8463:          extern volatile __bit                   VCFG11              @ (((unsigned) &ADCON1)*8) + 5;
8464:          #define                                 VCFG11_bit          BANKMASK(ADCON1), 5
8465:          extern volatile __bit                   VDIRMAG             @ (((unsigned) &HLVDCON)*8) + 7;
8466:          #define                                 VDIRMAG_bit         BANKMASK(HLVDCON), 7
8467:          extern volatile __bit                   VPP                 @ (((unsigned) &PORTE)*8) + 3;
8468:          #define                                 VPP_bit             BANKMASK(PORTE), 3
8469:          extern volatile __bit                   VREFN               @ (((unsigned) &PORTA)*8) + 2;
8470:          #define                                 VREFN_bit           BANKMASK(PORTA), 2
8471:          extern volatile __bit                   VREFP               @ (((unsigned) &PORTA)*8) + 3;
8472:          #define                                 VREFP_bit           BANKMASK(PORTA), 3
8473:          extern volatile __bit                   W4E                 @ (((unsigned) &BAUDCON)*8) + 1;
8474:          #define                                 W4E_bit             BANKMASK(BAUDCON), 1
8475:          extern volatile __bit                   WAIT0               @ (((unsigned) &PR2)*8) + 4;
8476:          #define                                 WAIT0_bit           BANKMASK(PR2), 4
8477:          extern volatile __bit                   WAIT1               @ (((unsigned) &PR2)*8) + 5;
8478:          #define                                 WAIT1_bit           BANKMASK(PR2), 5
8479:          extern volatile __bit                   WCOL                @ (((unsigned) &SSPCON1)*8) + 7;
8480:          #define                                 WCOL_bit            BANKMASK(SSPCON1), 7
8481:          extern volatile __bit                   WM0                 @ (((unsigned) &PR2)*8) + 0;
8482:          #define                                 WM0_bit             BANKMASK(PR2), 0
8483:          extern volatile __bit                   WM1                 @ (((unsigned) &PR2)*8) + 1;
8484:          #define                                 WM1_bit             BANKMASK(PR2), 1
8485:          extern volatile __bit _DEPRECATED       WR                  @ (((unsigned) &EECON1)*8) + 1;
8486:          #define                                 WR_bit              BANKMASK(EECON1), 1
8487:          extern volatile __bit                   WRE                 @ (((unsigned) &PORTE)*8) + 1;
8488:          #define                                 WRE_bit             BANKMASK(PORTE), 1
8489:          extern volatile __bit                   WREN                @ (((unsigned) &EECON1)*8) + 2;
8490:          #define                                 WREN_bit            BANKMASK(EECON1), 2
8491:          extern volatile __bit                   WRERR               @ (((unsigned) &EECON1)*8) + 3;
8492:          #define                                 WRERR_bit           BANKMASK(EECON1), 3
8493:          extern volatile __bit                   WUE                 @ (((unsigned) &BAUDCON)*8) + 1;
8494:          #define                                 WUE_bit             BANKMASK(BAUDCON), 1
8495:          extern volatile __bit                   ZERO                @ (((unsigned) &STATUS)*8) + 2;
8496:          #define                                 ZERO_bit            BANKMASK(STATUS), 2
8497:          extern volatile __bit                   nA                  @ (((unsigned) &SSPSTAT)*8) + 5;
8498:          #define                                 nA_bit              BANKMASK(SSPSTAT), 5
8499:          extern volatile __bit                   nADDRESS            @ (((unsigned) &SSPSTAT)*8) + 5;
8500:          #define                                 nADDRESS_bit        BANKMASK(SSPSTAT), 5
8501:          extern volatile __bit                   nBOR                @ (((unsigned) &RCON)*8) + 0;
8502:          #define                                 nBOR_bit            BANKMASK(RCON), 0
8503:          extern volatile __bit                   nCS                 @ (((unsigned) &PORTE)*8) + 2;
8504:          #define                                 nCS_bit             BANKMASK(PORTE), 2
8505:          extern volatile __bit                   nDONE               @ (((unsigned) &ADCON0)*8) + 1;
8506:          #define                                 nDONE_bit           BANKMASK(ADCON0), 1
8507:          extern volatile __bit                   nMCLR               @ (((unsigned) &PORTE)*8) + 3;
8508:          #define                                 nMCLR_bit           BANKMASK(PORTE), 3
8509:          extern volatile __bit                   nPD                 @ (((unsigned) &RCON)*8) + 2;
8510:          #define                                 nPD_bit             BANKMASK(RCON), 2
8511:          extern volatile __bit                   nPOR                @ (((unsigned) &RCON)*8) + 1;
8512:          #define                                 nPOR_bit            BANKMASK(RCON), 1
8513:          extern volatile __bit                   nRBPU               @ (((unsigned) &INTCON2)*8) + 7;
8514:          #define                                 nRBPU_bit           BANKMASK(INTCON2), 7
8515:          extern volatile __bit                   nRD                 @ (((unsigned) &PORTE)*8) + 0;
8516:          #define                                 nRD_bit             BANKMASK(PORTE), 0
8517:          extern volatile __bit                   nRI                 @ (((unsigned) &RCON)*8) + 4;
8518:          #define                                 nRI_bit             BANKMASK(RCON), 4
8519:          extern volatile __bit                   nSS                 @ (((unsigned) &PORTA)*8) + 5;
8520:          #define                                 nSS_bit             BANKMASK(PORTA), 5
8521:          extern volatile __bit                   nT1SYNC             @ (((unsigned) &T1CON)*8) + 2;
8522:          #define                                 nT1SYNC_bit         BANKMASK(T1CON), 2
8523:          extern volatile __bit                   nT3SYNC             @ (((unsigned) &T3CON)*8) + 2;
8524:          #define                                 nT3SYNC_bit         BANKMASK(T3CON), 2
8525:          extern volatile __bit                   nTO                 @ (((unsigned) &RCON)*8) + 3;
8526:          #define                                 nTO_bit             BANKMASK(RCON), 3
8527:          extern volatile __bit                   nW                  @ (((unsigned) &SSPSTAT)*8) + 2;
8528:          #define                                 nW_bit              BANKMASK(SSPSTAT), 2
8529:          extern volatile __bit                   nWR                 @ (((unsigned) &PORTE)*8) + 1;
8530:          #define                                 nWR_bit             BANKMASK(PORTE), 1
8531:          extern volatile __bit                   nWRITE              @ (((unsigned) &SSPSTAT)*8) + 2;
8532:          #define                                 nWRITE_bit          BANKMASK(SSPSTAT), 2
8533:          
8534:          #endif // _PIC18F4520_H_
